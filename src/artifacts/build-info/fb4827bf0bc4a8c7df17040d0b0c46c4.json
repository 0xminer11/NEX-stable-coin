{
	"id": "fb4827bf0bc4a8c7df17040d0b0c46c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/NEXEngine.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\nimport {NEX} from \"./NEX.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\npragma solidity ^0.8.19;\n\n/**\n * NEX : Decentralized Stable Coin\n * @author : 0xminer11\n * NEX is a decentralized stable coin that is pegged to the US Dollar.\n * This contract will handle the minting and burning of the NEX token.\n *\n */\ncontract NEXEngine is ReentrancyGuard {\n    // ************************** //\n    //        Errors               //\n    // *************************** //\n\n    error NEXEngine_NeedsMoreThanZero();\n    error NEXEngine_ColletralNotAllowed();\n    error NEXEngine_DepositeFailed();\n    error NEXEngine_RedeemFailed();\n    error NEXEngine_burnFailed();\n\n    // *********************************** //\n    //        State Variables              //\n    // *********************************** //\n\n    NEX private immutable _nex;\n\n    mapping(address token => address priceFeed) private _priceFeeds;\n    mapping(address token => uint256) private _collateralDeposited;\n    mapping(address user => uint256 amount) private s_NexMinted;\n\n    // *********************//\n    //       Events         //\n    // ******************** //\n\n    event DepositeColletral(address indexed user, address indexed colletral, uint256 amount);\n\n    // ************************** //\n    //        Modifiers           //\n    // ************************** //\n\n    modifier moreThanZero(uint256 amount) {\n        if (amount == 0) {\n            revert NEXEngine_NeedsMoreThanZero();\n        }\n        _;\n    }\n\n    modifier isAllowed(address _collateral) {\n        if (_priceFeeds[_collateral] == address(0)) {\n            revert NEXEngine_ColletralNotAllowed();\n            _;\n        }\n    }\n\n    constructor(address _colletral, address _priceFeed, address _stableCoin) {\n        _priceFeeds[_colletral] = _priceFeed;\n        _nex = NEX(_stableCoin);\n    }\n\n    // *********************************** //\n    //        External Functions           //\n    // *********************************** //\n    function depositeColletralMintNEX(\n        address tokenCollateralAddress,\n        uint256 amountCollateral,\n        uint256 amountNexToMint) external nonReentrant {\n            _depositeCollateral(tokenCollateralAddress,amountCollateral);\n            mintNEX(amountNexToMint);\n    }\n\n    function _depositeCollateral(address _colletral, uint256 _amount) internal{\n        // Transfer the colletral to this contract\n        // Calculate the value of the colletral\n        // Mint NEX tokens\n        _collateralDeposited[msg.sender] += _amount;\n        bool success =IERC20(_colletral).transferFrom(msg.sender, address(this), _amount);\n        if (!success) {\n            revert NEXEngine_DepositeFailed();\n        }\n        emit DepositeColletral(msg.sender, _colletral, _amount) ;\n    }\n\n    function redeemCollectral(\n        address tokenCollateralAddress,\n        uint256 amountCollateral ) \n        external \n        nonReentrant\n        moreThanZero(amountCollateral)\n        {\n            _redeemCollateral(tokenCollateralAddress, amountCollateral, msg.sender);\n        }\n\n    function redeemColletralForNex(\n        address tokenCollateralAddress,\n        uint256 collateralAmount,\n        uint256 nexAmount)\n        external {\n        _burnNEX(nexAmount,msg.sender,msg.sender);\n        _redeemCollateral(tokenCollateralAddress,collateralAmount,msg.sender);\n    }   \n\n    function _burnNEX(uint256 amountNexToburn, address onbehalf,address fromnex) internal {\n        s_NexMinted[onbehalf] -= amountNexToburn;\n\n        bool success = _nex.transferFrom(fromnex,address(this), amountNexToburn);\n\n        if(!success){\n            revert NEXEngine_burnFailed();\n        }\n    }\n\n    function mintNEX(uint256 _amountNexToMint) internal {\n        s_NexMinted[msg.sender] += _amountNexToMint;\n\n        // check health Factor of user\n        // logic Here\n\n        // Mint Nex Stable Coin\n        _nex.mint(msg.sender, _amountNexToMint);\n\n    }\n\n    function liquidate() external {}\n\n    function getHealthFactor() external {}\n\n    function _redeemCollateral(address collateralAddress,uint256 amountCollateral,address to) private {\n        _collateralDeposited[msg.sender] -= amountCollateral;\n\n        bool success = IERC20(collateralAddress).transfer(to, amountCollateral);\n\n        if (!success){\n            revert NEXEngine_RedeemFailed();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"src/NEX.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.20;\n\nimport {ERC20Burnable, ERC20} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/*\n    * NEX : Decentralized Stable Coin\n    * Author : 0xminer11\n    * NEX is a decentralized stable coin that is pegged to the US Dollar.\n    * It is backed by a basket of cryptocurrencies and is governed by a DAO.\n    * The NEX token is used for governance and as a medium of exchange.\n    * Minting : Algorithmic\n    * This contract is meant to be governed by a NEXEngine. This contract is just ERC20 Implementation of our stable coin.\n*/\n\ncontract NEX is ERC20Burnable, Ownable {\n\n    constructor(string memory _name, string memory _symbol,address initialOwner) ERC20(_name, _symbol) Ownable(initialOwner){\n        trustedMinters[initialOwner]=true;\n    }\n    error NEX_MustBeGreaterThanZero();\n    error NEX_InsufficientBalance();\n    error NotZeroAddress();\n\n    mapping(address user=> bool ) private trustedMinters;\n\n    modifier isTrustedMinter(address _user) {\n        require(trustedMinters[_user],\"Not Trusted Minter\");\n        _;\n    }\n\n    function burn(uint256 amount) public override onlyOwner {\n        uint256 balance = balanceOf(msg.sender);\n        if (amount == 0) {\n            revert NEX_MustBeGreaterThanZero();\n        }\n        if (amount > balance) {\n            revert NEX_InsufficientBalance();\n        }\n        super.burn(amount);\n    }\n\n    function mint(address to, uint256 amount) public isTrustedMinter(msg.sender) {\n        require(to != address(0), \"NEX: mint to the zero address\");\n        require(amount > 0, \"NEX: mint amount must be greater than zero\");\n        _mint(to, amount);\n    }\n\n    function setauthorisedEngine(address _engine) external onlyOwner {\n     require(!trustedMinters[_engine], \"NEX: Allready trusted minter\");\n     require(_engine != address(0), \"NEX: Authorised Engine cannot be zero\");\n     trustedMinters[_engine] = true;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/NEX.sol": {
				"NEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEX_InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEX_MustBeGreaterThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_engine",
									"type": "address"
								}
							],
							"name": "setauthorisedEngine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/NEX.sol\":682:2032  contract NEX is ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/NEX.sol\":728:898  constructor(string memory _name, string memory _symbol,address initialOwner) ERC20(_name, _symbol) Ownable(initialOwner){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/NEX.sol\":835:847  initialOwner */\n  dup1\n    /* \"src/NEX.sol\":811:816  _name */\n  dup4\n    /* \"src/NEX.sol\":818:825  _symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"src/NEX.sol\":887:891  true */\n  0x01\n    /* \"src/NEX.sol\":858:872  trustedMinters */\n  0x06\n    /* \"src/NEX.sol\":858:886  trustedMinters[initialOwner] */\n  0x00\n    /* \"src/NEX.sol\":873:885  initialOwner */\n  dup4\n    /* \"src/NEX.sol\":858:886  trustedMinters[initialOwner] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"src/NEX.sol\":858:891  trustedMinters[initialOwner]=true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/NEX.sol\":728:898  constructor(string memory _name, string memory _symbol,address initialOwner) ERC20(_name, _symbol) Ownable(initialOwner){... */\n  pop\n  pop\n  pop\n    /* \"src/NEX.sol\":682:2032  contract NEX is ERC20Burnable, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_20:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_22:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_23:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_24:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_25:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_26:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_27:\n    /* \"#utility.yul\":957:984   */\n  tag_66\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_25\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_68\n  tag_26\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1030:1118   */\ntag_67:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_28:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_70\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_71\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_27\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_29:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_74\n  tag_26\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1434:1490   */\ntag_73:\n    /* \"#utility.yul\":1508:1537   */\n  tag_75\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_25\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_30:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_31:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_78\n    /* \"#utility.yul\":1885:1934   */\n  tag_79\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_29\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1869:1935   */\n  tag_28\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_81\n  tag_24\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2010:2122   */\ntag_80:\n    /* \"#utility.yul\":2131:2183   */\n  tag_82\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_30\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_32:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_85\n  tag_23\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2292:2414   */\ntag_84:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_86\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_31\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_33:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_34:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_89\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_33\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_35:\n    /* \"#utility.yul\":2877:2901   */\n  tag_91\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  0x00\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_92:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_36:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_94\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_35\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:4090   */\ntag_3:\n    /* \"#utility.yul\":3189:3195   */\n  0x00\n    /* \"#utility.yul\":3197:3203   */\n  0x00\n    /* \"#utility.yul\":3205:3211   */\n  0x00\n    /* \"#utility.yul\":3254:3256   */\n  0x60\n    /* \"#utility.yul\":3242:3251   */\n  dup5\n    /* \"#utility.yul\":3233:3240   */\n  dup7\n    /* \"#utility.yul\":3229:3252   */\n  sub\n    /* \"#utility.yul\":3225:3257   */\n  slt\n    /* \"#utility.yul\":3222:3341   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3260:3339   */\n  tag_97\n  tag_21\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3222:3341   */\ntag_96:\n    /* \"#utility.yul\":3401:3402   */\n  0x00\n    /* \"#utility.yul\":3390:3399   */\n  dup5\n    /* \"#utility.yul\":3386:3403   */\n  add\n    /* \"#utility.yul\":3380:3404   */\n  mload\n    /* \"#utility.yul\":3431:3449   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3423:3429   */\n  dup2\n    /* \"#utility.yul\":3420:3450   */\n  gt\n    /* \"#utility.yul\":3417:3534   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3453:3532   */\n  tag_99\n  tag_22\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3417:3534   */\ntag_98:\n    /* \"#utility.yul\":3558:3632   */\n  tag_100\n    /* \"#utility.yul\":3624:3631   */\n  dup7\n    /* \"#utility.yul\":3615:3621   */\n  dup3\n    /* \"#utility.yul\":3604:3613   */\n  dup8\n    /* \"#utility.yul\":3600:3622   */\n  add\n    /* \"#utility.yul\":3558:3632   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":3548:3632   */\n  swap4\n  pop\n    /* \"#utility.yul\":3351:3642   */\n  pop\n    /* \"#utility.yul\":3702:3704   */\n  0x20\n    /* \"#utility.yul\":3691:3700   */\n  dup5\n    /* \"#utility.yul\":3687:3705   */\n  add\n    /* \"#utility.yul\":3681:3706   */\n  mload\n    /* \"#utility.yul\":3733:3751   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3725:3731   */\n  dup2\n    /* \"#utility.yul\":3722:3752   */\n  gt\n    /* \"#utility.yul\":3719:3836   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":3755:3834   */\n  tag_102\n  tag_22\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3719:3836   */\ntag_101:\n    /* \"#utility.yul\":3860:3934   */\n  tag_103\n    /* \"#utility.yul\":3926:3933   */\n  dup7\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3906:3915   */\n  dup8\n    /* \"#utility.yul\":3902:3924   */\n  add\n    /* \"#utility.yul\":3860:3934   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3850:3934   */\n  swap3\n  pop\n    /* \"#utility.yul\":3652:3944   */\n  pop\n    /* \"#utility.yul\":3983:3985   */\n  0x40\n    /* \"#utility.yul\":4009:4073   */\n  tag_104\n    /* \"#utility.yul\":4065:4072   */\n  dup7\n    /* \"#utility.yul\":4056:4062   */\n  dup3\n    /* \"#utility.yul\":4045:4054   */\n  dup8\n    /* \"#utility.yul\":4041:4063   */\n  add\n    /* \"#utility.yul\":4009:4073   */\n  tag_36\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":3999:4073   */\n  swap2\n  pop\n    /* \"#utility.yul\":3954:4083   */\n  pop\n    /* \"#utility.yul\":3081:4090   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4096:4195   */\ntag_37:\n    /* \"#utility.yul\":4148:4154   */\n  0x00\n    /* \"#utility.yul\":4182:4187   */\n  dup2\n    /* \"#utility.yul\":4176:4188   */\n  mload\n    /* \"#utility.yul\":4166:4188   */\n  swap1\n  pop\n    /* \"#utility.yul\":4096:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4381   */\ntag_38:\n    /* \"#utility.yul\":4249:4326   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4246:4247   */\n  0x00\n    /* \"#utility.yul\":4239:4327   */\n  mstore\n    /* \"#utility.yul\":4346:4350   */\n  0x22\n    /* \"#utility.yul\":4343:4344   */\n  0x04\n    /* \"#utility.yul\":4336:4351   */\n  mstore\n    /* \"#utility.yul\":4370:4374   */\n  0x24\n    /* \"#utility.yul\":4367:4368   */\n  0x00\n    /* \"#utility.yul\":4360:4375   */\n  revert\n    /* \"#utility.yul\":4387:4707   */\ntag_39:\n    /* \"#utility.yul\":4431:4437   */\n  0x00\n    /* \"#utility.yul\":4468:4469   */\n  0x02\n    /* \"#utility.yul\":4462:4466   */\n  dup3\n    /* \"#utility.yul\":4458:4470   */\n  div\n    /* \"#utility.yul\":4448:4470   */\n  swap1\n  pop\n    /* \"#utility.yul\":4515:4516   */\n  0x01\n    /* \"#utility.yul\":4509:4513   */\n  dup3\n    /* \"#utility.yul\":4505:4517   */\n  and\n    /* \"#utility.yul\":4536:4554   */\n  dup1\n    /* \"#utility.yul\":4526:4607   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4592:4596   */\n  0x7f\n    /* \"#utility.yul\":4584:4590   */\n  dup3\n    /* \"#utility.yul\":4580:4597   */\n  and\n    /* \"#utility.yul\":4570:4597   */\n  swap2\n  pop\n    /* \"#utility.yul\":4526:4607   */\ntag_108:\n    /* \"#utility.yul\":4654:4656   */\n  0x20\n    /* \"#utility.yul\":4646:4652   */\n  dup3\n    /* \"#utility.yul\":4643:4657   */\n  lt\n    /* \"#utility.yul\":4623:4641   */\n  dup2\n    /* \"#utility.yul\":4620:4658   */\n  sub\n    /* \"#utility.yul\":4617:4701   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":4673:4691   */\n  tag_110\n  tag_38\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4617:4701   */\ntag_109:\n    /* \"#utility.yul\":4438:4707   */\n  pop\n    /* \"#utility.yul\":4387:4707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4713:4854   */\ntag_40:\n    /* \"#utility.yul\":4762:4766   */\n  0x00\n    /* \"#utility.yul\":4785:4788   */\n  dup2\n    /* \"#utility.yul\":4777:4788   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4811   */\n  dup2\n    /* \"#utility.yul\":4805:4806   */\n  0x00\n    /* \"#utility.yul\":4798:4812   */\n  mstore\n    /* \"#utility.yul\":4842:4846   */\n  0x20\n    /* \"#utility.yul\":4839:4840   */\n  0x00\n    /* \"#utility.yul\":4829:4847   */\n  keccak256\n    /* \"#utility.yul\":4821:4847   */\n  swap1\n  pop\n    /* \"#utility.yul\":4713:4854   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4860:4953   */\ntag_41:\n    /* \"#utility.yul\":4897:4903   */\n  0x00\n    /* \"#utility.yul\":4944:4946   */\n  0x20\n    /* \"#utility.yul\":4939:4941   */\n  0x1f\n    /* \"#utility.yul\":4932:4937   */\n  dup4\n    /* \"#utility.yul\":4928:4942   */\n  add\n    /* \"#utility.yul\":4924:4947   */\n  div\n    /* \"#utility.yul\":4914:4947   */\n  swap1\n  pop\n    /* \"#utility.yul\":4860:4953   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5066   */\ntag_42:\n    /* \"#utility.yul\":5003:5011   */\n  0x00\n    /* \"#utility.yul\":5053:5058   */\n  dup3\n    /* \"#utility.yul\":5047:5051   */\n  dup3\n    /* \"#utility.yul\":5043:5059   */\n  shl\n    /* \"#utility.yul\":5022:5059   */\n  swap1\n  pop\n    /* \"#utility.yul\":4959:5066   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5072:5465   */\ntag_43:\n    /* \"#utility.yul\":5141:5147   */\n  0x00\n    /* \"#utility.yul\":5191:5192   */\n  0x08\n    /* \"#utility.yul\":5179:5189   */\n  dup4\n    /* \"#utility.yul\":5175:5193   */\n  mul\n    /* \"#utility.yul\":5214:5311   */\n  tag_115\n    /* \"#utility.yul\":5244:5310   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5233:5242   */\n  dup3\n    /* \"#utility.yul\":5214:5311   */\n  tag_42\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5332:5371   */\n  tag_116\n    /* \"#utility.yul\":5362:5370   */\n  dup7\n    /* \"#utility.yul\":5351:5360   */\n  dup4\n    /* \"#utility.yul\":5332:5371   */\n  tag_42\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5320:5371   */\n  swap6\n  pop\n    /* \"#utility.yul\":5404:5408   */\n  dup1\n    /* \"#utility.yul\":5400:5409   */\n  not\n    /* \"#utility.yul\":5393:5398   */\n  dup5\n    /* \"#utility.yul\":5389:5410   */\n  and\n    /* \"#utility.yul\":5380:5410   */\n  swap4\n  pop\n    /* \"#utility.yul\":5453:5457   */\n  dup1\n    /* \"#utility.yul\":5443:5451   */\n  dup7\n    /* \"#utility.yul\":5439:5458   */\n  and\n    /* \"#utility.yul\":5432:5437   */\n  dup5\n    /* \"#utility.yul\":5429:5459   */\n  or\n    /* \"#utility.yul\":5419:5459   */\n  swap3\n  pop\n    /* \"#utility.yul\":5148:5465   */\n  pop\n  pop\n    /* \"#utility.yul\":5072:5465   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5471:5548   */\ntag_44:\n    /* \"#utility.yul\":5508:5515   */\n  0x00\n    /* \"#utility.yul\":5537:5542   */\n  dup2\n    /* \"#utility.yul\":5526:5542   */\n  swap1\n  pop\n    /* \"#utility.yul\":5471:5548   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5554:5614   */\ntag_45:\n    /* \"#utility.yul\":5582:5585   */\n  0x00\n    /* \"#utility.yul\":5603:5608   */\n  dup2\n    /* \"#utility.yul\":5596:5608   */\n  swap1\n  pop\n    /* \"#utility.yul\":5554:5614   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5620:5762   */\ntag_46:\n    /* \"#utility.yul\":5670:5679   */\n  0x00\n    /* \"#utility.yul\":5703:5756   */\n  tag_120\n    /* \"#utility.yul\":5721:5755   */\n  tag_121\n    /* \"#utility.yul\":5730:5754   */\n  tag_122\n    /* \"#utility.yul\":5748:5753   */\n  dup5\n    /* \"#utility.yul\":5730:5754   */\n  tag_44\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5721:5755   */\n  tag_45\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5703:5756   */\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5690:5756   */\n  swap1\n  pop\n    /* \"#utility.yul\":5620:5762   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5768:5843   */\ntag_47:\n    /* \"#utility.yul\":5811:5814   */\n  0x00\n    /* \"#utility.yul\":5832:5837   */\n  dup2\n    /* \"#utility.yul\":5825:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5768:5843   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5849:6118   */\ntag_48:\n    /* \"#utility.yul\":5959:5998   */\n  tag_125\n    /* \"#utility.yul\":5990:5997   */\n  dup4\n    /* \"#utility.yul\":5959:5998   */\n  tag_46\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6020:6111   */\n  tag_126\n    /* \"#utility.yul\":6069:6110   */\n  tag_127\n    /* \"#utility.yul\":6093:6109   */\n  dup3\n    /* \"#utility.yul\":6069:6110   */\n  tag_47\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6061:6067   */\n  dup5\n    /* \"#utility.yul\":6054:6058   */\n  dup5\n    /* \"#utility.yul\":6048:6059   */\n  sload\n    /* \"#utility.yul\":6020:6111   */\n  tag_43\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6014:6018   */\n  dup3\n    /* \"#utility.yul\":6007:6112   */\n  sstore\n    /* \"#utility.yul\":5925:6118   */\n  pop\n    /* \"#utility.yul\":5849:6118   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6124:6197   */\ntag_49:\n    /* \"#utility.yul\":6169:6172   */\n  0x00\n    /* \"#utility.yul\":6190:6191   */\n  0x00\n    /* \"#utility.yul\":6183:6191   */\n  swap1\n  pop\n    /* \"#utility.yul\":6124:6197   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6203:6392   */\ntag_50:\n    /* \"#utility.yul\":6280:6312   */\n  tag_130\n  tag_49\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6321:6386   */\n  tag_131\n    /* \"#utility.yul\":6379:6385   */\n  dup2\n    /* \"#utility.yul\":6371:6377   */\n  dup5\n    /* \"#utility.yul\":6365:6369   */\n  dup5\n    /* \"#utility.yul\":6321:6386   */\n  tag_48\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6256:6392   */\n  pop\n    /* \"#utility.yul\":6203:6392   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6398:6584   */\ntag_51:\n    /* \"#utility.yul\":6458:6578   */\ntag_133:\n    /* \"#utility.yul\":6475:6478   */\n  dup2\n    /* \"#utility.yul\":6468:6473   */\n  dup2\n    /* \"#utility.yul\":6465:6479   */\n  lt\n    /* \"#utility.yul\":6458:6578   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":6529:6568   */\n  tag_136\n    /* \"#utility.yul\":6566:6567   */\n  0x00\n    /* \"#utility.yul\":6559:6564   */\n  dup3\n    /* \"#utility.yul\":6529:6568   */\n  tag_50\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6502:6503   */\n  0x01\n    /* \"#utility.yul\":6495:6500   */\n  dup2\n    /* \"#utility.yul\":6491:6504   */\n  add\n    /* \"#utility.yul\":6482:6504   */\n  swap1\n  pop\n    /* \"#utility.yul\":6458:6578   */\n  jump(tag_133)\ntag_135:\n    /* \"#utility.yul\":6398:6584   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6590:7133   */\ntag_52:\n    /* \"#utility.yul\":6691:6693   */\n  0x1f\n    /* \"#utility.yul\":6686:6689   */\n  dup3\n    /* \"#utility.yul\":6683:6694   */\n  gt\n    /* \"#utility.yul\":6680:7126   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6725:6763   */\n  tag_139\n    /* \"#utility.yul\":6757:6762   */\n  dup2\n    /* \"#utility.yul\":6725:6763   */\n  tag_40\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6809:6838   */\n  tag_140\n    /* \"#utility.yul\":6827:6837   */\n  dup5\n    /* \"#utility.yul\":6809:6838   */\n  tag_41\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":6799:6807   */\n  dup2\n    /* \"#utility.yul\":6795:6839   */\n  add\n    /* \"#utility.yul\":6992:6994   */\n  0x20\n    /* \"#utility.yul\":6980:6990   */\n  dup6\n    /* \"#utility.yul\":6977:6995   */\n  lt\n    /* \"#utility.yul\":6974:7023   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7013:7021   */\n  dup2\n    /* \"#utility.yul\":6998:7021   */\n  swap1\n  pop\n    /* \"#utility.yul\":6974:7023   */\ntag_141:\n    /* \"#utility.yul\":7036:7116   */\n  tag_142\n    /* \"#utility.yul\":7092:7114   */\n  tag_143\n    /* \"#utility.yul\":7110:7113   */\n  dup6\n    /* \"#utility.yul\":7092:7114   */\n  tag_41\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7082:7090   */\n  dup4\n    /* \"#utility.yul\":7078:7115   */\n  add\n    /* \"#utility.yul\":7065:7076   */\n  dup3\n    /* \"#utility.yul\":7036:7116   */\n  tag_51\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6695:7126   */\n  pop\n  pop\n    /* \"#utility.yul\":6680:7126   */\ntag_138:\n    /* \"#utility.yul\":6590:7133   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7139:7256   */\ntag_53:\n    /* \"#utility.yul\":7193:7201   */\n  0x00\n    /* \"#utility.yul\":7243:7248   */\n  dup3\n    /* \"#utility.yul\":7237:7241   */\n  dup3\n    /* \"#utility.yul\":7233:7249   */\n  shr\n    /* \"#utility.yul\":7212:7249   */\n  swap1\n  pop\n    /* \"#utility.yul\":7139:7256   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7262:7431   */\ntag_54:\n    /* \"#utility.yul\":7306:7312   */\n  0x00\n    /* \"#utility.yul\":7339:7390   */\n  tag_146\n    /* \"#utility.yul\":7387:7388   */\n  0x00\n    /* \"#utility.yul\":7383:7389   */\n  not\n    /* \"#utility.yul\":7375:7380   */\n  dup5\n    /* \"#utility.yul\":7372:7373   */\n  0x08\n    /* \"#utility.yul\":7368:7381   */\n  mul\n    /* \"#utility.yul\":7339:7390   */\n  tag_53\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":7335:7391   */\n  not\n    /* \"#utility.yul\":7420:7424   */\n  dup1\n    /* \"#utility.yul\":7414:7418   */\n  dup4\n    /* \"#utility.yul\":7410:7425   */\n  and\n    /* \"#utility.yul\":7400:7425   */\n  swap2\n  pop\n    /* \"#utility.yul\":7313:7431   */\n  pop\n    /* \"#utility.yul\":7262:7431   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7436:7731   */\ntag_55:\n    /* \"#utility.yul\":7512:7516   */\n  0x00\n    /* \"#utility.yul\":7658:7687   */\n  tag_148\n    /* \"#utility.yul\":7683:7686   */\n  dup4\n    /* \"#utility.yul\":7677:7681   */\n  dup4\n    /* \"#utility.yul\":7658:7687   */\n  tag_54\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7650:7687   */\n  swap2\n  pop\n    /* \"#utility.yul\":7720:7723   */\n  dup3\n    /* \"#utility.yul\":7717:7718   */\n  0x02\n    /* \"#utility.yul\":7713:7724   */\n  mul\n    /* \"#utility.yul\":7707:7711   */\n  dup3\n    /* \"#utility.yul\":7704:7725   */\n  or\n    /* \"#utility.yul\":7696:7725   */\n  swap1\n  pop\n    /* \"#utility.yul\":7436:7731   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:9131   */\ntag_9:\n    /* \"#utility.yul\":7853:7890   */\n  tag_150\n    /* \"#utility.yul\":7886:7889   */\n  dup3\n    /* \"#utility.yul\":7853:7890   */\n  tag_37\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":7955:7973   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7947:7953   */\n  dup2\n    /* \"#utility.yul\":7944:7974   */\n  gt\n    /* \"#utility.yul\":7941:7997   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":7977:7995   */\n  tag_152\n  tag_26\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7941:7997   */\ntag_151:\n    /* \"#utility.yul\":8021:8059   */\n  tag_153\n    /* \"#utility.yul\":8053:8057   */\n  dup3\n    /* \"#utility.yul\":8047:8058   */\n  sload\n    /* \"#utility.yul\":8021:8059   */\n  tag_39\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8106:8173   */\n  tag_154\n    /* \"#utility.yul\":8166:8172   */\n  dup3\n    /* \"#utility.yul\":8158:8164   */\n  dup3\n    /* \"#utility.yul\":8152:8156   */\n  dup6\n    /* \"#utility.yul\":8106:8173   */\n  tag_52\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8200:8201   */\n  0x00\n    /* \"#utility.yul\":8224:8228   */\n  0x20\n    /* \"#utility.yul\":8211:8228   */\n  swap1\n  pop\n    /* \"#utility.yul\":8256:8258   */\n  0x1f\n    /* \"#utility.yul\":8248:8254   */\n  dup4\n    /* \"#utility.yul\":8245:8259   */\n  gt\n    /* \"#utility.yul\":8273:8274   */\n  0x01\n    /* \"#utility.yul\":8268:8886   */\n  dup2\n  eq\n  tag_156\n  jumpi\n    /* \"#utility.yul\":8930:8931   */\n  0x00\n    /* \"#utility.yul\":8947:8953   */\n  dup5\n    /* \"#utility.yul\":8944:9021   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":8996:9005   */\n  dup3\n    /* \"#utility.yul\":8991:8994   */\n  dup8\n    /* \"#utility.yul\":8987:9006   */\n  add\n    /* \"#utility.yul\":8981:9007   */\n  mload\n    /* \"#utility.yul\":8972:9007   */\n  swap1\n  pop\n    /* \"#utility.yul\":8944:9021   */\ntag_157:\n    /* \"#utility.yul\":9047:9114   */\n  tag_158\n    /* \"#utility.yul\":9107:9113   */\n  dup6\n    /* \"#utility.yul\":9100:9105   */\n  dup3\n    /* \"#utility.yul\":9047:9114   */\n  tag_55\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":9041:9045   */\n  dup7\n    /* \"#utility.yul\":9034:9115   */\n  sstore\n    /* \"#utility.yul\":8903:9125   */\n  pop\n    /* \"#utility.yul\":8238:9125   */\n  jump(tag_155)\n    /* \"#utility.yul\":8268:8886   */\ntag_156:\n    /* \"#utility.yul\":8320:8324   */\n  0x1f\n    /* \"#utility.yul\":8316:8325   */\n  not\n    /* \"#utility.yul\":8308:8314   */\n  dup5\n    /* \"#utility.yul\":8304:8326   */\n  and\n    /* \"#utility.yul\":8354:8391   */\n  tag_159\n    /* \"#utility.yul\":8386:8390   */\n  dup7\n    /* \"#utility.yul\":8354:8391   */\n  tag_40\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8413:8414   */\n  0x00\n    /* \"#utility.yul\":8427:8635   */\ntag_160:\n    /* \"#utility.yul\":8441:8448   */\n  dup3\n    /* \"#utility.yul\":8438:8439   */\n  dup2\n    /* \"#utility.yul\":8435:8449   */\n  lt\n    /* \"#utility.yul\":8427:8635   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":8520:8529   */\n  dup5\n    /* \"#utility.yul\":8515:8518   */\n  dup10\n    /* \"#utility.yul\":8511:8530   */\n  add\n    /* \"#utility.yul\":8505:8531   */\n  mload\n    /* \"#utility.yul\":8497:8503   */\n  dup3\n    /* \"#utility.yul\":8490:8532   */\n  sstore\n    /* \"#utility.yul\":8571:8572   */\n  0x01\n    /* \"#utility.yul\":8563:8569   */\n  dup3\n    /* \"#utility.yul\":8559:8573   */\n  add\n    /* \"#utility.yul\":8549:8573   */\n  swap2\n  pop\n    /* \"#utility.yul\":8618:8620   */\n  0x20\n    /* \"#utility.yul\":8607:8616   */\n  dup6\n    /* \"#utility.yul\":8603:8621   */\n  add\n    /* \"#utility.yul\":8590:8621   */\n  swap5\n  pop\n    /* \"#utility.yul\":8464:8468   */\n  0x20\n    /* \"#utility.yul\":8461:8462   */\n  dup2\n    /* \"#utility.yul\":8457:8469   */\n  add\n    /* \"#utility.yul\":8452:8469   */\n  swap1\n  pop\n    /* \"#utility.yul\":8427:8635   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":8663:8669   */\n  dup7\n    /* \"#utility.yul\":8654:8661   */\n  dup4\n    /* \"#utility.yul\":8651:8670   */\n  lt\n    /* \"#utility.yul\":8648:8827   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":8721:8730   */\n  dup5\n    /* \"#utility.yul\":8716:8719   */\n  dup10\n    /* \"#utility.yul\":8712:8731   */\n  add\n    /* \"#utility.yul\":8706:8732   */\n  mload\n    /* \"#utility.yul\":8764:8812   */\n  tag_164\n    /* \"#utility.yul\":8806:8810   */\n  0x1f\n    /* \"#utility.yul\":8798:8804   */\n  dup10\n    /* \"#utility.yul\":8794:8811   */\n  and\n    /* \"#utility.yul\":8783:8792   */\n  dup3\n    /* \"#utility.yul\":8764:8812   */\n  tag_54\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":8756:8762   */\n  dup4\n    /* \"#utility.yul\":8749:8813   */\n  sstore\n    /* \"#utility.yul\":8671:8827   */\n  pop\n    /* \"#utility.yul\":8648:8827   */\ntag_163:\n    /* \"#utility.yul\":8873:8874   */\n  0x01\n    /* \"#utility.yul\":8869:8870   */\n  0x02\n    /* \"#utility.yul\":8861:8867   */\n  dup9\n    /* \"#utility.yul\":8857:8871   */\n  mul\n    /* \"#utility.yul\":8853:8875   */\n  add\n    /* \"#utility.yul\":8847:8851   */\n  dup9\n    /* \"#utility.yul\":8840:8876   */\n  sstore\n    /* \"#utility.yul\":8275:8886   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8238:9125   */\ntag_155:\n  pop\n    /* \"#utility.yul\":7828:9131   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7736:9131   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9255   */\ntag_56:\n    /* \"#utility.yul\":9224:9248   */\n  tag_166\n    /* \"#utility.yul\":9242:9247   */\n  dup2\n    /* \"#utility.yul\":9224:9248   */\n  tag_34\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":9219:9222   */\n  dup3\n    /* \"#utility.yul\":9212:9249   */\n  mstore\n    /* \"#utility.yul\":9137:9255   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9261:9483   */\ntag_14:\n    /* \"#utility.yul\":9354:9358   */\n  0x00\n    /* \"#utility.yul\":9392:9394   */\n  0x20\n    /* \"#utility.yul\":9381:9390   */\n  dup3\n    /* \"#utility.yul\":9377:9395   */\n  add\n    /* \"#utility.yul\":9369:9395   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9476   */\n  tag_168\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9462:9471   */\n  dup4\n    /* \"#utility.yul\":9458:9475   */\n  add\n    /* \"#utility.yul\":9449:9455   */\n  dup5\n    /* \"#utility.yul\":9405:9476   */\n  tag_56\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":9261:9483   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/NEX.sol\":682:2032  contract NEX is ERC20Burnable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/NEX.sol\":682:2032  contract NEX is ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb86ddfa9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NEX.sol\":1511:1765  function mint(address to, uint256 amount) public isTrustedMinter(msg.sender) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"src/NEX.sol\":1192:1505  function burn(uint256 amount) public override onlyOwner {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/NEX.sol\":1771:2030  function setauthorisedEngine(address _engine) external onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"src/NEX.sol\":1511:1765  function mint(address to, uint256 amount) public isTrustedMinter(msg.sender) {... */\n    tag_47:\n        /* \"src/NEX.sol\":1576:1586  msg.sender */\n      caller\n        /* \"src/NEX.sol\":1125:1139  trustedMinters */\n      0x06\n        /* \"src/NEX.sol\":1125:1146  trustedMinters[_user] */\n      0x00\n        /* \"src/NEX.sol\":1140:1145  _user */\n      dup3\n        /* \"src/NEX.sol\":1125:1146  trustedMinters[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/NEX.sol\":1117:1168  require(trustedMinters[_user],\"Not Trusted Minter\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"src/NEX.sol\":1620:1621  0 */\n      0x00\n        /* \"src/NEX.sol\":1606:1622  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NEX.sol\":1606:1608  to */\n      dup4\n        /* \"src/NEX.sol\":1606:1622  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/NEX.sol\":1598:1656  require(to != address(0), \"NEX: mint to the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"src/NEX.sol\":1683:1684  0 */\n      0x00\n        /* \"src/NEX.sol\":1674:1680  amount */\n      dup3\n        /* \"src/NEX.sol\":1674:1684  amount > 0 */\n      gt\n        /* \"src/NEX.sol\":1666:1731  require(amount > 0, \"NEX: mint amount must be greater than zero\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"src/NEX.sol\":1741:1758  _mint(to, amount) */\n      tag_115\n        /* \"src/NEX.sol\":1747:1749  to */\n      dup4\n        /* \"src/NEX.sol\":1751:1757  amount */\n      dup4\n        /* \"src/NEX.sol\":1741:1746  _mint */\n      tag_116\n        /* \"src/NEX.sol\":1741:1758  _mint(to, amount) */\n      jump\t// in\n    tag_115:\n        /* \"src/NEX.sol\":1511:1765  function mint(address to, uint256 amount) public isTrustedMinter(msg.sender) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/NEX.sol\":1192:1505  function burn(uint256 amount) public override onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"src/NEX.sol\":1258:1273  uint256 balance */\n      0x00\n        /* \"src/NEX.sol\":1276:1297  balanceOf(msg.sender) */\n      tag_121\n        /* \"src/NEX.sol\":1286:1296  msg.sender */\n      caller\n        /* \"src/NEX.sol\":1276:1285  balanceOf */\n      tag_55\n        /* \"src/NEX.sol\":1276:1297  balanceOf(msg.sender) */\n      jump\t// in\n    tag_121:\n        /* \"src/NEX.sol\":1258:1297  uint256 balance = balanceOf(msg.sender) */\n      swap1\n      pop\n        /* \"src/NEX.sol\":1321:1322  0 */\n      0x00\n        /* \"src/NEX.sol\":1311:1317  amount */\n      dup3\n        /* \"src/NEX.sol\":1311:1322  amount == 0 */\n      sub\n        /* \"src/NEX.sol\":1307:1383  if (amount == 0) {... */\n      tag_122\n      jumpi\n        /* \"src/NEX.sol\":1345:1372  NEX_MustBeGreaterThanZero() */\n      mload(0x40)\n      0x9e974a1900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEX.sol\":1307:1383  if (amount == 0) {... */\n    tag_122:\n        /* \"src/NEX.sol\":1405:1412  balance */\n      dup1\n        /* \"src/NEX.sol\":1396:1402  amount */\n      dup3\n        /* \"src/NEX.sol\":1396:1412  amount > balance */\n      gt\n        /* \"src/NEX.sol\":1392:1471  if (amount > balance) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"src/NEX.sol\":1435:1460  NEX_InsufficientBalance() */\n      mload(0x40)\n      0xc266034e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEX.sol\":1392:1471  if (amount > balance) {... */\n    tag_123:\n        /* \"src/NEX.sol\":1480:1498  super.burn(amount) */\n      tag_124\n        /* \"src/NEX.sol\":1491:1497  amount */\n      dup3\n        /* \"src/NEX.sol\":1480:1490  super.burn */\n      tag_125\n        /* \"src/NEX.sol\":1480:1498  super.burn(amount) */\n      jump\t// in\n    tag_124:\n        /* \"src/NEX.sol\":1248:1505  {... */\n      pop\n        /* \"src/NEX.sol\":1192:1505  function burn(uint256 amount) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1131  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1121:1133  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_86\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_86\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/NEX.sol\":1771:2030  function setauthorisedEngine(address _engine) external onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"src/NEX.sol\":1852:1866  trustedMinters */\n      0x06\n        /* \"src/NEX.sol\":1852:1875  trustedMinters[_engine] */\n      0x00\n        /* \"src/NEX.sol\":1867:1874  _engine */\n      dup3\n        /* \"src/NEX.sol\":1852:1875  trustedMinters[_engine] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"src/NEX.sol\":1851:1875  !trustedMinters[_engine] */\n      iszero\n        /* \"src/NEX.sol\":1843:1908  require(!trustedMinters[_engine], \"NEX: Allready trusted minter\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"src/NEX.sol\":1942:1943  0 */\n      0x00\n        /* \"src/NEX.sol\":1923:1944  _engine != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NEX.sol\":1923:1930  _engine */\n      dup2\n        /* \"src/NEX.sol\":1923:1944  _engine != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/NEX.sol\":1915:1986  require(_engine != address(0), \"NEX: Authorised Engine cannot be zero\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"src/NEX.sol\":2019:2023  true */\n      0x01\n        /* \"src/NEX.sol\":1993:2007  trustedMinters */\n      0x06\n        /* \"src/NEX.sol\":1993:2016  trustedMinters[_engine] */\n      0x00\n        /* \"src/NEX.sol\":2008:2015  _engine */\n      dup4\n        /* \"src/NEX.sol\":1993:2016  trustedMinters[_engine] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NEX.sol\":1993:2023  trustedMinters[_engine] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/NEX.sol\":1771:2030  function setauthorisedEngine(address _engine) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7516  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:688  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":678:690  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8055  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_210)\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_214)\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_216:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_217:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_218:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_219:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_220:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_255\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_216\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":711:782   */\n      tag_256\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_217\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_257\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_218\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":881:910   */\n      tag_258\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_219\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_260\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_220\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_222:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_224:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_225:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_266\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_224\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_226:\n        /* \"#utility.yul\":1876:1900   */\n      tag_268\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_225\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_269:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_227:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_271\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_226\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_228:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_229:\n        /* \"#utility.yul\":2232:2256   */\n      tag_274\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_228\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_275:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_230:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_277\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_229\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_280\n      tag_222\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2525:2644   */\n    tag_279:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_281\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_227\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_282\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_230\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_231:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_232:\n        /* \"#utility.yul\":3089:3110   */\n      tag_285\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_231\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_287\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_232\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_233:\n        /* \"#utility.yul\":3426:3450   */\n      tag_289\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_228\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_291\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_233\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_294\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3801:3920   */\n    tag_293:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_295\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_227\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_296\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_227\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_297\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_234:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_235:\n        /* \"#utility.yul\":4491:4513   */\n      tag_300\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_234\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_302\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_235\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_50:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_305\n      tag_222\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4822:4941   */\n    tag_304:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_306\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_230\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_54:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_309\n      tag_222\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":5157:5276   */\n    tag_308:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_310\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_227\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_236:\n        /* \"#utility.yul\":5503:5527   */\n      tag_312\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_225\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_65:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_314\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_236\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_78:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      0x00\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_317\n      tag_222\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5861:5980   */\n    tag_316:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_318\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_227\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_319\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_227\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_237:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_86:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_322:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_324\n      tag_237\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6664:6748   */\n    tag_323:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6928   */\n    tag_238:\n        /* \"#utility.yul\":6900:6920   */\n      0x4e6f742054727573746564204d696e7465720000000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6921   */\n      mstore\n        /* \"#utility.yul\":6760:6928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6934:7300   */\n    tag_239:\n        /* \"#utility.yul\":7076:7079   */\n      0x00\n        /* \"#utility.yul\":7097:7164   */\n      tag_327\n        /* \"#utility.yul\":7161:7163   */\n      0x12\n        /* \"#utility.yul\":7156:7159   */\n      dup4\n        /* \"#utility.yul\":7097:7164   */\n      tag_217\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7090:7164   */\n      swap2\n      pop\n        /* \"#utility.yul\":7173:7266   */\n      tag_328\n        /* \"#utility.yul\":7262:7265   */\n      dup3\n        /* \"#utility.yul\":7173:7266   */\n      tag_238\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7291:7293   */\n      0x20\n        /* \"#utility.yul\":7286:7289   */\n      dup3\n        /* \"#utility.yul\":7282:7294   */\n      add\n        /* \"#utility.yul\":7275:7294   */\n      swap1\n      pop\n        /* \"#utility.yul\":6934:7300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7725   */\n    tag_107:\n        /* \"#utility.yul\":7472:7476   */\n      0x00\n        /* \"#utility.yul\":7510:7512   */\n      0x20\n        /* \"#utility.yul\":7499:7508   */\n      dup3\n        /* \"#utility.yul\":7495:7513   */\n      add\n        /* \"#utility.yul\":7487:7513   */\n      swap1\n      pop\n        /* \"#utility.yul\":7559:7568   */\n      dup2\n        /* \"#utility.yul\":7553:7557   */\n      dup2\n        /* \"#utility.yul\":7549:7569   */\n      sub\n        /* \"#utility.yul\":7545:7546   */\n      0x00\n        /* \"#utility.yul\":7534:7543   */\n      dup4\n        /* \"#utility.yul\":7530:7547   */\n      add\n        /* \"#utility.yul\":7523:7570   */\n      mstore\n        /* \"#utility.yul\":7587:7718   */\n      tag_330\n        /* \"#utility.yul\":7713:7717   */\n      dup2\n        /* \"#utility.yul\":7587:7718   */\n      tag_239\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7579:7718   */\n      swap1\n      pop\n        /* \"#utility.yul\":7306:7725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:7910   */\n    tag_240:\n        /* \"#utility.yul\":7871:7902   */\n      0x4e45583a206d696e7420746f20746865207a65726f2061646472657373000000\n        /* \"#utility.yul\":7867:7868   */\n      0x00\n        /* \"#utility.yul\":7859:7865   */\n      dup3\n        /* \"#utility.yul\":7855:7869   */\n      add\n        /* \"#utility.yul\":7848:7903   */\n      mstore\n        /* \"#utility.yul\":7731:7910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8282   */\n    tag_241:\n        /* \"#utility.yul\":8058:8061   */\n      0x00\n        /* \"#utility.yul\":8079:8146   */\n      tag_333\n        /* \"#utility.yul\":8143:8145   */\n      0x1d\n        /* \"#utility.yul\":8138:8141   */\n      dup4\n        /* \"#utility.yul\":8079:8146   */\n      tag_217\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8072:8146   */\n      swap2\n      pop\n        /* \"#utility.yul\":8155:8248   */\n      tag_334\n        /* \"#utility.yul\":8244:8247   */\n      dup3\n        /* \"#utility.yul\":8155:8248   */\n      tag_240\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8273:8275   */\n      0x20\n        /* \"#utility.yul\":8268:8271   */\n      dup3\n        /* \"#utility.yul\":8264:8276   */\n      add\n        /* \"#utility.yul\":8257:8276   */\n      swap1\n      pop\n        /* \"#utility.yul\":7916:8282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8288:8707   */\n    tag_111:\n        /* \"#utility.yul\":8454:8458   */\n      0x00\n        /* \"#utility.yul\":8492:8494   */\n      0x20\n        /* \"#utility.yul\":8481:8490   */\n      dup3\n        /* \"#utility.yul\":8477:8495   */\n      add\n        /* \"#utility.yul\":8469:8495   */\n      swap1\n      pop\n        /* \"#utility.yul\":8541:8550   */\n      dup2\n        /* \"#utility.yul\":8535:8539   */\n      dup2\n        /* \"#utility.yul\":8531:8551   */\n      sub\n        /* \"#utility.yul\":8527:8528   */\n      0x00\n        /* \"#utility.yul\":8516:8525   */\n      dup4\n        /* \"#utility.yul\":8512:8529   */\n      add\n        /* \"#utility.yul\":8505:8552   */\n      mstore\n        /* \"#utility.yul\":8569:8700   */\n      tag_336\n        /* \"#utility.yul\":8695:8699   */\n      dup2\n        /* \"#utility.yul\":8569:8700   */\n      tag_241\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8561:8700   */\n      swap1\n      pop\n        /* \"#utility.yul\":8288:8707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8713:8942   */\n    tag_242:\n        /* \"#utility.yul\":8853:8887   */\n      0x4e45583a206d696e7420616d6f756e74206d7573742062652067726561746572\n        /* \"#utility.yul\":8849:8850   */\n      0x00\n        /* \"#utility.yul\":8841:8847   */\n      dup3\n        /* \"#utility.yul\":8837:8851   */\n      add\n        /* \"#utility.yul\":8830:8888   */\n      mstore\n        /* \"#utility.yul\":8922:8934   */\n      0x207468616e207a65726f00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8917:8919   */\n      0x20\n        /* \"#utility.yul\":8909:8915   */\n      dup3\n        /* \"#utility.yul\":8905:8920   */\n      add\n        /* \"#utility.yul\":8898:8935   */\n      mstore\n        /* \"#utility.yul\":8713:8942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8948:9314   */\n    tag_243:\n        /* \"#utility.yul\":9090:9093   */\n      0x00\n        /* \"#utility.yul\":9111:9178   */\n      tag_339\n        /* \"#utility.yul\":9175:9177   */\n      0x2a\n        /* \"#utility.yul\":9170:9173   */\n      dup4\n        /* \"#utility.yul\":9111:9178   */\n      tag_217\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9104:9178   */\n      swap2\n      pop\n        /* \"#utility.yul\":9187:9280   */\n      tag_340\n        /* \"#utility.yul\":9276:9279   */\n      dup3\n        /* \"#utility.yul\":9187:9280   */\n      tag_242\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9305:9307   */\n      0x40\n        /* \"#utility.yul\":9300:9303   */\n      dup3\n        /* \"#utility.yul\":9296:9308   */\n      add\n        /* \"#utility.yul\":9289:9308   */\n      swap1\n      pop\n        /* \"#utility.yul\":8948:9314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9320:9739   */\n    tag_114:\n        /* \"#utility.yul\":9486:9490   */\n      0x00\n        /* \"#utility.yul\":9524:9526   */\n      0x20\n        /* \"#utility.yul\":9513:9522   */\n      dup3\n        /* \"#utility.yul\":9509:9527   */\n      add\n        /* \"#utility.yul\":9501:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9573:9582   */\n      dup2\n        /* \"#utility.yul\":9567:9571   */\n      dup2\n        /* \"#utility.yul\":9563:9583   */\n      sub\n        /* \"#utility.yul\":9559:9560   */\n      0x00\n        /* \"#utility.yul\":9548:9557   */\n      dup4\n        /* \"#utility.yul\":9544:9561   */\n      add\n        /* \"#utility.yul\":9537:9584   */\n      mstore\n        /* \"#utility.yul\":9601:9732   */\n      tag_342\n        /* \"#utility.yul\":9727:9731   */\n      dup2\n        /* \"#utility.yul\":9601:9732   */\n      tag_243\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9593:9732   */\n      swap1\n      pop\n        /* \"#utility.yul\":9320:9739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9745:9923   */\n    tag_244:\n        /* \"#utility.yul\":9885:9915   */\n      0x4e45583a20416c6c72656164792074727573746564206d696e74657200000000\n        /* \"#utility.yul\":9881:9882   */\n      0x00\n        /* \"#utility.yul\":9873:9879   */\n      dup3\n        /* \"#utility.yul\":9869:9883   */\n      add\n        /* \"#utility.yul\":9862:9916   */\n      mstore\n        /* \"#utility.yul\":9745:9923   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9929:10295   */\n    tag_245:\n        /* \"#utility.yul\":10071:10074   */\n      0x00\n        /* \"#utility.yul\":10092:10159   */\n      tag_345\n        /* \"#utility.yul\":10156:10158   */\n      0x1c\n        /* \"#utility.yul\":10151:10154   */\n      dup4\n        /* \"#utility.yul\":10092:10159   */\n      tag_217\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10085:10159   */\n      swap2\n      pop\n        /* \"#utility.yul\":10168:10261   */\n      tag_346\n        /* \"#utility.yul\":10257:10260   */\n      dup3\n        /* \"#utility.yul\":10168:10261   */\n      tag_244\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10286:10288   */\n      0x20\n        /* \"#utility.yul\":10281:10284   */\n      dup3\n        /* \"#utility.yul\":10277:10289   */\n      add\n        /* \"#utility.yul\":10270:10289   */\n      swap1\n      pop\n        /* \"#utility.yul\":9929:10295   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10301:10720   */\n    tag_152:\n        /* \"#utility.yul\":10467:10471   */\n      0x00\n        /* \"#utility.yul\":10505:10507   */\n      0x20\n        /* \"#utility.yul\":10494:10503   */\n      dup3\n        /* \"#utility.yul\":10490:10508   */\n      add\n        /* \"#utility.yul\":10482:10508   */\n      swap1\n      pop\n        /* \"#utility.yul\":10554:10563   */\n      dup2\n        /* \"#utility.yul\":10548:10552   */\n      dup2\n        /* \"#utility.yul\":10544:10564   */\n      sub\n        /* \"#utility.yul\":10540:10541   */\n      0x00\n        /* \"#utility.yul\":10529:10538   */\n      dup4\n        /* \"#utility.yul\":10525:10542   */\n      add\n        /* \"#utility.yul\":10518:10565   */\n      mstore\n        /* \"#utility.yul\":10582:10713   */\n      tag_348\n        /* \"#utility.yul\":10708:10712   */\n      dup2\n        /* \"#utility.yul\":10582:10713   */\n      tag_245\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10574:10713   */\n      swap1\n      pop\n        /* \"#utility.yul\":10301:10720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10726:10950   */\n    tag_246:\n        /* \"#utility.yul\":10866:10900   */\n      0x4e45583a20417574686f726973656420456e67696e652063616e6e6f74206265\n        /* \"#utility.yul\":10862:10863   */\n      0x00\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10864   */\n      add\n        /* \"#utility.yul\":10843:10901   */\n      mstore\n        /* \"#utility.yul\":10935:10942   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10930:10932   */\n      0x20\n        /* \"#utility.yul\":10922:10928   */\n      dup3\n        /* \"#utility.yul\":10918:10933   */\n      add\n        /* \"#utility.yul\":10911:10943   */\n      mstore\n        /* \"#utility.yul\":10726:10950   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10956:11322   */\n    tag_247:\n        /* \"#utility.yul\":11098:11101   */\n      0x00\n        /* \"#utility.yul\":11119:11186   */\n      tag_351\n        /* \"#utility.yul\":11183:11185   */\n      0x25\n        /* \"#utility.yul\":11178:11181   */\n      dup4\n        /* \"#utility.yul\":11119:11186   */\n      tag_217\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11112:11186   */\n      swap2\n      pop\n        /* \"#utility.yul\":11195:11288   */\n      tag_352\n        /* \"#utility.yul\":11284:11287   */\n      dup3\n        /* \"#utility.yul\":11195:11288   */\n      tag_246\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11313:11315   */\n      0x40\n        /* \"#utility.yul\":11308:11311   */\n      dup3\n        /* \"#utility.yul\":11304:11316   */\n      add\n        /* \"#utility.yul\":11297:11316   */\n      swap1\n      pop\n        /* \"#utility.yul\":10956:11322   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11328:11747   */\n    tag_155:\n        /* \"#utility.yul\":11494:11498   */\n      0x00\n        /* \"#utility.yul\":11532:11534   */\n      0x20\n        /* \"#utility.yul\":11521:11530   */\n      dup3\n        /* \"#utility.yul\":11517:11535   */\n      add\n        /* \"#utility.yul\":11509:11535   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:11590   */\n      dup2\n        /* \"#utility.yul\":11575:11579   */\n      dup2\n        /* \"#utility.yul\":11571:11591   */\n      sub\n        /* \"#utility.yul\":11567:11568   */\n      0x00\n        /* \"#utility.yul\":11556:11565   */\n      dup4\n        /* \"#utility.yul\":11552:11569   */\n      add\n        /* \"#utility.yul\":11545:11592   */\n      mstore\n        /* \"#utility.yul\":11609:11740   */\n      tag_354\n        /* \"#utility.yul\":11735:11739   */\n      dup2\n        /* \"#utility.yul\":11609:11740   */\n      tag_247\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11601:11740   */\n      swap1\n      pop\n        /* \"#utility.yul\":11328:11747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11753:12195   */\n    tag_172:\n        /* \"#utility.yul\":11902:11906   */\n      0x00\n        /* \"#utility.yul\":11940:11942   */\n      0x60\n        /* \"#utility.yul\":11929:11938   */\n      dup3\n        /* \"#utility.yul\":11925:11943   */\n      add\n        /* \"#utility.yul\":11917:11943   */\n      swap1\n      pop\n        /* \"#utility.yul\":11953:12024   */\n      tag_356\n        /* \"#utility.yul\":12021:12022   */\n      0x00\n        /* \"#utility.yul\":12010:12019   */\n      dup4\n        /* \"#utility.yul\":12006:12023   */\n      add\n        /* \"#utility.yul\":11997:12003   */\n      dup7\n        /* \"#utility.yul\":11953:12024   */\n      tag_236\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":12034:12106   */\n      tag_357\n        /* \"#utility.yul\":12102:12104   */\n      0x20\n        /* \"#utility.yul\":12091:12100   */\n      dup4\n        /* \"#utility.yul\":12087:12105   */\n      add\n        /* \"#utility.yul\":12078:12084   */\n      dup6\n        /* \"#utility.yul\":12034:12106   */\n      tag_233\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12116:12188   */\n      tag_358\n        /* \"#utility.yul\":12184:12186   */\n      0x40\n        /* \"#utility.yul\":12173:12182   */\n      dup4\n        /* \"#utility.yul\":12169:12187   */\n      add\n        /* \"#utility.yul\":12160:12166   */\n      dup5\n        /* \"#utility.yul\":12116:12188   */\n      tag_233\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11753:12195   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12201:12381   */\n    tag_248:\n        /* \"#utility.yul\":12249:12326   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12246:12247   */\n      0x00\n        /* \"#utility.yul\":12239:12327   */\n      mstore\n        /* \"#utility.yul\":12346:12350   */\n      0x11\n        /* \"#utility.yul\":12343:12344   */\n      0x04\n        /* \"#utility.yul\":12336:12351   */\n      mstore\n        /* \"#utility.yul\":12370:12374   */\n      0x24\n        /* \"#utility.yul\":12367:12368   */\n      0x00\n        /* \"#utility.yul\":12360:12375   */\n      revert\n        /* \"#utility.yul\":12387:12578   */\n    tag_209:\n        /* \"#utility.yul\":12427:12430   */\n      0x00\n        /* \"#utility.yul\":12446:12466   */\n      tag_361\n        /* \"#utility.yul\":12464:12465   */\n      dup3\n        /* \"#utility.yul\":12446:12466   */\n      tag_228\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":12441:12466   */\n      swap2\n      pop\n        /* \"#utility.yul\":12480:12500   */\n      tag_362\n        /* \"#utility.yul\":12498:12499   */\n      dup4\n        /* \"#utility.yul\":12480:12500   */\n      tag_228\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":12475:12500   */\n      swap3\n      pop\n        /* \"#utility.yul\":12523:12524   */\n      dup3\n        /* \"#utility.yul\":12520:12521   */\n      dup3\n        /* \"#utility.yul\":12516:12525   */\n      add\n        /* \"#utility.yul\":12509:12525   */\n      swap1\n      pop\n        /* \"#utility.yul\":12544:12547   */\n      dup1\n        /* \"#utility.yul\":12541:12542   */\n      dup3\n        /* \"#utility.yul\":12538:12548   */\n      gt\n        /* \"#utility.yul\":12535:12571   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":12551:12569   */\n      tag_364\n      tag_248\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":12535:12571   */\n    tag_363:\n        /* \"#utility.yul\":12387:12578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122076f7fd6326997ca02702eb490972be598d6dd3f34246bd0f1d63c8b5c17a602e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1078": {
									"entryPoint": null,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 307,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9486:10",
										"nodeType": "YulBlock",
										"src": "0:9486:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "423:28:10",
													"nodeType": "YulBlock",
													"src": "423:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:10",
																		"nodeType": "YulLiteral",
																		"src": "443:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:12:10",
																"nodeType": "YulFunctionCall",
																"src": "433:12:10"
															},
															"nativeSrc": "433:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:10"
											},
											{
												"body": {
													"nativeSrc": "546:28:10",
													"nodeType": "YulBlock",
													"src": "546:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:10",
																		"nodeType": "YulLiteral",
																		"src": "563:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:10",
																		"nodeType": "YulLiteral",
																		"src": "566:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:10"
																},
																"nativeSrc": "556:12:10",
																"nodeType": "YulFunctionCall",
																"src": "556:12:10"
															},
															"nativeSrc": "556:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:10"
											},
											{
												"body": {
													"nativeSrc": "628:54:10",
													"nodeType": "YulBlock",
													"src": "628:54:10",
													"statements": [
														{
															"nativeSrc": "638:38:10",
															"nodeType": "YulAssignment",
															"src": "638:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:10",
																				"nodeType": "YulLiteral",
																				"src": "663:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:10"
																		},
																		"nativeSrc": "652:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:10",
																				"nodeType": "YulLiteral",
																				"src": "672:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:10"
																		},
																		"nativeSrc": "668:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:10"
																},
																"nativeSrc": "648:28:10",
																"nodeType": "YulFunctionCall",
																"src": "648:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:10",
														"nodeType": "YulTypedName",
														"src": "611:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:10",
														"nodeType": "YulTypedName",
														"src": "621:6:10",
														"type": ""
													}
												],
												"src": "580:102:10"
											},
											{
												"body": {
													"nativeSrc": "716:152:10",
													"nodeType": "YulBlock",
													"src": "716:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:10",
																		"nodeType": "YulLiteral",
																		"src": "733:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:10",
																		"nodeType": "YulLiteral",
																		"src": "736:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:10"
																},
																"nativeSrc": "726:88:10",
																"nodeType": "YulFunctionCall",
																"src": "726:88:10"
															},
															"nativeSrc": "726:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:10",
																		"nodeType": "YulLiteral",
																		"src": "830:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:10",
																		"nodeType": "YulLiteral",
																		"src": "833:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:10"
																},
																"nativeSrc": "823:15:10",
																"nodeType": "YulFunctionCall",
																"src": "823:15:10"
															},
															"nativeSrc": "823:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:10",
																		"nodeType": "YulLiteral",
																		"src": "854:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:10",
																		"nodeType": "YulLiteral",
																		"src": "857:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:10"
																},
																"nativeSrc": "847:15:10",
																"nodeType": "YulFunctionCall",
																"src": "847:15:10"
															},
															"nativeSrc": "847:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:10"
											},
											{
												"body": {
													"nativeSrc": "917:238:10",
													"nodeType": "YulBlock",
													"src": "917:238:10",
													"statements": [
														{
															"nativeSrc": "927:58:10",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:10"
																		},
																		"nativeSrc": "957:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:10"
																},
																"nativeSrc": "945:40:10",
																"nodeType": "YulFunctionCall",
																"src": "945:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:10",
																	"nodeType": "YulTypedName",
																	"src": "931:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:10",
																"nodeType": "YulBlock",
																"src": "1096:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:10"
																			},
																			"nativeSrc": "1098:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:10"
																		},
																		"nativeSrc": "1098:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:10",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:10"
																		},
																		"nativeSrc": "1036:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:10",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:10"
																		},
																		"nativeSrc": "1072:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:10"
																},
																"nativeSrc": "1033:62:10",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:10"
															},
															"nativeSrc": "1030:88:10",
															"nodeType": "YulIf",
															"src": "1030:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:10"
																},
																"nativeSrc": "1127:22:10",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:10"
															},
															"nativeSrc": "1127:22:10",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:10",
														"nodeType": "YulTypedName",
														"src": "903:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:10",
														"nodeType": "YulTypedName",
														"src": "911:4:10",
														"type": ""
													}
												],
												"src": "874:281:10"
											},
											{
												"body": {
													"nativeSrc": "1202:88:10",
													"nodeType": "YulBlock",
													"src": "1202:88:10",
													"statements": [
														{
															"nativeSrc": "1212:30:10",
															"nodeType": "YulAssignment",
															"src": "1212:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:10"
																},
																"nativeSrc": "1222:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:10"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:10",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:10"
																},
																"nativeSrc": "1251:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:10"
															},
															"nativeSrc": "1251:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:10",
														"nodeType": "YulTypedName",
														"src": "1186:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:10",
														"nodeType": "YulTypedName",
														"src": "1195:6:10",
														"type": ""
													}
												],
												"src": "1161:129:10"
											},
											{
												"body": {
													"nativeSrc": "1363:241:10",
													"nodeType": "YulBlock",
													"src": "1363:241:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:10",
																"nodeType": "YulBlock",
																"src": "1468:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:10"
																			},
																			"nativeSrc": "1470:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:10"
																		},
																		"nativeSrc": "1470:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:10"
																},
																"nativeSrc": "1437:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:10"
															},
															"nativeSrc": "1434:56:10",
															"nodeType": "YulIf",
															"src": "1434:56:10"
														},
														{
															"nativeSrc": "1500:37:10",
															"nodeType": "YulAssignment",
															"src": "1500:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:10",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:10"
																},
																"nativeSrc": "1508:29:10",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:10"
																}
															]
														},
														{
															"nativeSrc": "1574:23:10",
															"nodeType": "YulAssignment",
															"src": "1574:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:10"
																},
																"nativeSrc": "1582:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:10",
														"nodeType": "YulTypedName",
														"src": "1347:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:10",
														"nodeType": "YulTypedName",
														"src": "1358:4:10",
														"type": ""
													}
												],
												"src": "1296:308:10"
											},
											{
												"body": {
													"nativeSrc": "1672:77:10",
													"nodeType": "YulBlock",
													"src": "1672:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:10"
																},
																"nativeSrc": "1683:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:10"
															},
															"nativeSrc": "1683:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:10"
																		},
																		"nativeSrc": "1722:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:10"
																},
																"nativeSrc": "1715:27:10",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:10"
															},
															"nativeSrc": "1715:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:10",
														"nodeType": "YulTypedName",
														"src": "1654:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:10",
														"nodeType": "YulTypedName",
														"src": "1659:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:10",
														"nodeType": "YulTypedName",
														"src": "1664:6:10",
														"type": ""
													}
												],
												"src": "1610:139:10"
											},
											{
												"body": {
													"nativeSrc": "1850:339:10",
													"nodeType": "YulBlock",
													"src": "1850:339:10",
													"statements": [
														{
															"nativeSrc": "1860:75:10",
															"nodeType": "YulAssignment",
															"src": "1860:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:10"
																		},
																		"nativeSrc": "1885:49:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:10"
																},
																"nativeSrc": "1869:66:10",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:10"
																},
																"nativeSrc": "1944:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:10"
															},
															"nativeSrc": "1944:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:10"
														},
														{
															"nativeSrc": "1974:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:10"
																},
																"nativeSrc": "1985:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:10",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:10",
																"nodeType": "YulBlock",
																"src": "2039:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:10"
																			},
																			"nativeSrc": "2041:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:10"
																		},
																		"nativeSrc": "2041:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:10"
																		},
																		"nativeSrc": "2016:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:10"
																},
																"nativeSrc": "2013:25:10",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:10"
															},
															"nativeSrc": "2010:112:10",
															"nodeType": "YulIf",
															"src": "2010:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:10"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:10"
																},
																"nativeSrc": "2131:52:10",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:10"
															},
															"nativeSrc": "2131:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:10",
														"nodeType": "YulTypedName",
														"src": "1823:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:10",
														"nodeType": "YulTypedName",
														"src": "1828:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:10",
														"nodeType": "YulTypedName",
														"src": "1836:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:10",
														"nodeType": "YulTypedName",
														"src": "1844:5:10",
														"type": ""
													}
												],
												"src": "1755:434:10"
											},
											{
												"body": {
													"nativeSrc": "2282:282:10",
													"nodeType": "YulBlock",
													"src": "2282:282:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:10",
																"nodeType": "YulBlock",
																"src": "2331:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:10"
																			},
																			"nativeSrc": "2333:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:10"
																		},
																		"nativeSrc": "2333:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:10"
																				},
																				"nativeSrc": "2306:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:10"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:10"
																		},
																		"nativeSrc": "2302:27:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:10"
																},
																"nativeSrc": "2295:35:10",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:10"
															},
															"nativeSrc": "2292:122:10",
															"nodeType": "YulIf",
															"src": "2292:122:10"
														},
														{
															"nativeSrc": "2423:27:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:10"
																},
																"nativeSrc": "2437:13:10",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:10",
															"nodeType": "YulAssignment",
															"src": "2459:99:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:10",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:10"
																		},
																		"nativeSrc": "2527:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:10"
																},
																"nativeSrc": "2468:90:10",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:10",
														"nodeType": "YulTypedName",
														"src": "2260:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:10",
														"nodeType": "YulTypedName",
														"src": "2268:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:10",
														"nodeType": "YulTypedName",
														"src": "2276:5:10",
														"type": ""
													}
												],
												"src": "2209:355:10"
											},
											{
												"body": {
													"nativeSrc": "2615:81:10",
													"nodeType": "YulBlock",
													"src": "2615:81:10",
													"statements": [
														{
															"nativeSrc": "2625:65:10",
															"nodeType": "YulAssignment",
															"src": "2625:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:10",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:10"
																},
																"nativeSrc": "2636:54:10",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:10",
														"nodeType": "YulTypedName",
														"src": "2597:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:10",
														"nodeType": "YulTypedName",
														"src": "2607:7:10",
														"type": ""
													}
												],
												"src": "2570:126:10"
											},
											{
												"body": {
													"nativeSrc": "2747:51:10",
													"nodeType": "YulBlock",
													"src": "2747:51:10",
													"statements": [
														{
															"nativeSrc": "2757:35:10",
															"nodeType": "YulAssignment",
															"src": "2757:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:10"
																},
																"nativeSrc": "2768:24:10",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:10",
														"nodeType": "YulTypedName",
														"src": "2729:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:10",
														"nodeType": "YulTypedName",
														"src": "2739:7:10",
														"type": ""
													}
												],
												"src": "2702:96:10"
											},
											{
												"body": {
													"nativeSrc": "2847:79:10",
													"nodeType": "YulBlock",
													"src": "2847:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:10",
																"nodeType": "YulBlock",
																"src": "2904:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:10"
																			},
																			"nativeSrc": "2906:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:10"
																		},
																		"nativeSrc": "2906:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:10"
																				},
																				"nativeSrc": "2877:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:10"
																		},
																		"nativeSrc": "2867:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:10"
																},
																"nativeSrc": "2860:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:10"
															},
															"nativeSrc": "2857:63:10",
															"nodeType": "YulIf",
															"src": "2857:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:10",
														"nodeType": "YulTypedName",
														"src": "2840:5:10",
														"type": ""
													}
												],
												"src": "2804:122:10"
											},
											{
												"body": {
													"nativeSrc": "2995:80:10",
													"nodeType": "YulBlock",
													"src": "2995:80:10",
													"statements": [
														{
															"nativeSrc": "3005:22:10",
															"nodeType": "YulAssignment",
															"src": "3005:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:10"
																},
																"nativeSrc": "3014:13:10",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:10"
																},
																"nativeSrc": "3036:33:10",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:10"
															},
															"nativeSrc": "3036:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:10",
														"nodeType": "YulTypedName",
														"src": "2973:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:10",
														"nodeType": "YulTypedName",
														"src": "2981:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:10",
														"nodeType": "YulTypedName",
														"src": "2989:5:10",
														"type": ""
													}
												],
												"src": "2932:143:10"
											},
											{
												"body": {
													"nativeSrc": "3212:878:10",
													"nodeType": "YulBlock",
													"src": "3212:878:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3258:83:10",
																"nodeType": "YulBlock",
																"src": "3258:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3260:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3260:77:10"
																			},
																			"nativeSrc": "3260:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3260:79:10"
																		},
																		"nativeSrc": "3260:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3260:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3242:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3229:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3229:3:10"
																		},
																		"nativeSrc": "3229:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3254:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3254:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:10"
																},
																"nativeSrc": "3225:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3225:32:10"
															},
															"nativeSrc": "3222:119:10",
															"nodeType": "YulIf",
															"src": "3222:119:10"
														},
														{
															"nativeSrc": "3351:291:10",
															"nodeType": "YulBlock",
															"src": "3351:291:10",
															"statements": [
																{
																	"nativeSrc": "3366:38:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3366:38:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3390:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3390:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3401:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3401:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:10"
																				},
																				"nativeSrc": "3386:17:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:17:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3380:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3380:5:10"
																		},
																		"nativeSrc": "3380:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3380:24:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3370:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3370:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3451:83:10",
																		"nodeType": "YulBlock",
																		"src": "3451:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3453:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3453:77:10"
																					},
																					"nativeSrc": "3453:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3453:79:10"
																				},
																				"nativeSrc": "3453:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3453:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3423:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3423:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3431:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3431:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3420:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3420:2:10"
																		},
																		"nativeSrc": "3420:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3420:30:10"
																	},
																	"nativeSrc": "3417:117:10",
																	"nodeType": "YulIf",
																	"src": "3417:117:10"
																},
																{
																	"nativeSrc": "3548:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3548:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3604:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3604:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3615:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3615:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3600:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3600:3:10"
																				},
																				"nativeSrc": "3600:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3600:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3624:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3624:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3558:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3558:41:10"
																		},
																		"nativeSrc": "3558:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3548:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3652:292:10",
															"nodeType": "YulBlock",
															"src": "3652:292:10",
															"statements": [
																{
																	"nativeSrc": "3667:39:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3667:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3691:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3691:9:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3702:2:10",
																						"nodeType": "YulLiteral",
																						"src": "3702:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3687:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3687:3:10"
																				},
																				"nativeSrc": "3687:18:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3687:18:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3681:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3681:5:10"
																		},
																		"nativeSrc": "3681:25:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3681:25:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3671:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3671:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3753:83:10",
																		"nodeType": "YulBlock",
																		"src": "3753:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3755:77:10",
																						"nodeType": "YulIdentifier",
																						"src": "3755:77:10"
																					},
																					"nativeSrc": "3755:79:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3755:79:10"
																				},
																				"nativeSrc": "3755:79:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "3755:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3725:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3725:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3733:18:10",
																				"nodeType": "YulLiteral",
																				"src": "3733:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3722:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3722:2:10"
																		},
																		"nativeSrc": "3722:30:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3722:30:10"
																	},
																	"nativeSrc": "3719:117:10",
																	"nodeType": "YulIf",
																	"src": "3719:117:10"
																},
																{
																	"nativeSrc": "3850:84:10",
																	"nodeType": "YulAssignment",
																	"src": "3850:84:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3906:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "3906:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3917:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "3917:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3902:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3902:3:10"
																				},
																				"nativeSrc": "3902:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3902:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3926:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3860:41:10",
																			"nodeType": "YulIdentifier",
																			"src": "3860:41:10"
																		},
																		"nativeSrc": "3860:74:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3860:74:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3850:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3850:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3954:129:10",
															"nodeType": "YulBlock",
															"src": "3954:129:10",
															"statements": [
																{
																	"nativeSrc": "3969:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3969:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3983:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3973:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3973:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3999:74:10",
																	"nodeType": "YulAssignment",
																	"src": "3999:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:10"
																				},
																				"nativeSrc": "4041:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4009:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "4009:31:10"
																		},
																		"nativeSrc": "4009:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4009:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3999:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
												"nativeSrc": "3081:1009:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3166:9:10",
														"nodeType": "YulTypedName",
														"src": "3166:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3177:7:10",
														"nodeType": "YulTypedName",
														"src": "3177:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3189:6:10",
														"nodeType": "YulTypedName",
														"src": "3189:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3197:6:10",
														"nodeType": "YulTypedName",
														"src": "3197:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3205:6:10",
														"nodeType": "YulTypedName",
														"src": "3205:6:10",
														"type": ""
													}
												],
												"src": "3081:1009:10"
											},
											{
												"body": {
													"nativeSrc": "4155:40:10",
													"nodeType": "YulBlock",
													"src": "4155:40:10",
													"statements": [
														{
															"nativeSrc": "4166:22:10",
															"nodeType": "YulAssignment",
															"src": "4166:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4182:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4182:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4176:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4176:5:10"
																},
																"nativeSrc": "4176:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4176:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4096:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4138:5:10",
														"nodeType": "YulTypedName",
														"src": "4138:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4148:6:10",
														"nodeType": "YulTypedName",
														"src": "4148:6:10",
														"type": ""
													}
												],
												"src": "4096:99:10"
											},
											{
												"body": {
													"nativeSrc": "4229:152:10",
													"nodeType": "YulBlock",
													"src": "4229:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4246:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4246:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4249:77:10",
																		"nodeType": "YulLiteral",
																		"src": "4249:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4239:6:10"
																},
																"nativeSrc": "4239:88:10",
																"nodeType": "YulFunctionCall",
																"src": "4239:88:10"
															},
															"nativeSrc": "4239:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "4239:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4343:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4346:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:10"
																},
																"nativeSrc": "4336:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4336:15:10"
															},
															"nativeSrc": "4336:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4336:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4367:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4370:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4360:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:10"
																},
																"nativeSrc": "4360:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4360:15:10"
															},
															"nativeSrc": "4360:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4360:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4201:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4201:180:10"
											},
											{
												"body": {
													"nativeSrc": "4438:269:10",
													"nodeType": "YulBlock",
													"src": "4438:269:10",
													"statements": [
														{
															"nativeSrc": "4448:22:10",
															"nodeType": "YulAssignment",
															"src": "4448:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4462:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4468:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4458:3:10"
																},
																"nativeSrc": "4458:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4458:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4448:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:10"
																}
															]
														},
														{
															"nativeSrc": "4479:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4479:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4515:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:10"
																},
																"nativeSrc": "4505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4505:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4483:18:10",
																	"nodeType": "YulTypedName",
																	"src": "4483:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4556:51:10",
																"nodeType": "YulBlock",
																"src": "4556:51:10",
																"statements": [
																	{
																		"nativeSrc": "4570:27:10",
																		"nodeType": "YulAssignment",
																		"src": "4570:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4584:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4584:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4592:4:10",
																					"nodeType": "YulLiteral",
																					"src": "4592:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4580:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4580:3:10"
																			},
																			"nativeSrc": "4580:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4580:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4570:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4536:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4536:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:10"
																},
																"nativeSrc": "4529:26:10",
																"nodeType": "YulFunctionCall",
																"src": "4529:26:10"
															},
															"nativeSrc": "4526:81:10",
															"nodeType": "YulIf",
															"src": "4526:81:10"
														},
														{
															"body": {
																"nativeSrc": "4659:42:10",
																"nodeType": "YulBlock",
																"src": "4659:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4673:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4673:16:10"
																			},
																			"nativeSrc": "4673:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4673:18:10"
																		},
																		"nativeSrc": "4673:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4673:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4623:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "4623:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4646:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4654:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4643:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4643:2:10"
																		},
																		"nativeSrc": "4643:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4620:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4620:2:10"
																},
																"nativeSrc": "4620:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4620:38:10"
															},
															"nativeSrc": "4617:84:10",
															"nodeType": "YulIf",
															"src": "4617:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4387:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4422:4:10",
														"nodeType": "YulTypedName",
														"src": "4422:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4431:6:10",
														"nodeType": "YulTypedName",
														"src": "4431:6:10",
														"type": ""
													}
												],
												"src": "4387:320:10"
											},
											{
												"body": {
													"nativeSrc": "4767:87:10",
													"nodeType": "YulBlock",
													"src": "4767:87:10",
													"statements": [
														{
															"nativeSrc": "4777:11:10",
															"nodeType": "YulAssignment",
															"src": "4777:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "4785:3:10",
																"nodeType": "YulIdentifier",
																"src": "4785:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4805:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4805:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4808:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4808:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4798:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:10"
																},
																"nativeSrc": "4798:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4798:14:10"
															},
															"nativeSrc": "4798:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "4798:14:10"
														},
														{
															"nativeSrc": "4821:26:10",
															"nodeType": "YulAssignment",
															"src": "4821:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4839:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4839:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4842:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4842:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4829:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4829:9:10"
																},
																"nativeSrc": "4829:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4829:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4821:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4821:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4713:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4754:3:10",
														"nodeType": "YulTypedName",
														"src": "4754:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4762:4:10",
														"nodeType": "YulTypedName",
														"src": "4762:4:10",
														"type": ""
													}
												],
												"src": "4713:141:10"
											},
											{
												"body": {
													"nativeSrc": "4904:49:10",
													"nodeType": "YulBlock",
													"src": "4904:49:10",
													"statements": [
														{
															"nativeSrc": "4914:33:10",
															"nodeType": "YulAssignment",
															"src": "4914:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4932:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4932:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4939:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4928:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:10"
																		},
																		"nativeSrc": "4928:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4944:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4944:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4924:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4924:3:10"
																},
																"nativeSrc": "4924:23:10",
																"nodeType": "YulFunctionCall",
																"src": "4924:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4914:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4914:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4860:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4887:5:10",
														"nodeType": "YulTypedName",
														"src": "4887:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4897:6:10",
														"nodeType": "YulTypedName",
														"src": "4897:6:10",
														"type": ""
													}
												],
												"src": "4860:93:10"
											},
											{
												"body": {
													"nativeSrc": "5012:54:10",
													"nodeType": "YulBlock",
													"src": "5012:54:10",
													"statements": [
														{
															"nativeSrc": "5022:37:10",
															"nodeType": "YulAssignment",
															"src": "5022:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5047:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5047:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5043:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5043:3:10"
																},
																"nativeSrc": "5043:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5022:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5022:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4959:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4987:4:10",
														"nodeType": "YulTypedName",
														"src": "4987:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4993:5:10",
														"nodeType": "YulTypedName",
														"src": "4993:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5003:8:10",
														"nodeType": "YulTypedName",
														"src": "5003:8:10",
														"type": ""
													}
												],
												"src": "4959:107:10"
											},
											{
												"body": {
													"nativeSrc": "5148:317:10",
													"nodeType": "YulBlock",
													"src": "5148:317:10",
													"statements": [
														{
															"nativeSrc": "5158:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5179:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "5179:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5191:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5175:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:10"
																},
																"nativeSrc": "5175:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5175:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5162:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5162:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5202:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5233:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5233:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5244:66:10",
																		"nodeType": "YulLiteral",
																		"src": "5244:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5214:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5214:18:10"
																},
																"nativeSrc": "5214:97:10",
																"nodeType": "YulFunctionCall",
																"src": "5214:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5206:4:10",
																	"nodeType": "YulTypedName",
																	"src": "5206:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5320:51:10",
															"nodeType": "YulAssignment",
															"src": "5320:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5351:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5351:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5362:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "5362:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5332:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5332:18:10"
																},
																"nativeSrc": "5332:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5332:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5320:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "5320:8:10"
																}
															]
														},
														{
															"nativeSrc": "5380:30:10",
															"nodeType": "YulAssignment",
															"src": "5380:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5393:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5393:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5404:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5404:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5400:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:10"
																		},
																		"nativeSrc": "5400:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5400:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5389:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5389:3:10"
																},
																"nativeSrc": "5389:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5380:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:10"
																}
															]
														},
														{
															"nativeSrc": "5419:40:10",
															"nodeType": "YulAssignment",
															"src": "5419:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5432:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5432:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5443:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "5443:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5453:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5453:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5439:3:10"
																		},
																		"nativeSrc": "5439:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:10"
																},
																"nativeSrc": "5429:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5429:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5419:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5419:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5072:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5109:5:10",
														"nodeType": "YulTypedName",
														"src": "5109:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5116:10:10",
														"nodeType": "YulTypedName",
														"src": "5116:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5128:8:10",
														"nodeType": "YulTypedName",
														"src": "5128:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5141:6:10",
														"nodeType": "YulTypedName",
														"src": "5141:6:10",
														"type": ""
													}
												],
												"src": "5072:393:10"
											},
											{
												"body": {
													"nativeSrc": "5516:32:10",
													"nodeType": "YulBlock",
													"src": "5516:32:10",
													"statements": [
														{
															"nativeSrc": "5526:16:10",
															"nodeType": "YulAssignment",
															"src": "5526:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "5537:5:10",
																"nodeType": "YulIdentifier",
																"src": "5537:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5526:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5526:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5471:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5498:5:10",
														"nodeType": "YulTypedName",
														"src": "5498:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5508:7:10",
														"nodeType": "YulTypedName",
														"src": "5508:7:10",
														"type": ""
													}
												],
												"src": "5471:77:10"
											},
											{
												"body": {
													"nativeSrc": "5586:28:10",
													"nodeType": "YulBlock",
													"src": "5586:28:10",
													"statements": [
														{
															"nativeSrc": "5596:12:10",
															"nodeType": "YulAssignment",
															"src": "5596:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5603:5:10",
																"nodeType": "YulIdentifier",
																"src": "5603:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5596:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5596:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5554:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5572:5:10",
														"nodeType": "YulTypedName",
														"src": "5572:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5582:3:10",
														"nodeType": "YulTypedName",
														"src": "5582:3:10",
														"type": ""
													}
												],
												"src": "5554:60:10"
											},
											{
												"body": {
													"nativeSrc": "5680:82:10",
													"nodeType": "YulBlock",
													"src": "5680:82:10",
													"statements": [
														{
															"nativeSrc": "5690:66:10",
															"nodeType": "YulAssignment",
															"src": "5690:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5748:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5748:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5730:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5730:17:10"
																				},
																				"nativeSrc": "5730:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5721:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5721:8:10"
																		},
																		"nativeSrc": "5721:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5703:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5703:17:10"
																},
																"nativeSrc": "5703:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5703:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5690:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5690:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5620:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5660:5:10",
														"nodeType": "YulTypedName",
														"src": "5660:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5670:9:10",
														"nodeType": "YulTypedName",
														"src": "5670:9:10",
														"type": ""
													}
												],
												"src": "5620:142:10"
											},
											{
												"body": {
													"nativeSrc": "5815:28:10",
													"nodeType": "YulBlock",
													"src": "5815:28:10",
													"statements": [
														{
															"nativeSrc": "5825:12:10",
															"nodeType": "YulAssignment",
															"src": "5825:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5832:5:10",
																"nodeType": "YulIdentifier",
																"src": "5832:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5768:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5801:5:10",
														"nodeType": "YulTypedName",
														"src": "5801:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5811:3:10",
														"nodeType": "YulTypedName",
														"src": "5811:3:10",
														"type": ""
													}
												],
												"src": "5768:75:10"
											},
											{
												"body": {
													"nativeSrc": "5925:193:10",
													"nodeType": "YulBlock",
													"src": "5925:193:10",
													"statements": [
														{
															"nativeSrc": "5935:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5935:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5990:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "5990:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5959:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5959:30:10"
																},
																"nativeSrc": "5959:39:10",
																"nodeType": "YulFunctionCall",
																"src": "5959:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5939:16:10",
																	"nodeType": "YulTypedName",
																	"src": "5939:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6014:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6014:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6054:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "6054:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6048:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6048:5:10"
																				},
																				"nativeSrc": "6048:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6048:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6061:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6061:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6093:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "6093:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6069:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "6069:23:10"
																				},
																				"nativeSrc": "6069:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6069:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6020:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "6020:27:10"
																		},
																		"nativeSrc": "6020:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6007:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:10"
																},
																"nativeSrc": "6007:105:10",
																"nodeType": "YulFunctionCall",
																"src": "6007:105:10"
															},
															"nativeSrc": "6007:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "6007:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5849:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5902:4:10",
														"nodeType": "YulTypedName",
														"src": "5902:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5908:6:10",
														"nodeType": "YulTypedName",
														"src": "5908:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5916:7:10",
														"nodeType": "YulTypedName",
														"src": "5916:7:10",
														"type": ""
													}
												],
												"src": "5849:269:10"
											},
											{
												"body": {
													"nativeSrc": "6173:24:10",
													"nodeType": "YulBlock",
													"src": "6173:24:10",
													"statements": [
														{
															"nativeSrc": "6183:8:10",
															"nodeType": "YulAssignment",
															"src": "6183:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "6190:1:10",
																"nodeType": "YulLiteral",
																"src": "6190:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6183:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6124:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6169:3:10",
														"nodeType": "YulTypedName",
														"src": "6169:3:10",
														"type": ""
													}
												],
												"src": "6124:73:10"
											},
											{
												"body": {
													"nativeSrc": "6256:136:10",
													"nodeType": "YulBlock",
													"src": "6256:136:10",
													"statements": [
														{
															"nativeSrc": "6266:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6266:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6280:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "6280:30:10"
																},
																"nativeSrc": "6280:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6280:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6270:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6270:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6365:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6365:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6371:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6379:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6379:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6321:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6321:43:10"
																},
																"nativeSrc": "6321:65:10",
																"nodeType": "YulFunctionCall",
																"src": "6321:65:10"
															},
															"nativeSrc": "6321:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "6321:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6203:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6242:4:10",
														"nodeType": "YulTypedName",
														"src": "6242:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6248:6:10",
														"nodeType": "YulTypedName",
														"src": "6248:6:10",
														"type": ""
													}
												],
												"src": "6203:189:10"
											},
											{
												"body": {
													"nativeSrc": "6448:136:10",
													"nodeType": "YulBlock",
													"src": "6448:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6515:63:10",
																"nodeType": "YulBlock",
																"src": "6515:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6559:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6559:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6566:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6529:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "6529:29:10"
																			},
																			"nativeSrc": "6529:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6529:39:10"
																		},
																		"nativeSrc": "6529:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6529:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6468:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6468:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6475:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6465:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6465:2:10"
																},
																"nativeSrc": "6465:14:10",
																"nodeType": "YulFunctionCall",
																"src": "6465:14:10"
															},
															"nativeSrc": "6458:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6480:26:10",
																"nodeType": "YulBlock",
																"src": "6480:26:10",
																"statements": [
																	{
																		"nativeSrc": "6482:22:10",
																		"nodeType": "YulAssignment",
																		"src": "6482:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6495:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6495:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6502:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6502:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6491:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6491:3:10"
																			},
																			"nativeSrc": "6491:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6482:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6482:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6462:2:10",
																"nodeType": "YulBlock",
																"src": "6462:2:10",
																"statements": []
															},
															"src": "6458:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6398:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6436:5:10",
														"nodeType": "YulTypedName",
														"src": "6436:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6443:3:10",
														"nodeType": "YulTypedName",
														"src": "6443:3:10",
														"type": ""
													}
												],
												"src": "6398:186:10"
											},
											{
												"body": {
													"nativeSrc": "6669:464:10",
													"nodeType": "YulBlock",
													"src": "6669:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6695:431:10",
																"nodeType": "YulBlock",
																"src": "6695:431:10",
																"statements": [
																	{
																		"nativeSrc": "6709:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6709:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6757:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "6757:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6725:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "6725:31:10"
																			},
																			"nativeSrc": "6725:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6725:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6713:8:10",
																				"nodeType": "YulTypedName",
																				"src": "6713:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6776:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6776:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6799:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "6799:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6827:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6827:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6809:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "6809:17:10"
																					},
																					"nativeSrc": "6809:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6809:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6795:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6795:3:10"
																			},
																			"nativeSrc": "6795:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6795:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6780:11:10",
																				"nodeType": "YulTypedName",
																				"src": "6780:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6996:27:10",
																			"nodeType": "YulBlock",
																			"src": "6996:27:10",
																			"statements": [
																				{
																					"nativeSrc": "6998:23:10",
																					"nodeType": "YulAssignment",
																					"src": "6998:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7013:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "7013:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6998:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "6998:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6980:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6980:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6992:2:10",
																					"nodeType": "YulLiteral",
																					"src": "6992:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6977:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "6977:2:10"
																			},
																			"nativeSrc": "6977:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6977:18:10"
																		},
																		"nativeSrc": "6974:49:10",
																		"nodeType": "YulIf",
																		"src": "6974:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7065:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "7065:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7082:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "7082:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7110:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "7110:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7092:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "7092:17:10"
																							},
																							"nativeSrc": "7092:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "7092:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7078:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "7078:3:10"
																					},
																					"nativeSrc": "7078:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "7078:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7036:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "7036:28:10"
																			},
																			"nativeSrc": "7036:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7036:80:10"
																		},
																		"nativeSrc": "7036:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7036:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6686:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6686:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6691:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6683:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6683:2:10"
																},
																"nativeSrc": "6683:11:10",
																"nodeType": "YulFunctionCall",
																"src": "6683:11:10"
															},
															"nativeSrc": "6680:446:10",
															"nodeType": "YulIf",
															"src": "6680:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6590:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6645:5:10",
														"nodeType": "YulTypedName",
														"src": "6645:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6652:3:10",
														"nodeType": "YulTypedName",
														"src": "6652:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6657:10:10",
														"nodeType": "YulTypedName",
														"src": "6657:10:10",
														"type": ""
													}
												],
												"src": "6590:543:10"
											},
											{
												"body": {
													"nativeSrc": "7202:54:10",
													"nodeType": "YulBlock",
													"src": "7202:54:10",
													"statements": [
														{
															"nativeSrc": "7212:37:10",
															"nodeType": "YulAssignment",
															"src": "7212:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7237:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7237:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7243:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7243:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:10"
																},
																"nativeSrc": "7233:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7233:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7212:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "7212:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7139:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7177:4:10",
														"nodeType": "YulTypedName",
														"src": "7177:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7183:5:10",
														"nodeType": "YulTypedName",
														"src": "7183:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7193:8:10",
														"nodeType": "YulTypedName",
														"src": "7193:8:10",
														"type": ""
													}
												],
												"src": "7139:117:10"
											},
											{
												"body": {
													"nativeSrc": "7313:118:10",
													"nodeType": "YulBlock",
													"src": "7313:118:10",
													"statements": [
														{
															"nativeSrc": "7323:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7323:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7372:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7372:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7375:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "7375:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7368:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7368:3:10"
																				},
																				"nativeSrc": "7368:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7368:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7387:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7387:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7383:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7383:3:10"
																				},
																				"nativeSrc": "7383:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7383:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7339:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "7339:28:10"
																		},
																		"nativeSrc": "7339:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7339:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7335:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7335:3:10"
																},
																"nativeSrc": "7335:56:10",
																"nodeType": "YulFunctionCall",
																"src": "7335:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7327:4:10",
																	"nodeType": "YulTypedName",
																	"src": "7327:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7400:25:10",
															"nodeType": "YulAssignment",
															"src": "7400:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7414:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7414:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7420:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7420:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7410:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7410:3:10"
																},
																"nativeSrc": "7410:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7410:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7400:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7262:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7290:4:10",
														"nodeType": "YulTypedName",
														"src": "7290:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7296:5:10",
														"nodeType": "YulTypedName",
														"src": "7296:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7306:6:10",
														"nodeType": "YulTypedName",
														"src": "7306:6:10",
														"type": ""
													}
												],
												"src": "7262:169:10"
											},
											{
												"body": {
													"nativeSrc": "7517:214:10",
													"nodeType": "YulBlock",
													"src": "7517:214:10",
													"statements": [
														{
															"nativeSrc": "7650:37:10",
															"nodeType": "YulAssignment",
															"src": "7650:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7677:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7677:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7683:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7683:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7658:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "7658:18:10"
																},
																"nativeSrc": "7658:29:10",
																"nodeType": "YulFunctionCall",
																"src": "7658:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7650:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7650:4:10"
																}
															]
														},
														{
															"nativeSrc": "7696:29:10",
															"nodeType": "YulAssignment",
															"src": "7696:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7707:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7707:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7717:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7717:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7720:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7720:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7713:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7713:3:10"
																		},
																		"nativeSrc": "7713:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7704:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7704:2:10"
																},
																"nativeSrc": "7704:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7704:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7696:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7696:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7436:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7498:4:10",
														"nodeType": "YulTypedName",
														"src": "7498:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7504:3:10",
														"nodeType": "YulTypedName",
														"src": "7504:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7512:4:10",
														"nodeType": "YulTypedName",
														"src": "7512:4:10",
														"type": ""
													}
												],
												"src": "7436:295:10"
											},
											{
												"body": {
													"nativeSrc": "7828:1303:10",
													"nodeType": "YulBlock",
													"src": "7828:1303:10",
													"statements": [
														{
															"nativeSrc": "7839:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7839:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7886:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7853:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "7853:32:10"
																},
																"nativeSrc": "7853:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7853:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7843:6:10",
																	"nodeType": "YulTypedName",
																	"src": "7843:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7975:22:10",
																"nodeType": "YulBlock",
																"src": "7975:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7977:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7977:16:10"
																			},
																			"nativeSrc": "7977:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7977:18:10"
																		},
																		"nativeSrc": "7977:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7977:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7947:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7947:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7955:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7955:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7944:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7944:2:10"
																},
																"nativeSrc": "7944:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7944:30:10"
															},
															"nativeSrc": "7941:56:10",
															"nodeType": "YulIf",
															"src": "7941:56:10"
														},
														{
															"nativeSrc": "8007:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8007:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8053:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8053:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8047:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "8047:5:10"
																		},
																		"nativeSrc": "8047:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8047:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8021:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "8021:25:10"
																},
																"nativeSrc": "8021:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8021:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8011:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8011:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8152:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8152:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8158:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8158:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8166:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8106:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "8106:45:10"
																},
																"nativeSrc": "8106:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8106:67:10"
															},
															"nativeSrc": "8106:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8106:67:10"
														},
														{
															"nativeSrc": "8183:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8183:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8200:1:10",
																"nodeType": "YulLiteral",
																"src": "8200:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8187:9:10",
																	"nodeType": "YulTypedName",
																	"src": "8187:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8211:17:10",
															"nodeType": "YulAssignment",
															"src": "8211:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "8224:4:10",
																"nodeType": "YulLiteral",
																"src": "8224:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8211:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "8211:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8275:611:10",
																		"nodeType": "YulBlock",
																		"src": "8275:611:10",
																		"statements": [
																			{
																				"nativeSrc": "8289:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8289:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8308:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8308:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8320:4:10",
																									"nodeType": "YulLiteral",
																									"src": "8320:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8316:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8316:3:10"
																							},
																							"nativeSrc": "8316:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8316:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8304:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "8304:3:10"
																					},
																					"nativeSrc": "8304:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8304:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8293:7:10",
																						"nodeType": "YulTypedName",
																						"src": "8293:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8340:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8340:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8386:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8386:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8354:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "8354:31:10"
																					},
																					"nativeSrc": "8354:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8354:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8344:6:10",
																						"nodeType": "YulTypedName",
																						"src": "8344:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8404:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8404:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8413:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8413:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8408:1:10",
																						"nodeType": "YulTypedName",
																						"src": "8408:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8472:163:10",
																					"nodeType": "YulBlock",
																					"src": "8472:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8497:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8497:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8515:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "8515:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8520:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "8520:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8511:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8511:3:10"
																												},
																												"nativeSrc": "8511:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8511:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8505:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "8505:5:10"
																										},
																										"nativeSrc": "8505:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8505:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8490:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8490:6:10"
																								},
																								"nativeSrc": "8490:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8490:42:10"
																							},
																							"nativeSrc": "8490:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8490:42:10"
																						},
																						{
																							"nativeSrc": "8549:24:10",
																							"nodeType": "YulAssignment",
																							"src": "8549:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8563:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8563:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8571:1:10",
																										"nodeType": "YulLiteral",
																										"src": "8571:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8559:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8559:3:10"
																								},
																								"nativeSrc": "8559:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8559:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8549:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8549:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8590:31:10",
																							"nodeType": "YulAssignment",
																							"src": "8590:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8607:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "8607:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8618:2:10",
																										"nodeType": "YulLiteral",
																										"src": "8618:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8603:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8603:3:10"
																								},
																								"nativeSrc": "8603:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8603:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8590:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "8590:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8438:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "8438:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8441:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8441:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8435:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8435:2:10"
																					},
																					"nativeSrc": "8435:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8435:14:10"
																				},
																				"nativeSrc": "8427:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8450:21:10",
																					"nodeType": "YulBlock",
																					"src": "8450:21:10",
																					"statements": [
																						{
																							"nativeSrc": "8452:17:10",
																							"nodeType": "YulAssignment",
																							"src": "8452:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8461:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "8461:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8464:4:10",
																										"nodeType": "YulLiteral",
																										"src": "8464:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8457:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "8457:3:10"
																								},
																								"nativeSrc": "8457:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8457:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8452:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "8452:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8431:3:10",
																					"nodeType": "YulBlock",
																					"src": "8431:3:10",
																					"statements": []
																				},
																				"src": "8427:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "8671:156:10",
																					"nodeType": "YulBlock",
																					"src": "8671:156:10",
																					"statements": [
																						{
																							"nativeSrc": "8689:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8689:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8716:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8716:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8721:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8721:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8712:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8712:3:10"
																										},
																										"nativeSrc": "8712:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8712:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8706:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8706:5:10"
																								},
																								"nativeSrc": "8706:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8706:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8693:9:10",
																									"nodeType": "YulTypedName",
																									"src": "8693:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8756:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "8756:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8783:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8783:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8798:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "8798:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8806:4:10",
																														"nodeType": "YulLiteral",
																														"src": "8806:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8794:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "8794:3:10"
																												},
																												"nativeSrc": "8794:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "8794:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8764:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "8764:18:10"
																										},
																										"nativeSrc": "8764:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8764:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8749:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "8749:6:10"
																								},
																								"nativeSrc": "8749:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8749:64:10"
																							},
																							"nativeSrc": "8749:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "8749:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8654:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "8654:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8663:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "8663:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8651:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "8651:2:10"
																					},
																					"nativeSrc": "8651:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8651:19:10"
																				},
																				"nativeSrc": "8648:179:10",
																				"nodeType": "YulIf",
																				"src": "8648:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8847:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "8847:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8861:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "8861:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8869:1:10",
																											"nodeType": "YulLiteral",
																											"src": "8869:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8857:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "8857:3:10"
																									},
																									"nativeSrc": "8857:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "8857:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8873:1:10",
																									"nodeType": "YulLiteral",
																									"src": "8873:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8853:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "8853:3:10"
																							},
																							"nativeSrc": "8853:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "8853:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8840:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8840:6:10"
																					},
																					"nativeSrc": "8840:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "8840:36:10"
																				},
																				"nativeSrc": "8840:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "8840:36:10"
																			}
																		]
																	},
																	"nativeSrc": "8268:618:10",
																	"nodeType": "YulCase",
																	"src": "8268:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8273:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8273:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8903:222:10",
																		"nodeType": "YulBlock",
																		"src": "8903:222:10",
																		"statements": [
																			{
																				"nativeSrc": "8917:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8917:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8930:1:10",
																					"nodeType": "YulLiteral",
																					"src": "8930:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8921:5:10",
																						"nodeType": "YulTypedName",
																						"src": "8921:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8954:67:10",
																					"nodeType": "YulBlock",
																					"src": "8954:67:10",
																					"statements": [
																						{
																							"nativeSrc": "8972:35:10",
																							"nodeType": "YulAssignment",
																							"src": "8972:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8991:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "8991:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8996:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "8996:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8987:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "8987:3:10"
																										},
																										"nativeSrc": "8987:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "8987:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8981:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8981:5:10"
																								},
																								"nativeSrc": "8981:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "8981:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8972:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "8972:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8947:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "8947:6:10"
																				},
																				"nativeSrc": "8944:77:10",
																				"nodeType": "YulIf",
																				"src": "8944:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9041:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "9041:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9100:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "9100:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9107:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "9107:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9047:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "9047:52:10"
																							},
																							"nativeSrc": "9047:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9034:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9034:6:10"
																					},
																					"nativeSrc": "9034:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "9034:81:10"
																				},
																				"nativeSrc": "9034:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "9034:81:10"
																			}
																		]
																	},
																	"nativeSrc": "8895:230:10",
																	"nodeType": "YulCase",
																	"src": "8895:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8248:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8248:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8256:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8256:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8245:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8245:2:10"
																},
																"nativeSrc": "8245:14:10",
																"nodeType": "YulFunctionCall",
																"src": "8245:14:10"
															},
															"nativeSrc": "8238:887:10",
															"nodeType": "YulSwitch",
															"src": "8238:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7736:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7817:4:10",
														"nodeType": "YulTypedName",
														"src": "7817:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7823:3:10",
														"nodeType": "YulTypedName",
														"src": "7823:3:10",
														"type": ""
													}
												],
												"src": "7736:1395:10"
											},
											{
												"body": {
													"nativeSrc": "9202:53:10",
													"nodeType": "YulBlock",
													"src": "9202:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9242:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9242:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9224:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "9224:17:10"
																		},
																		"nativeSrc": "9224:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:10"
																},
																"nativeSrc": "9212:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9212:37:10"
															},
															"nativeSrc": "9212:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "9212:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9137:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9190:5:10",
														"nodeType": "YulTypedName",
														"src": "9190:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9197:3:10",
														"nodeType": "YulTypedName",
														"src": "9197:3:10",
														"type": ""
													}
												],
												"src": "9137:118:10"
											},
											{
												"body": {
													"nativeSrc": "9359:124:10",
													"nodeType": "YulBlock",
													"src": "9359:124:10",
													"statements": [
														{
															"nativeSrc": "9369:26:10",
															"nodeType": "YulAssignment",
															"src": "9369:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9381:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9377:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:10"
																},
																"nativeSrc": "9377:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9377:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9449:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9473:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:10"
																		},
																		"nativeSrc": "9458:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9405:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9405:43:10"
																},
																"nativeSrc": "9405:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9405:71:10"
															},
															"nativeSrc": "9405:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9405:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9261:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9331:9:10",
														"nodeType": "YulTypedName",
														"src": "9331:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9343:6:10",
														"nodeType": "YulTypedName",
														"src": "9343:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9354:4:10",
														"nodeType": "YulTypedName",
														"src": "9354:4:10",
														"type": ""
													}
												],
												"src": "9261:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611f2b380380611f2b8339818101604052810190610031919061039d565b80838381600390816100439190610635565b5080600490816100539190610635565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd9190610713565b60405180910390fd5b6100d58161013360201b60201c565b50600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050505061072c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102558261020f565b810181811067ffffffffffffffff821117156102745761027361021f565b5b80604052505050565b5f6102866101f6565b9050610292828261024c565b919050565b5f67ffffffffffffffff8211156102b1576102b061021f565b5b6102ba8261020f565b9050602081019050919050565b8281835e5f83830152505050565b5f6102e76102e284610297565b61027d565b9050828152602081018484840111156103035761030261020b565b5b61030e8482856102c7565b509392505050565b5f82601f83011261032a57610329610207565b5b815161033a8482602086016102d5565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61036c82610343565b9050919050565b61037c81610362565b8114610386575f5ffd5b50565b5f8151905061039781610373565b92915050565b5f5f5f606084860312156103b4576103b36101ff565b5b5f84015167ffffffffffffffff8111156103d1576103d0610203565b5b6103dd86828701610316565b935050602084015167ffffffffffffffff8111156103fe576103fd610203565b5b61040a86828701610316565b925050604061041b86828701610389565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061047357607f821691505b6020821081036104865761048561042f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104e87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826104ad565b6104f286836104ad565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61053661053161052c8461050a565b610513565b61050a565b9050919050565b5f819050919050565b61054f8361051c565b61056361055b8261053d565b8484546104b9565b825550505050565b5f5f905090565b61057a61056b565b610585818484610546565b505050565b5b818110156105a85761059d5f82610572565b60018101905061058b565b5050565b601f8211156105ed576105be8161048c565b6105c78461049e565b810160208510156105d6578190505b6105ea6105e28561049e565b83018261058a565b50505b505050565b5f82821c905092915050565b5f61060d5f19846008026105f2565b1980831691505092915050565b5f61062583836105fe565b9150826002028217905092915050565b61063e82610425565b67ffffffffffffffff8111156106575761065661021f565b5b610661825461045c565b61066c8282856105ac565b5f60209050601f83116001811461069d575f841561068b578287015190505b610695858261061a565b8655506106fc565b601f1984166106ab8661048c565b5f5b828110156106d2578489015182556001820191506020850194506020810190506106ad565b868310156106ef57848901516106eb601f8916826105fe565b8355505b6001600288020188555050505b505050505050565b61070d81610362565b82525050565b5f6020820190506107265f830184610704565b92915050565b6117f2806107395f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610286578063b86ddfa9146102b6578063dd62ed3e146102d2578063f2fde38b14610302576100fe565b8063715018a61461022457806379cc67901461022e5780638da5cb5b1461024a57806395d89b4114610268576100fe565b8063313ce567116100d1578063313ce5671461019e57806340c10f19146101bc57806342966c68146101d857806370a08231146101f4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a61031e565b60405161011791906111ec565b60405180910390f35b61013a6004803603810190610135919061129d565b6103ae565b60405161014791906112f5565b60405180910390f35b6101586103d0565b604051610165919061131d565b60405180910390f35b61018860048036038101906101839190611336565b6103d9565b60405161019591906112f5565b60405180910390f35b6101a6610407565b6040516101b391906113a1565b60405180910390f35b6101d660048036038101906101d1919061129d565b61040f565b005b6101f260048036038101906101ed91906113ba565b610558565b005b61020e600480360381019061020991906113e5565b6105ec565b60405161021b919061131d565b60405180910390f35b61022c610631565b005b6102486004803603810190610243919061129d565b610644565b005b610252610664565b60405161025f919061141f565b60405180910390f35b61027061068c565b60405161027d91906111ec565b60405180910390f35b6102a0600480360381019061029b919061129d565b61071c565b6040516102ad91906112f5565b60405180910390f35b6102d060048036038101906102cb91906113e5565b61073e565b005b6102ec60048036038101906102e79190611438565b610896565b6040516102f9919061131d565b60405180910390f35b61031c600480360381019061031791906113e5565b610918565b005b60606003805461032d906114a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610359906114a3565b80156103a45780601f1061037b576101008083540402835291602001916103a4565b820191905f5260205f20905b81548152906001019060200180831161038757829003601f168201915b5050505050905090565b5f5f6103b861099c565b90506103c58185856109a3565b600191505092915050565b5f600254905090565b5f5f6103e361099c565b90506103f08582856109b5565b6103fb858585610a48565b60019150509392505050565b5f6012905090565b3360065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104909061151d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fe90611585565b60405180910390fd5b5f8211610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090611613565b60405180910390fd5b6105538383610b38565b505050565b610560610bb7565b5f61056a336105ec565b90505f82036105a5576040517f9e974a1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808211156105df576040517fc266034e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e882610c3e565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610639610bb7565b6106425f610c52565b565b6106568261065061099c565b836109b5565b6106608282610d15565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069b906114a3565b80601f01602080910402602001604051908101604052809291908181526020018280546106c7906114a3565b80156107125780601f106106e957610100808354040283529160200191610712565b820191905f5260205f20905b8154815290600101906020018083116106f557829003601f168201915b5050505050905090565b5f5f61072661099c565b9050610733818585610a48565b600191505092915050565b610746610bb7565b60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c79061167b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083590611709565b60405180910390fd5b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610920610bb7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610990575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610987919061141f565b60405180910390fd5b61099981610c52565b50565b5f33905090565b6109b08383836001610d94565b505050565b5f6109c08484610896565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a425781811015610a33578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a2a93929190611727565b60405180910390fd5b610a4184848484035f610d94565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab8575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aaf919061141f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b28575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1f919061141f565b60405180910390fd5b610b33838383610f63565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b9f919061141f565b60405180910390fd5b610bb35f8383610f63565b5050565b610bbf61099c565b73ffffffffffffffffffffffffffffffffffffffff16610bdd610664565b73ffffffffffffffffffffffffffffffffffffffff1614610c3c57610c0061099c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c33919061141f565b60405180910390fd5b565b610c4f610c4961099c565b82610d15565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d85575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d7c919061141f565b60405180910390fd5b610d90825f83610f63565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e04575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dfb919061141f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e74575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e6b919061141f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f5d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f54919061131d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb3578060025f828254610fa79190611789565b92505081905550611081565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561103c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103393929190611727565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c8578060025f8282540392505081905550611112565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161116f919061131d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111be8261117c565b6111c88185611186565b93506111d8818560208601611196565b6111e1816111a4565b840191505092915050565b5f6020820190508181035f83015261120481846111b4565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61123982611210565b9050919050565b6112498161122f565b8114611253575f5ffd5b50565b5f8135905061126481611240565b92915050565b5f819050919050565b61127c8161126a565b8114611286575f5ffd5b50565b5f8135905061129781611273565b92915050565b5f5f604083850312156112b3576112b261120c565b5b5f6112c085828601611256565b92505060206112d185828601611289565b9150509250929050565b5f8115159050919050565b6112ef816112db565b82525050565b5f6020820190506113085f8301846112e6565b92915050565b6113178161126a565b82525050565b5f6020820190506113305f83018461130e565b92915050565b5f5f5f6060848603121561134d5761134c61120c565b5b5f61135a86828701611256565b935050602061136b86828701611256565b925050604061137c86828701611289565b9150509250925092565b5f60ff82169050919050565b61139b81611386565b82525050565b5f6020820190506113b45f830184611392565b92915050565b5f602082840312156113cf576113ce61120c565b5b5f6113dc84828501611289565b91505092915050565b5f602082840312156113fa576113f961120c565b5b5f61140784828501611256565b91505092915050565b6114198161122f565b82525050565b5f6020820190506114325f830184611410565b92915050565b5f5f6040838503121561144e5761144d61120c565b5b5f61145b85828601611256565b925050602061146c85828601611256565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114ba57607f821691505b6020821081036114cd576114cc611476565b5b50919050565b7f4e6f742054727573746564204d696e74657200000000000000000000000000005f82015250565b5f611507601283611186565b9150611512826114d3565b602082019050919050565b5f6020820190508181035f830152611534816114fb565b9050919050565b7f4e45583a206d696e7420746f20746865207a65726f20616464726573730000005f82015250565b5f61156f601d83611186565b915061157a8261153b565b602082019050919050565b5f6020820190508181035f83015261159c81611563565b9050919050565b7f4e45583a206d696e7420616d6f756e74206d75737420626520677265617465725f8201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b5f6115fd602a83611186565b9150611608826115a3565b604082019050919050565b5f6020820190508181035f83015261162a816115f1565b9050919050565b7f4e45583a20416c6c72656164792074727573746564206d696e746572000000005f82015250565b5f611665601c83611186565b915061167082611631565b602082019050919050565b5f6020820190508181035f83015261169281611659565b9050919050565b7f4e45583a20417574686f726973656420456e67696e652063616e6e6f742062655f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6116f3602583611186565b91506116fe82611699565b604082019050919050565b5f6020820190508181035f830152611720816116e7565b9050919050565b5f60608201905061173a5f830186611410565b611747602083018561130e565b611754604083018461130e565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117938261126a565b915061179e8361126a565b92508282019050808211156117b6576117b561175c565b5b9291505056fea264697066735822122076f7fd6326997ca02702eb490972be598d6dd3f34246bd0f1d63c8b5c17a602e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1F2B CODESIZE SUB DUP1 PUSH2 0x1F2B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x39D JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x635 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x635 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x133 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x72C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x255 DUP3 PUSH2 0x20F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x274 JUMPI PUSH2 0x273 PUSH2 0x21F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x286 PUSH2 0x1F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x292 DUP3 DUP3 PUSH2 0x24C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2B1 JUMPI PUSH2 0x2B0 PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH2 0x2BA DUP3 PUSH2 0x20F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E7 PUSH2 0x2E2 DUP5 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0x20B JUMP JUMPDEST JUMPDEST PUSH2 0x30E DUP5 DUP3 DUP6 PUSH2 0x2C7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32A JUMPI PUSH2 0x329 PUSH2 0x207 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x33A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x36C DUP3 PUSH2 0x343 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37C DUP2 PUSH2 0x362 JUMP JUMPDEST DUP2 EQ PUSH2 0x386 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x397 DUP2 PUSH2 0x373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B4 JUMPI PUSH2 0x3B3 PUSH2 0x1FF JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D0 PUSH2 0x203 JUMP JUMPDEST JUMPDEST PUSH2 0x3DD DUP7 DUP3 DUP8 ADD PUSH2 0x316 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x203 JUMP JUMPDEST JUMPDEST PUSH2 0x40A DUP7 DUP3 DUP8 ADD PUSH2 0x316 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x41B DUP7 DUP3 DUP8 ADD PUSH2 0x389 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x473 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x486 JUMPI PUSH2 0x485 PUSH2 0x42F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x4E8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4AD JUMP JUMPDEST PUSH2 0x4F2 DUP7 DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH2 0x531 PUSH2 0x52C DUP5 PUSH2 0x50A JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x54F DUP4 PUSH2 0x51C JUMP JUMPDEST PUSH2 0x563 PUSH2 0x55B DUP3 PUSH2 0x53D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4B9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x57A PUSH2 0x56B JUMP JUMPDEST PUSH2 0x585 DUP2 DUP5 DUP5 PUSH2 0x546 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5A8 JUMPI PUSH2 0x59D PUSH0 DUP3 PUSH2 0x572 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x58B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5BE DUP2 PUSH2 0x48C JUMP JUMPDEST PUSH2 0x5C7 DUP5 PUSH2 0x49E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x5D6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x5EA PUSH2 0x5E2 DUP6 PUSH2 0x49E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x58A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x60D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x5F2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x625 DUP4 DUP4 PUSH2 0x5FE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63E DUP3 PUSH2 0x425 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x21F JUMP JUMPDEST JUMPDEST PUSH2 0x661 DUP3 SLOAD PUSH2 0x45C JUMP JUMPDEST PUSH2 0x66C DUP3 DUP3 DUP6 PUSH2 0x5AC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x69D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x68B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x695 DUP6 DUP3 PUSH2 0x61A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x6AB DUP7 PUSH2 0x48C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6AD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x6EF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x6EB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5FE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x70D DUP2 PUSH2 0x362 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x726 PUSH0 DUP4 ADD DUP5 PUSH2 0x704 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F2 DUP1 PUSH2 0x739 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xB86DDFA9 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x302 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x268 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x387 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3B8 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 DUP2 DUP6 DUP6 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP6 DUP3 DUP6 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x3FB DUP6 DUP6 DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FE SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x560 PUSH2 0xBB7 JUMP JUMPDEST PUSH0 PUSH2 0x56A CALLER PUSH2 0x5EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 SUB PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E974A1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC266034E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP3 PUSH2 0xC3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x642 PUSH0 PUSH2 0xC52 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x650 PUSH2 0x99C JUMP JUMPDEST DUP4 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x660 DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x712 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x712 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x726 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x733 DUP2 DUP6 DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x746 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x920 PUSH2 0xBB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x990 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x999 DUP2 PUSH2 0xC52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C0 DUP5 DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA42 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA33 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD94 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB33 DUP4 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 PUSH0 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBF PUSH2 0x99C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDD PUSH2 0x664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3C JUMPI PUSH2 0xC00 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC4F PUSH2 0xC49 PUSH2 0x99C JUMP JUMPDEST DUP3 PUSH2 0xD15 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD90 DUP3 PUSH0 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF5D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1789 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1081 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x103C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1112 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11BE DUP3 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11C8 DUP2 DUP6 PUSH2 0x1186 JUMP JUMPDEST SWAP4 POP PUSH2 0x11D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1204 DUP2 DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1239 DUP3 PUSH2 0x1210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP2 EQ PUSH2 0x1253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1264 DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127C DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x1286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1297 DUP2 PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EF DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1308 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1330 PUSH0 DUP4 ADD DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134C PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135A DUP7 DUP3 DUP8 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x136B DUP7 DUP3 DUP8 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x137C DUP7 DUP3 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139B DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DC DUP5 DUP3 DUP6 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1407 DUP5 DUP3 DUP6 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1432 PUSH0 DUP4 ADD DUP5 PUSH2 0x1410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x145B DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x146C DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1476 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742054727573746564204D696E7465720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1507 PUSH1 0x12 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1512 DUP3 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1534 DUP2 PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A206D696E7420746F20746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156F PUSH1 0x1D DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x157A DUP3 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159C DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A206D696E7420616D6F756E74206D7573742062652067726561746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x207468616E207A65726F00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FD PUSH1 0x2A DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1608 DUP3 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x162A DUP2 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A20416C6C72656164792074727573746564206D696E74657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1665 PUSH1 0x1C DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP3 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1692 DUP2 PUSH2 0x1659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A20417574686F726973656420456E67696E652063616E6E6F74206265 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16F3 PUSH1 0x25 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x16FE DUP3 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1720 DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x173A PUSH0 DUP4 ADD DUP7 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x1747 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x1754 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1793 DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP2 POP PUSH2 0x179E DUP4 PUSH2 0x126A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B6 JUMPI PUSH2 0x17B5 PUSH2 0x175C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xF7FD6326997CA02702EB490972BE598D6DD3F34246BD0F SAR PUSH4 0xC8B5C17A PUSH1 0x2E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "682:1350:8:-:0;;;728:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;835:12;811:5;818:7;1656:5:3;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;887:4:8::2;858:14;:28;873:12;858:28;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;728:170:::0;;;682:1350;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:10:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:1009::-;3189:6;3197;3205;3254:2;3242:9;3233:7;3229:23;3225:32;3222:119;;;3260:79;;:::i;:::-;3222:119;3401:1;3390:9;3386:17;3380:24;3431:18;3423:6;3420:30;3417:117;;;3453:79;;:::i;:::-;3417:117;3558:74;3624:7;3615:6;3604:9;3600:22;3558:74;:::i;:::-;3548:84;;3351:291;3702:2;3691:9;3687:18;3681:25;3733:18;3725:6;3722:30;3719:117;;;3755:79;;:::i;:::-;3719:117;3860:74;3926:7;3917:6;3906:9;3902:22;3860:74;:::i;:::-;3850:84;;3652:292;3983:2;4009:64;4065:7;4056:6;4045:9;4041:22;4009:64;:::i;:::-;3999:74;;3954:129;3081:1009;;;;;:::o;4096:99::-;4148:6;4182:5;4176:12;4166:22;;4096:99;;;:::o;4201:180::-;4249:77;4246:1;4239:88;4346:4;4343:1;4336:15;4370:4;4367:1;4360:15;4387:320;4431:6;4468:1;4462:4;4458:12;4448:22;;4515:1;4509:4;4505:12;4536:18;4526:81;;4592:4;4584:6;4580:17;4570:27;;4526:81;4654:2;4646:6;4643:14;4623:18;4620:38;4617:84;;4673:18;;:::i;:::-;4617:84;4438:269;4387:320;;;:::o;4713:141::-;4762:4;4785:3;4777:11;;4808:3;4805:1;4798:14;4842:4;4839:1;4829:18;4821:26;;4713:141;;;:::o;4860:93::-;4897:6;4944:2;4939;4932:5;4928:14;4924:23;4914:33;;4860:93;;;:::o;4959:107::-;5003:8;5053:5;5047:4;5043:16;5022:37;;4959:107;;;;:::o;5072:393::-;5141:6;5191:1;5179:10;5175:18;5214:97;5244:66;5233:9;5214:97;:::i;:::-;5332:39;5362:8;5351:9;5332:39;:::i;:::-;5320:51;;5404:4;5400:9;5393:5;5389:21;5380:30;;5453:4;5443:8;5439:19;5432:5;5429:30;5419:40;;5148:317;;5072:393;;;;;:::o;5471:77::-;5508:7;5537:5;5526:16;;5471:77;;;:::o;5554:60::-;5582:3;5603:5;5596:12;;5554:60;;;:::o;5620:142::-;5670:9;5703:53;5721:34;5730:24;5748:5;5730:24;:::i;:::-;5721:34;:::i;:::-;5703:53;:::i;:::-;5690:66;;5620:142;;;:::o;5768:75::-;5811:3;5832:5;5825:12;;5768:75;;;:::o;5849:269::-;5959:39;5990:7;5959:39;:::i;:::-;6020:91;6069:41;6093:16;6069:41;:::i;:::-;6061:6;6054:4;6048:11;6020:91;:::i;:::-;6014:4;6007:105;5925:193;5849:269;;;:::o;6124:73::-;6169:3;6190:1;6183:8;;6124:73;:::o;6203:189::-;6280:32;;:::i;:::-;6321:65;6379:6;6371;6365:4;6321:65;:::i;:::-;6256:136;6203:189;;:::o;6398:186::-;6458:120;6475:3;6468:5;6465:14;6458:120;;;6529:39;6566:1;6559:5;6529:39;:::i;:::-;6502:1;6495:5;6491:13;6482:22;;6458:120;;;6398:186;;:::o;6590:543::-;6691:2;6686:3;6683:11;6680:446;;;6725:38;6757:5;6725:38;:::i;:::-;6809:29;6827:10;6809:29;:::i;:::-;6799:8;6795:44;6992:2;6980:10;6977:18;6974:49;;;7013:8;6998:23;;6974:49;7036:80;7092:22;7110:3;7092:22;:::i;:::-;7082:8;7078:37;7065:11;7036:80;:::i;:::-;6695:431;;6680:446;6590:543;;;:::o;7139:117::-;7193:8;7243:5;7237:4;7233:16;7212:37;;7139:117;;;;:::o;7262:169::-;7306:6;7339:51;7387:1;7383:6;7375:5;7372:1;7368:13;7339:51;:::i;:::-;7335:56;7420:4;7414;7410:15;7400:25;;7313:118;7262:169;;;;:::o;7436:295::-;7512:4;7658:29;7683:3;7677:4;7658:29;:::i;:::-;7650:37;;7720:3;7717:1;7713:11;7707:4;7704:21;7696:29;;7436:295;;;;:::o;7736:1395::-;7853:37;7886:3;7853:37;:::i;:::-;7955:18;7947:6;7944:30;7941:56;;;7977:18;;:::i;:::-;7941:56;8021:38;8053:4;8047:11;8021:38;:::i;:::-;8106:67;8166:6;8158;8152:4;8106:67;:::i;:::-;8200:1;8224:4;8211:17;;8256:2;8248:6;8245:14;8273:1;8268:618;;;;8930:1;8947:6;8944:77;;;8996:9;8991:3;8987:19;8981:26;8972:35;;8944:77;9047:67;9107:6;9100:5;9047:67;:::i;:::-;9041:4;9034:81;8903:222;8238:887;;8268:618;8320:4;8316:9;8308:6;8304:22;8354:37;8386:4;8354:37;:::i;:::-;8413:1;8427:208;8441:7;8438:1;8435:14;8427:208;;;8520:9;8515:3;8511:19;8505:26;8497:6;8490:42;8571:1;8563:6;8559:14;8549:24;;8618:2;8607:9;8603:18;8590:31;;8464:4;8461:1;8457:12;8452:17;;8427:208;;;8663:6;8654:7;8651:19;8648:179;;;8721:9;8716:3;8712:19;8706:26;8764:48;8806:4;8798:6;8794:17;8783:9;8764:48;:::i;:::-;8756:6;8749:64;8671:156;8648:179;8873:1;8869;8861:6;8857:14;8853:22;8847:4;8840:36;8275:611;;;8238:887;;7828:1303;;;7736:1395;;:::o;9137:118::-;9224:24;9242:5;9224:24;:::i;:::-;9219:3;9212:37;9137:118;;:::o;9261:222::-;9354:4;9392:2;9381:9;9377:18;9369:26;;9405:71;9473:1;9462:9;9458:17;9449:6;9405:71;:::i;:::-;9261:222;;;;:::o;682:1350:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_755": {
									"entryPoint": 2467,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 3476,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_737": {
									"entryPoint": 3349,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2999,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 2872,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1026": {
									"entryPoint": 2460,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_863": {
									"entryPoint": 2485,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3154,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 2632,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 3939,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 2198,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 942,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_450": {
									"entryPoint": 1516,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_987": {
									"entryPoint": 1604,
									"id": 987,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1139": {
									"entryPoint": 1368,
									"id": 1139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_966": {
									"entryPoint": 3134,
									"id": 966,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 1031,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1173": {
									"entryPoint": 1039,
									"id": 1173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 798,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1636,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1585,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setauthorisedEngine_1205": {
									"entryPoint": 1854,
									"id": 1205,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 1676,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 976,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 985,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2328,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 1820,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5927,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5980,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72": {
									"entryPoint": 5331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6": {
									"entryPoint": 5539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12581:10",
										"nodeType": "YulBlock",
										"src": "0:12581:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:77:10",
													"nodeType": "YulBlock",
													"src": "349:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:10"
																},
																"nativeSrc": "360:23:10",
																"nodeType": "YulFunctionCall",
																"src": "360:23:10"
															},
															"nativeSrc": "360:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nativeSrc": "399:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:10",
																		"nodeType": "YulLiteral",
																		"src": "417:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:10"
																},
																"nativeSrc": "392:27:10",
																"nodeType": "YulFunctionCall",
																"src": "392:27:10"
															},
															"nativeSrc": "392:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:139:10"
											},
											{
												"body": {
													"nativeSrc": "480:54:10",
													"nodeType": "YulBlock",
													"src": "480:54:10",
													"statements": [
														{
															"nativeSrc": "490:38:10",
															"nodeType": "YulAssignment",
															"src": "490:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:10",
																				"nodeType": "YulLiteral",
																				"src": "515:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:10"
																		},
																		"nativeSrc": "504:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:10",
																				"nodeType": "YulLiteral",
																				"src": "524:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:10"
																		},
																		"nativeSrc": "520:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:10"
																},
																"nativeSrc": "500:28:10",
																"nodeType": "YulFunctionCall",
																"src": "500:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:10",
														"nodeType": "YulTypedName",
														"src": "463:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:10",
														"nodeType": "YulTypedName",
														"src": "473:6:10",
														"type": ""
													}
												],
												"src": "432:102:10"
											},
											{
												"body": {
													"nativeSrc": "632:285:10",
													"nodeType": "YulBlock",
													"src": "632:285:10",
													"statements": [
														{
															"nativeSrc": "642:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:10"
																},
																"nativeSrc": "656:39:10",
																"nodeType": "YulFunctionCall",
																"src": "656:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:10",
																	"nodeType": "YulTypedName",
																	"src": "646:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:10",
															"nodeType": "YulAssignment",
															"src": "704:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:10"
																},
																"nativeSrc": "711:71:10",
																"nodeType": "YulFunctionCall",
																"src": "711:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:10",
																				"nodeType": "YulLiteral",
																				"src": "837:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:10"
																		},
																		"nativeSrc": "826:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:10"
																},
																"nativeSrc": "791:65:10",
																"nodeType": "YulFunctionCall",
																"src": "791:65:10"
															},
															"nativeSrc": "791:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:10"
														},
														{
															"nativeSrc": "865:46:10",
															"nodeType": "YulAssignment",
															"src": "865:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:10"
																		},
																		"nativeSrc": "881:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:10"
																},
																"nativeSrc": "872:39:10",
																"nodeType": "YulFunctionCall",
																"src": "872:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:10",
														"nodeType": "YulTypedName",
														"src": "613:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:10",
														"nodeType": "YulTypedName",
														"src": "620:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:10",
														"nodeType": "YulTypedName",
														"src": "628:3:10",
														"type": ""
													}
												],
												"src": "540:377:10"
											},
											{
												"body": {
													"nativeSrc": "1041:195:10",
													"nodeType": "YulBlock",
													"src": "1041:195:10",
													"statements": [
														{
															"nativeSrc": "1051:26:10",
															"nodeType": "YulAssignment",
															"src": "1051:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:10"
																},
																"nativeSrc": "1059:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:10"
																		},
																		"nativeSrc": "1094:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:10"
																		},
																		"nativeSrc": "1113:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:10"
																},
																"nativeSrc": "1087:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:10"
															},
															"nativeSrc": "1087:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:10"
														},
														{
															"nativeSrc": "1143:86:10",
															"nodeType": "YulAssignment",
															"src": "1143:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:10"
																},
																"nativeSrc": "1151:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:10",
														"nodeType": "YulTypedName",
														"src": "1013:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:10",
														"nodeType": "YulTypedName",
														"src": "1025:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:10",
														"nodeType": "YulTypedName",
														"src": "1036:4:10",
														"type": ""
													}
												],
												"src": "923:313:10"
											},
											{
												"body": {
													"nativeSrc": "1282:35:10",
													"nodeType": "YulBlock",
													"src": "1282:35:10",
													"statements": [
														{
															"nativeSrc": "1292:19:10",
															"nodeType": "YulAssignment",
															"src": "1292:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:10"
																},
																"nativeSrc": "1302:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:10",
														"nodeType": "YulTypedName",
														"src": "1275:6:10",
														"type": ""
													}
												],
												"src": "1242:75:10"
											},
											{
												"body": {
													"nativeSrc": "1412:28:10",
													"nodeType": "YulBlock",
													"src": "1412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:10"
																},
																"nativeSrc": "1422:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:10"
															},
															"nativeSrc": "1422:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:10"
											},
											{
												"body": {
													"nativeSrc": "1535:28:10",
													"nodeType": "YulBlock",
													"src": "1535:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:10"
																},
																"nativeSrc": "1545:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:10"
															},
															"nativeSrc": "1545:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:10"
											},
											{
												"body": {
													"nativeSrc": "1614:81:10",
													"nodeType": "YulBlock",
													"src": "1614:81:10",
													"statements": [
														{
															"nativeSrc": "1624:65:10",
															"nodeType": "YulAssignment",
															"src": "1624:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:10"
																},
																"nativeSrc": "1635:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:10",
														"nodeType": "YulTypedName",
														"src": "1596:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:10",
														"nodeType": "YulTypedName",
														"src": "1606:7:10",
														"type": ""
													}
												],
												"src": "1569:126:10"
											},
											{
												"body": {
													"nativeSrc": "1746:51:10",
													"nodeType": "YulBlock",
													"src": "1746:51:10",
													"statements": [
														{
															"nativeSrc": "1756:35:10",
															"nodeType": "YulAssignment",
															"src": "1756:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:10"
																},
																"nativeSrc": "1767:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:10",
														"nodeType": "YulTypedName",
														"src": "1728:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:10",
														"nodeType": "YulTypedName",
														"src": "1738:7:10",
														"type": ""
													}
												],
												"src": "1701:96:10"
											},
											{
												"body": {
													"nativeSrc": "1846:79:10",
													"nodeType": "YulBlock",
													"src": "1846:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:10",
																"nodeType": "YulBlock",
																"src": "1903:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:10"
																			},
																			"nativeSrc": "1905:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:10"
																		},
																		"nativeSrc": "1905:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:10"
																				},
																				"nativeSrc": "1876:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:10"
																		},
																		"nativeSrc": "1866:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:10"
																},
																"nativeSrc": "1859:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:10"
															},
															"nativeSrc": "1856:63:10",
															"nodeType": "YulIf",
															"src": "1856:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:10",
														"nodeType": "YulTypedName",
														"src": "1839:5:10",
														"type": ""
													}
												],
												"src": "1803:122:10"
											},
											{
												"body": {
													"nativeSrc": "1983:87:10",
													"nodeType": "YulBlock",
													"src": "1983:87:10",
													"statements": [
														{
															"nativeSrc": "1993:29:10",
															"nodeType": "YulAssignment",
															"src": "1993:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:10"
																},
																"nativeSrc": "2002:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:10"
																},
																"nativeSrc": "2031:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:10"
															},
															"nativeSrc": "2031:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:10",
														"nodeType": "YulTypedName",
														"src": "1961:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:10",
														"nodeType": "YulTypedName",
														"src": "1969:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:10",
														"nodeType": "YulTypedName",
														"src": "1977:5:10",
														"type": ""
													}
												],
												"src": "1931:139:10"
											},
											{
												"body": {
													"nativeSrc": "2121:32:10",
													"nodeType": "YulBlock",
													"src": "2121:32:10",
													"statements": [
														{
															"nativeSrc": "2131:16:10",
															"nodeType": "YulAssignment",
															"src": "2131:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:10",
																"nodeType": "YulIdentifier",
																"src": "2142:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:10",
														"nodeType": "YulTypedName",
														"src": "2103:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:10",
														"nodeType": "YulTypedName",
														"src": "2113:7:10",
														"type": ""
													}
												],
												"src": "2076:77:10"
											},
											{
												"body": {
													"nativeSrc": "2202:79:10",
													"nodeType": "YulBlock",
													"src": "2202:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:10",
																"nodeType": "YulBlock",
																"src": "2259:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:10"
																			},
																			"nativeSrc": "2261:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:10"
																		},
																		"nativeSrc": "2261:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:10"
																				},
																				"nativeSrc": "2232:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:10"
																		},
																		"nativeSrc": "2222:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:10"
																},
																"nativeSrc": "2215:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:10"
															},
															"nativeSrc": "2212:63:10",
															"nodeType": "YulIf",
															"src": "2212:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:10",
														"nodeType": "YulTypedName",
														"src": "2195:5:10",
														"type": ""
													}
												],
												"src": "2159:122:10"
											},
											{
												"body": {
													"nativeSrc": "2339:87:10",
													"nodeType": "YulBlock",
													"src": "2339:87:10",
													"statements": [
														{
															"nativeSrc": "2349:29:10",
															"nodeType": "YulAssignment",
															"src": "2349:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:10"
																},
																"nativeSrc": "2358:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:10"
																},
																"nativeSrc": "2387:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:10"
															},
															"nativeSrc": "2387:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:10",
														"nodeType": "YulTypedName",
														"src": "2317:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:10",
														"nodeType": "YulTypedName",
														"src": "2325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:10",
														"nodeType": "YulTypedName",
														"src": "2333:5:10",
														"type": ""
													}
												],
												"src": "2287:139:10"
											},
											{
												"body": {
													"nativeSrc": "2515:391:10",
													"nodeType": "YulBlock",
													"src": "2515:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:10",
																"nodeType": "YulBlock",
																"src": "2561:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:10"
																			},
																			"nativeSrc": "2563:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:10"
																		},
																		"nativeSrc": "2563:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:10"
																		},
																		"nativeSrc": "2532:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:10"
																},
																"nativeSrc": "2528:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:10"
															},
															"nativeSrc": "2525:119:10",
															"nodeType": "YulIf",
															"src": "2525:119:10"
														},
														{
															"nativeSrc": "2654:117:10",
															"nodeType": "YulBlock",
															"src": "2654:117:10",
															"statements": [
																{
																	"nativeSrc": "2669:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:10"
																				},
																				"nativeSrc": "2729:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:10"
																		},
																		"nativeSrc": "2708:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:10",
															"nodeType": "YulBlock",
															"src": "2781:118:10",
															"statements": [
																{
																	"nativeSrc": "2796:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:10"
																				},
																				"nativeSrc": "2857:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:10"
																		},
																		"nativeSrc": "2836:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:10",
														"nodeType": "YulTypedName",
														"src": "2477:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:10",
														"nodeType": "YulTypedName",
														"src": "2488:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:10",
														"nodeType": "YulTypedName",
														"src": "2500:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:10",
														"nodeType": "YulTypedName",
														"src": "2508:6:10",
														"type": ""
													}
												],
												"src": "2432:474:10"
											},
											{
												"body": {
													"nativeSrc": "2954:48:10",
													"nodeType": "YulBlock",
													"src": "2954:48:10",
													"statements": [
														{
															"nativeSrc": "2964:32:10",
															"nodeType": "YulAssignment",
															"src": "2964:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:10"
																		},
																		"nativeSrc": "2982:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:10"
																},
																"nativeSrc": "2975:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:10",
														"nodeType": "YulTypedName",
														"src": "2936:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:10",
														"nodeType": "YulTypedName",
														"src": "2946:7:10",
														"type": ""
													}
												],
												"src": "2912:90:10"
											},
											{
												"body": {
													"nativeSrc": "3067:50:10",
													"nodeType": "YulBlock",
													"src": "3067:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:10"
																		},
																		"nativeSrc": "3089:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:10"
															},
															"nativeSrc": "3077:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3008:109:10"
											},
											{
												"body": {
													"nativeSrc": "3215:118:10",
													"nodeType": "YulBlock",
													"src": "3215:118:10",
													"statements": [
														{
															"nativeSrc": "3225:26:10",
															"nodeType": "YulAssignment",
															"src": "3225:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:10"
																},
																"nativeSrc": "3233:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:10"
																		},
																		"nativeSrc": "3308:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:10"
																},
																"nativeSrc": "3261:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:10"
															},
															"nativeSrc": "3261:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:10",
														"nodeType": "YulTypedName",
														"src": "3199:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:10",
														"nodeType": "YulTypedName",
														"src": "3210:4:10",
														"type": ""
													}
												],
												"src": "3123:210:10"
											},
											{
												"body": {
													"nativeSrc": "3404:53:10",
													"nodeType": "YulBlock",
													"src": "3404:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:10"
																		},
																		"nativeSrc": "3426:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:10"
																},
																"nativeSrc": "3414:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:10"
															},
															"nativeSrc": "3414:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:10",
														"nodeType": "YulTypedName",
														"src": "3392:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:10",
														"nodeType": "YulTypedName",
														"src": "3399:3:10",
														"type": ""
													}
												],
												"src": "3339:118:10"
											},
											{
												"body": {
													"nativeSrc": "3561:124:10",
													"nodeType": "YulBlock",
													"src": "3561:124:10",
													"statements": [
														{
															"nativeSrc": "3571:26:10",
															"nodeType": "YulAssignment",
															"src": "3571:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:10"
																},
																"nativeSrc": "3579:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:10"
																		},
																		"nativeSrc": "3660:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:10"
																},
																"nativeSrc": "3607:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:10"
															},
															"nativeSrc": "3607:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:10",
														"nodeType": "YulTypedName",
														"src": "3533:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:10",
														"nodeType": "YulTypedName",
														"src": "3545:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:10",
														"nodeType": "YulTypedName",
														"src": "3556:4:10",
														"type": ""
													}
												],
												"src": "3463:222:10"
											},
											{
												"body": {
													"nativeSrc": "3791:519:10",
													"nodeType": "YulBlock",
													"src": "3791:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:10",
																"nodeType": "YulBlock",
																"src": "3837:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:10"
																			},
																			"nativeSrc": "3839:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:10"
																		},
																		"nativeSrc": "3839:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:10"
																		},
																		"nativeSrc": "3808:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:10"
																},
																"nativeSrc": "3804:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:10"
															},
															"nativeSrc": "3801:119:10",
															"nodeType": "YulIf",
															"src": "3801:119:10"
														},
														{
															"nativeSrc": "3930:117:10",
															"nodeType": "YulBlock",
															"src": "3930:117:10",
															"statements": [
																{
																	"nativeSrc": "3945:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:10"
																				},
																				"nativeSrc": "4005:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:10"
																		},
																		"nativeSrc": "3984:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:10",
															"nodeType": "YulBlock",
															"src": "4057:118:10",
															"statements": [
																{
																	"nativeSrc": "4072:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:10"
																				},
																				"nativeSrc": "4133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:10"
																		},
																		"nativeSrc": "4112:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:10",
															"nodeType": "YulBlock",
															"src": "4185:118:10",
															"statements": [
																{
																	"nativeSrc": "4200:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:10"
																				},
																				"nativeSrc": "4261:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:10"
																		},
																		"nativeSrc": "4240:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:10",
														"nodeType": "YulTypedName",
														"src": "3745:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:10",
														"nodeType": "YulTypedName",
														"src": "3756:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:10",
														"nodeType": "YulTypedName",
														"src": "3768:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:10",
														"nodeType": "YulTypedName",
														"src": "3776:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:10",
														"nodeType": "YulTypedName",
														"src": "3784:6:10",
														"type": ""
													}
												],
												"src": "3691:619:10"
											},
											{
												"body": {
													"nativeSrc": "4359:43:10",
													"nodeType": "YulBlock",
													"src": "4359:43:10",
													"statements": [
														{
															"nativeSrc": "4369:27:10",
															"nodeType": "YulAssignment",
															"src": "4369:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:10"
																},
																"nativeSrc": "4380:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:10",
														"nodeType": "YulTypedName",
														"src": "4341:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:10",
														"nodeType": "YulTypedName",
														"src": "4351:7:10",
														"type": ""
													}
												],
												"src": "4316:86:10"
											},
											{
												"body": {
													"nativeSrc": "4469:51:10",
													"nodeType": "YulBlock",
													"src": "4469:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:10"
																		},
																		"nativeSrc": "4491:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:10"
																},
																"nativeSrc": "4479:35:10",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:10"
															},
															"nativeSrc": "4479:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:10",
														"nodeType": "YulTypedName",
														"src": "4457:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:10",
														"nodeType": "YulTypedName",
														"src": "4464:3:10",
														"type": ""
													}
												],
												"src": "4408:112:10"
											},
											{
												"body": {
													"nativeSrc": "4620:120:10",
													"nodeType": "YulBlock",
													"src": "4620:120:10",
													"statements": [
														{
															"nativeSrc": "4630:26:10",
															"nodeType": "YulAssignment",
															"src": "4630:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:10"
																},
																"nativeSrc": "4638:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:10"
																		},
																		"nativeSrc": "4715:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:10"
																},
																"nativeSrc": "4666:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:10"
															},
															"nativeSrc": "4666:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:10",
														"nodeType": "YulTypedName",
														"src": "4592:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:10",
														"nodeType": "YulTypedName",
														"src": "4604:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:10",
														"nodeType": "YulTypedName",
														"src": "4615:4:10",
														"type": ""
													}
												],
												"src": "4526:214:10"
											},
											{
												"body": {
													"nativeSrc": "4812:263:10",
													"nodeType": "YulBlock",
													"src": "4812:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:10",
																"nodeType": "YulBlock",
																"src": "4858:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:10"
																			},
																			"nativeSrc": "4860:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:10"
																		},
																		"nativeSrc": "4860:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:10"
																		},
																		"nativeSrc": "4829:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:10"
																},
																"nativeSrc": "4825:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:10"
															},
															"nativeSrc": "4822:119:10",
															"nodeType": "YulIf",
															"src": "4822:119:10"
														},
														{
															"nativeSrc": "4951:117:10",
															"nodeType": "YulBlock",
															"src": "4951:117:10",
															"statements": [
																{
																	"nativeSrc": "4966:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:10"
																				},
																				"nativeSrc": "5026:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:10"
																		},
																		"nativeSrc": "5005:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:10",
														"nodeType": "YulTypedName",
														"src": "4782:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:10",
														"nodeType": "YulTypedName",
														"src": "4793:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:10",
														"nodeType": "YulTypedName",
														"src": "4805:6:10",
														"type": ""
													}
												],
												"src": "4746:329:10"
											},
											{
												"body": {
													"nativeSrc": "5147:263:10",
													"nodeType": "YulBlock",
													"src": "5147:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:10",
																"nodeType": "YulBlock",
																"src": "5193:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:10"
																			},
																			"nativeSrc": "5195:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:10"
																		},
																		"nativeSrc": "5195:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:10"
																		},
																		"nativeSrc": "5164:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:10"
																},
																"nativeSrc": "5160:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:10"
															},
															"nativeSrc": "5157:119:10",
															"nodeType": "YulIf",
															"src": "5157:119:10"
														},
														{
															"nativeSrc": "5286:117:10",
															"nodeType": "YulBlock",
															"src": "5286:117:10",
															"statements": [
																{
																	"nativeSrc": "5301:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:10"
																				},
																				"nativeSrc": "5361:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:10"
																		},
																		"nativeSrc": "5340:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:10",
														"nodeType": "YulTypedName",
														"src": "5117:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:10",
														"nodeType": "YulTypedName",
														"src": "5128:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:10",
														"nodeType": "YulTypedName",
														"src": "5140:6:10",
														"type": ""
													}
												],
												"src": "5081:329:10"
											},
											{
												"body": {
													"nativeSrc": "5481:53:10",
													"nodeType": "YulBlock",
													"src": "5481:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:10"
																		},
																		"nativeSrc": "5503:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:10"
																},
																"nativeSrc": "5491:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:10"
															},
															"nativeSrc": "5491:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:10",
														"nodeType": "YulTypedName",
														"src": "5469:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:10",
														"nodeType": "YulTypedName",
														"src": "5476:3:10",
														"type": ""
													}
												],
												"src": "5416:118:10"
											},
											{
												"body": {
													"nativeSrc": "5638:124:10",
													"nodeType": "YulBlock",
													"src": "5638:124:10",
													"statements": [
														{
															"nativeSrc": "5648:26:10",
															"nodeType": "YulAssignment",
															"src": "5648:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:10"
																},
																"nativeSrc": "5656:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:10"
																		},
																		"nativeSrc": "5737:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:10"
																},
																"nativeSrc": "5684:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:10"
															},
															"nativeSrc": "5684:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:10",
														"nodeType": "YulTypedName",
														"src": "5610:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:10",
														"nodeType": "YulTypedName",
														"src": "5622:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:10",
														"nodeType": "YulTypedName",
														"src": "5633:4:10",
														"type": ""
													}
												],
												"src": "5540:222:10"
											},
											{
												"body": {
													"nativeSrc": "5851:391:10",
													"nodeType": "YulBlock",
													"src": "5851:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:10",
																"nodeType": "YulBlock",
																"src": "5897:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:10"
																			},
																			"nativeSrc": "5899:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:10"
																		},
																		"nativeSrc": "5899:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:10"
																		},
																		"nativeSrc": "5868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:10"
																},
																"nativeSrc": "5864:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:10"
															},
															"nativeSrc": "5861:119:10",
															"nodeType": "YulIf",
															"src": "5861:119:10"
														},
														{
															"nativeSrc": "5990:117:10",
															"nodeType": "YulBlock",
															"src": "5990:117:10",
															"statements": [
																{
																	"nativeSrc": "6005:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:10"
																				},
																				"nativeSrc": "6065:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:10"
																		},
																		"nativeSrc": "6044:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:10",
															"nodeType": "YulBlock",
															"src": "6117:118:10",
															"statements": [
																{
																	"nativeSrc": "6132:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:10"
																				},
																				"nativeSrc": "6193:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:10"
																		},
																		"nativeSrc": "6172:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:10",
														"nodeType": "YulTypedName",
														"src": "5813:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:10",
														"nodeType": "YulTypedName",
														"src": "5824:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:10",
														"nodeType": "YulTypedName",
														"src": "5836:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:10",
														"nodeType": "YulTypedName",
														"src": "5844:6:10",
														"type": ""
													}
												],
												"src": "5768:474:10"
											},
											{
												"body": {
													"nativeSrc": "6276:152:10",
													"nodeType": "YulBlock",
													"src": "6276:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:10"
																},
																"nativeSrc": "6286:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:10"
															},
															"nativeSrc": "6286:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:10"
																},
																"nativeSrc": "6383:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:10"
															},
															"nativeSrc": "6383:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:10"
																},
																"nativeSrc": "6407:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:10"
															},
															"nativeSrc": "6407:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:10"
											},
											{
												"body": {
													"nativeSrc": "6485:269:10",
													"nodeType": "YulBlock",
													"src": "6485:269:10",
													"statements": [
														{
															"nativeSrc": "6495:22:10",
															"nodeType": "YulAssignment",
															"src": "6495:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:10"
																},
																"nativeSrc": "6505:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:10"
																}
															]
														},
														{
															"nativeSrc": "6526:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:10"
																},
																"nativeSrc": "6552:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:10",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:10",
																"nodeType": "YulBlock",
																"src": "6603:51:10",
																"statements": [
																	{
																		"nativeSrc": "6617:27:10",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:10",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:10"
																			},
																			"nativeSrc": "6627:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:10"
																},
																"nativeSrc": "6576:26:10",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:10"
															},
															"nativeSrc": "6573:81:10",
															"nodeType": "YulIf",
															"src": "6573:81:10"
														},
														{
															"body": {
																"nativeSrc": "6706:42:10",
																"nodeType": "YulBlock",
																"src": "6706:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:10"
																			},
																			"nativeSrc": "6720:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:10"
																		},
																		"nativeSrc": "6720:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:10"
																		},
																		"nativeSrc": "6690:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:10"
																},
																"nativeSrc": "6667:38:10",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:10"
															},
															"nativeSrc": "6664:84:10",
															"nodeType": "YulIf",
															"src": "6664:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:10",
														"nodeType": "YulTypedName",
														"src": "6469:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:10",
														"nodeType": "YulTypedName",
														"src": "6478:6:10",
														"type": ""
													}
												],
												"src": "6434:320:10"
											},
											{
												"body": {
													"nativeSrc": "6866:62:10",
													"nodeType": "YulBlock",
													"src": "6866:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:10"
																		},
																		"nativeSrc": "6884:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:10"
																	},
																	{
																		"hexValue": "4e6f742054727573746564204d696e746572",
																		"kind": "string",
																		"nativeSrc": "6900:20:10",
																		"nodeType": "YulLiteral",
																		"src": "6900:20:10",
																		"type": "",
																		"value": "Not Trusted Minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:10"
																},
																"nativeSrc": "6877:44:10",
																"nodeType": "YulFunctionCall",
																"src": "6877:44:10"
															},
															"nativeSrc": "6877:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "6877:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72",
												"nativeSrc": "6760:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:10",
														"nodeType": "YulTypedName",
														"src": "6858:6:10",
														"type": ""
													}
												],
												"src": "6760:168:10"
											},
											{
												"body": {
													"nativeSrc": "7080:220:10",
													"nodeType": "YulBlock",
													"src": "7080:220:10",
													"statements": [
														{
															"nativeSrc": "7090:74:10",
															"nodeType": "YulAssignment",
															"src": "7090:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7156:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7156:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7161:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7161:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7097:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7097:58:10"
																},
																"nativeSrc": "7097:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7097:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7090:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7090:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7262:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7262:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72",
																	"nativeSrc": "7173:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7173:88:10"
																},
																"nativeSrc": "7173:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7173:93:10"
															},
															"nativeSrc": "7173:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7173:93:10"
														},
														{
															"nativeSrc": "7275:19:10",
															"nodeType": "YulAssignment",
															"src": "7275:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7286:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7286:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7291:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7291:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7282:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7282:3:10"
																},
																"nativeSrc": "7282:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7282:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7275:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7275:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6934:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7068:3:10",
														"nodeType": "YulTypedName",
														"src": "7068:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7076:3:10",
														"nodeType": "YulTypedName",
														"src": "7076:3:10",
														"type": ""
													}
												],
												"src": "6934:366:10"
											},
											{
												"body": {
													"nativeSrc": "7477:248:10",
													"nodeType": "YulBlock",
													"src": "7477:248:10",
													"statements": [
														{
															"nativeSrc": "7487:26:10",
															"nodeType": "YulAssignment",
															"src": "7487:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7499:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7499:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7510:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7510:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7495:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:10"
																},
																"nativeSrc": "7495:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7495:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7487:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7487:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7534:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7534:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7545:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7545:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7530:3:10"
																		},
																		"nativeSrc": "7530:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7530:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7553:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7553:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7559:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7549:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:10"
																		},
																		"nativeSrc": "7549:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7523:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:10"
																},
																"nativeSrc": "7523:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7523:47:10"
															},
															"nativeSrc": "7523:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7523:47:10"
														},
														{
															"nativeSrc": "7579:139:10",
															"nodeType": "YulAssignment",
															"src": "7579:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7713:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7713:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7587:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7587:124:10"
																},
																"nativeSrc": "7587:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7587:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7579:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7579:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7306:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7457:9:10",
														"nodeType": "YulTypedName",
														"src": "7457:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7472:4:10",
														"nodeType": "YulTypedName",
														"src": "7472:4:10",
														"type": ""
													}
												],
												"src": "7306:419:10"
											},
											{
												"body": {
													"nativeSrc": "7837:73:10",
													"nodeType": "YulBlock",
													"src": "7837:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7859:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7859:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7867:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7867:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7855:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7855:3:10"
																		},
																		"nativeSrc": "7855:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7855:14:10"
																	},
																	{
																		"hexValue": "4e45583a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7871:31:10",
																		"nodeType": "YulLiteral",
																		"src": "7871:31:10",
																		"type": "",
																		"value": "NEX: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7848:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7848:6:10"
																},
																"nativeSrc": "7848:55:10",
																"nodeType": "YulFunctionCall",
																"src": "7848:55:10"
															},
															"nativeSrc": "7848:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "7848:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07",
												"nativeSrc": "7731:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7829:6:10",
														"nodeType": "YulTypedName",
														"src": "7829:6:10",
														"type": ""
													}
												],
												"src": "7731:179:10"
											},
											{
												"body": {
													"nativeSrc": "8062:220:10",
													"nodeType": "YulBlock",
													"src": "8062:220:10",
													"statements": [
														{
															"nativeSrc": "8072:74:10",
															"nodeType": "YulAssignment",
															"src": "8072:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8138:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8138:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8143:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8143:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8079:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8079:58:10"
																},
																"nativeSrc": "8079:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8079:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8072:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8072:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8244:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8244:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07",
																	"nativeSrc": "8155:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8155:88:10"
																},
																"nativeSrc": "8155:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8155:93:10"
															},
															"nativeSrc": "8155:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8155:93:10"
														},
														{
															"nativeSrc": "8257:19:10",
															"nodeType": "YulAssignment",
															"src": "8257:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8268:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8268:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8273:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8273:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8264:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:10"
																},
																"nativeSrc": "8264:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8264:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8257:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8257:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7916:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8050:3:10",
														"nodeType": "YulTypedName",
														"src": "8050:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8058:3:10",
														"nodeType": "YulTypedName",
														"src": "8058:3:10",
														"type": ""
													}
												],
												"src": "7916:366:10"
											},
											{
												"body": {
													"nativeSrc": "8459:248:10",
													"nodeType": "YulBlock",
													"src": "8459:248:10",
													"statements": [
														{
															"nativeSrc": "8469:26:10",
															"nodeType": "YulAssignment",
															"src": "8469:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8492:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:10"
																},
																"nativeSrc": "8477:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8477:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8516:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8516:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8527:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8527:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8512:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8512:3:10"
																		},
																		"nativeSrc": "8512:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8512:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8535:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8535:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8541:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8541:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8531:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:10"
																		},
																		"nativeSrc": "8531:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8505:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:10"
																},
																"nativeSrc": "8505:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8505:47:10"
															},
															"nativeSrc": "8505:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8505:47:10"
														},
														{
															"nativeSrc": "8561:139:10",
															"nodeType": "YulAssignment",
															"src": "8561:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8695:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8695:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8569:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8569:124:10"
																},
																"nativeSrc": "8569:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8569:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8561:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8288:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8439:9:10",
														"nodeType": "YulTypedName",
														"src": "8439:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8454:4:10",
														"nodeType": "YulTypedName",
														"src": "8454:4:10",
														"type": ""
													}
												],
												"src": "8288:419:10"
											},
											{
												"body": {
													"nativeSrc": "8819:123:10",
													"nodeType": "YulBlock",
													"src": "8819:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8841:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8841:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8849:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8849:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:10"
																		},
																		"nativeSrc": "8837:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:14:10"
																	},
																	{
																		"hexValue": "4e45583a206d696e7420616d6f756e74206d7573742062652067726561746572",
																		"kind": "string",
																		"nativeSrc": "8853:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8853:34:10",
																		"type": "",
																		"value": "NEX: mint amount must be greater"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8830:6:10"
																},
																"nativeSrc": "8830:58:10",
																"nodeType": "YulFunctionCall",
																"src": "8830:58:10"
															},
															"nativeSrc": "8830:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "8830:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8909:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8917:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8917:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8905:3:10"
																		},
																		"nativeSrc": "8905:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8905:15:10"
																	},
																	{
																		"hexValue": "207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "8922:12:10",
																		"nodeType": "YulLiteral",
																		"src": "8922:12:10",
																		"type": "",
																		"value": " than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8898:6:10"
																},
																"nativeSrc": "8898:37:10",
																"nodeType": "YulFunctionCall",
																"src": "8898:37:10"
															},
															"nativeSrc": "8898:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "8898:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6",
												"nativeSrc": "8713:229:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8811:6:10",
														"nodeType": "YulTypedName",
														"src": "8811:6:10",
														"type": ""
													}
												],
												"src": "8713:229:10"
											},
											{
												"body": {
													"nativeSrc": "9094:220:10",
													"nodeType": "YulBlock",
													"src": "9094:220:10",
													"statements": [
														{
															"nativeSrc": "9104:74:10",
															"nodeType": "YulAssignment",
															"src": "9104:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9170:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9170:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9175:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9175:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9111:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9111:58:10"
																},
																"nativeSrc": "9111:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9111:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9104:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9104:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9276:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9276:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6",
																	"nativeSrc": "9187:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9187:88:10"
																},
																"nativeSrc": "9187:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9187:93:10"
															},
															"nativeSrc": "9187:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9187:93:10"
														},
														{
															"nativeSrc": "9289:19:10",
															"nodeType": "YulAssignment",
															"src": "9289:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9300:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9300:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9305:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9305:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9296:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9296:3:10"
																},
																"nativeSrc": "9296:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9296:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9289:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9289:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8948:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9082:3:10",
														"nodeType": "YulTypedName",
														"src": "9082:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9090:3:10",
														"nodeType": "YulTypedName",
														"src": "9090:3:10",
														"type": ""
													}
												],
												"src": "8948:366:10"
											},
											{
												"body": {
													"nativeSrc": "9491:248:10",
													"nodeType": "YulBlock",
													"src": "9491:248:10",
													"statements": [
														{
															"nativeSrc": "9501:26:10",
															"nodeType": "YulAssignment",
															"src": "9501:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9513:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9513:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9524:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9524:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9509:3:10"
																},
																"nativeSrc": "9509:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9509:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9501:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9501:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9548:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9548:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9559:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9559:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9544:3:10"
																		},
																		"nativeSrc": "9544:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9544:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9567:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9567:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9573:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9563:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9563:3:10"
																		},
																		"nativeSrc": "9563:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9563:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9537:6:10"
																},
																"nativeSrc": "9537:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9537:47:10"
															},
															"nativeSrc": "9537:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9537:47:10"
														},
														{
															"nativeSrc": "9593:139:10",
															"nodeType": "YulAssignment",
															"src": "9593:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9727:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9727:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9601:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9601:124:10"
																},
																"nativeSrc": "9601:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9601:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9593:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9593:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9320:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9471:9:10",
														"nodeType": "YulTypedName",
														"src": "9471:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9486:4:10",
														"nodeType": "YulTypedName",
														"src": "9486:4:10",
														"type": ""
													}
												],
												"src": "9320:419:10"
											},
											{
												"body": {
													"nativeSrc": "9851:72:10",
													"nodeType": "YulBlock",
													"src": "9851:72:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9873:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9873:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9881:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9881:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9869:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:10"
																		},
																		"nativeSrc": "9869:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9869:14:10"
																	},
																	{
																		"hexValue": "4e45583a20416c6c72656164792074727573746564206d696e746572",
																		"kind": "string",
																		"nativeSrc": "9885:30:10",
																		"nodeType": "YulLiteral",
																		"src": "9885:30:10",
																		"type": "",
																		"value": "NEX: Allready trusted minter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9862:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:10"
																},
																"nativeSrc": "9862:54:10",
																"nodeType": "YulFunctionCall",
																"src": "9862:54:10"
															},
															"nativeSrc": "9862:54:10",
															"nodeType": "YulExpressionStatement",
															"src": "9862:54:10"
														}
													]
												},
												"name": "store_literal_in_memory_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43",
												"nativeSrc": "9745:178:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9843:6:10",
														"nodeType": "YulTypedName",
														"src": "9843:6:10",
														"type": ""
													}
												],
												"src": "9745:178:10"
											},
											{
												"body": {
													"nativeSrc": "10075:220:10",
													"nodeType": "YulBlock",
													"src": "10075:220:10",
													"statements": [
														{
															"nativeSrc": "10085:74:10",
															"nodeType": "YulAssignment",
															"src": "10085:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10151:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10151:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10156:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10156:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10092:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10092:58:10"
																},
																"nativeSrc": "10092:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10092:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10085:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10085:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10257:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10257:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43",
																	"nativeSrc": "10168:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10168:88:10"
																},
																"nativeSrc": "10168:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10168:93:10"
															},
															"nativeSrc": "10168:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10168:93:10"
														},
														{
															"nativeSrc": "10270:19:10",
															"nodeType": "YulAssignment",
															"src": "10270:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10281:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10281:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10286:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:10"
																},
																"nativeSrc": "10277:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10277:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10270:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10270:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9929:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10063:3:10",
														"nodeType": "YulTypedName",
														"src": "10063:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10071:3:10",
														"nodeType": "YulTypedName",
														"src": "10071:3:10",
														"type": ""
													}
												],
												"src": "9929:366:10"
											},
											{
												"body": {
													"nativeSrc": "10472:248:10",
													"nodeType": "YulBlock",
													"src": "10472:248:10",
													"statements": [
														{
															"nativeSrc": "10482:26:10",
															"nodeType": "YulAssignment",
															"src": "10482:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10494:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10494:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10505:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10505:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10490:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10490:3:10"
																},
																"nativeSrc": "10490:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10490:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10482:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10482:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10529:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10529:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10540:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10540:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10525:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10525:3:10"
																		},
																		"nativeSrc": "10525:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10525:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10548:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10548:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10554:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10554:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10544:3:10"
																		},
																		"nativeSrc": "10544:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10544:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10518:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10518:6:10"
																},
																"nativeSrc": "10518:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10518:47:10"
															},
															"nativeSrc": "10518:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10518:47:10"
														},
														{
															"nativeSrc": "10574:139:10",
															"nodeType": "YulAssignment",
															"src": "10574:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10708:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10708:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10582:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10582:124:10"
																},
																"nativeSrc": "10582:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10582:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10574:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10574:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10301:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10452:9:10",
														"nodeType": "YulTypedName",
														"src": "10452:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10467:4:10",
														"nodeType": "YulTypedName",
														"src": "10467:4:10",
														"type": ""
													}
												],
												"src": "10301:419:10"
											},
											{
												"body": {
													"nativeSrc": "10832:118:10",
													"nodeType": "YulBlock",
													"src": "10832:118:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10854:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10854:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10862:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10862:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10850:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10850:3:10"
																		},
																		"nativeSrc": "10850:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10850:14:10"
																	},
																	{
																		"hexValue": "4e45583a20417574686f726973656420456e67696e652063616e6e6f74206265",
																		"kind": "string",
																		"nativeSrc": "10866:34:10",
																		"nodeType": "YulLiteral",
																		"src": "10866:34:10",
																		"type": "",
																		"value": "NEX: Authorised Engine cannot be"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10843:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10843:6:10"
																},
																"nativeSrc": "10843:58:10",
																"nodeType": "YulFunctionCall",
																"src": "10843:58:10"
															},
															"nativeSrc": "10843:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "10843:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10922:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10922:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10930:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10930:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10918:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:10"
																		},
																		"nativeSrc": "10918:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:15:10"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "10935:7:10",
																		"nodeType": "YulLiteral",
																		"src": "10935:7:10",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10911:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10911:6:10"
																},
																"nativeSrc": "10911:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10911:32:10"
															},
															"nativeSrc": "10911:32:10",
															"nodeType": "YulExpressionStatement",
															"src": "10911:32:10"
														}
													]
												},
												"name": "store_literal_in_memory_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d",
												"nativeSrc": "10726:224:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10824:6:10",
														"nodeType": "YulTypedName",
														"src": "10824:6:10",
														"type": ""
													}
												],
												"src": "10726:224:10"
											},
											{
												"body": {
													"nativeSrc": "11102:220:10",
													"nodeType": "YulBlock",
													"src": "11102:220:10",
													"statements": [
														{
															"nativeSrc": "11112:74:10",
															"nodeType": "YulAssignment",
															"src": "11112:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11178:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11183:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11183:2:10",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11119:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11119:58:10"
																},
																"nativeSrc": "11119:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11119:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11112:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11112:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11284:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11284:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d",
																	"nativeSrc": "11195:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11195:88:10"
																},
																"nativeSrc": "11195:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11195:93:10"
															},
															"nativeSrc": "11195:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11195:93:10"
														},
														{
															"nativeSrc": "11297:19:10",
															"nodeType": "YulAssignment",
															"src": "11297:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11308:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11308:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11313:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11304:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11304:3:10"
																},
																"nativeSrc": "11304:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11304:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11297:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11297:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10956:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11090:3:10",
														"nodeType": "YulTypedName",
														"src": "11090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11098:3:10",
														"nodeType": "YulTypedName",
														"src": "11098:3:10",
														"type": ""
													}
												],
												"src": "10956:366:10"
											},
											{
												"body": {
													"nativeSrc": "11499:248:10",
													"nodeType": "YulBlock",
													"src": "11499:248:10",
													"statements": [
														{
															"nativeSrc": "11509:26:10",
															"nodeType": "YulAssignment",
															"src": "11509:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11521:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11521:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11517:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11517:3:10"
																},
																"nativeSrc": "11517:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11517:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11509:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11509:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11556:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11556:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11567:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11567:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11552:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11552:3:10"
																		},
																		"nativeSrc": "11552:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11552:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11575:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11575:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11581:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11581:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11571:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11571:3:10"
																		},
																		"nativeSrc": "11571:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11571:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11545:6:10"
																},
																"nativeSrc": "11545:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11545:47:10"
															},
															"nativeSrc": "11545:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11545:47:10"
														},
														{
															"nativeSrc": "11601:139:10",
															"nodeType": "YulAssignment",
															"src": "11601:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11735:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11735:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11609:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11609:124:10"
																},
																"nativeSrc": "11609:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11609:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11601:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11601:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11328:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11479:9:10",
														"nodeType": "YulTypedName",
														"src": "11479:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11494:4:10",
														"nodeType": "YulTypedName",
														"src": "11494:4:10",
														"type": ""
													}
												],
												"src": "11328:419:10"
											},
											{
												"body": {
													"nativeSrc": "11907:288:10",
													"nodeType": "YulBlock",
													"src": "11907:288:10",
													"statements": [
														{
															"nativeSrc": "11917:26:10",
															"nodeType": "YulAssignment",
															"src": "11917:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11929:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11929:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11940:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11940:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11925:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11925:3:10"
																},
																"nativeSrc": "11925:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11925:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11917:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11917:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11997:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11997:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12010:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12010:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12021:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12021:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12006:3:10"
																		},
																		"nativeSrc": "12006:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12006:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11953:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11953:43:10"
																},
																"nativeSrc": "11953:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11953:71:10"
															},
															"nativeSrc": "11953:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11953:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12078:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12078:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12091:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12091:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12102:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12087:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12087:3:10"
																		},
																		"nativeSrc": "12087:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12087:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12034:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12034:43:10"
																},
																"nativeSrc": "12034:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12034:72:10"
															},
															"nativeSrc": "12034:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12034:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12160:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12160:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12173:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12173:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12184:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12184:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12169:3:10"
																		},
																		"nativeSrc": "12169:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12169:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12116:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12116:43:10"
																},
																"nativeSrc": "12116:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12116:72:10"
															},
															"nativeSrc": "12116:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12116:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11753:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11863:9:10",
														"nodeType": "YulTypedName",
														"src": "11863:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11875:6:10",
														"nodeType": "YulTypedName",
														"src": "11875:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11883:6:10",
														"nodeType": "YulTypedName",
														"src": "11883:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11891:6:10",
														"nodeType": "YulTypedName",
														"src": "11891:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11902:4:10",
														"nodeType": "YulTypedName",
														"src": "11902:4:10",
														"type": ""
													}
												],
												"src": "11753:442:10"
											},
											{
												"body": {
													"nativeSrc": "12229:152:10",
													"nodeType": "YulBlock",
													"src": "12229:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12246:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12246:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12249:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12249:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12239:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12239:6:10"
																},
																"nativeSrc": "12239:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12239:88:10"
															},
															"nativeSrc": "12239:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12239:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12343:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12346:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12346:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12336:6:10"
																},
																"nativeSrc": "12336:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12336:15:10"
															},
															"nativeSrc": "12336:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12336:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12367:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12367:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12370:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12370:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12360:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12360:6:10"
																},
																"nativeSrc": "12360:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12360:15:10"
															},
															"nativeSrc": "12360:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12360:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12201:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12201:180:10"
											},
											{
												"body": {
													"nativeSrc": "12431:147:10",
													"nodeType": "YulBlock",
													"src": "12431:147:10",
													"statements": [
														{
															"nativeSrc": "12441:25:10",
															"nodeType": "YulAssignment",
															"src": "12441:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12464:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12464:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12446:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12446:17:10"
																},
																"nativeSrc": "12446:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12446:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12441:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12441:1:10"
																}
															]
														},
														{
															"nativeSrc": "12475:25:10",
															"nodeType": "YulAssignment",
															"src": "12475:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12498:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12498:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12480:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "12480:17:10"
																},
																"nativeSrc": "12480:20:10",
																"nodeType": "YulFunctionCall",
																"src": "12480:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12475:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "12475:1:10"
																}
															]
														},
														{
															"nativeSrc": "12509:16:10",
															"nodeType": "YulAssignment",
															"src": "12509:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12520:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12520:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12523:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12523:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:10"
																},
																"nativeSrc": "12516:9:10",
																"nodeType": "YulFunctionCall",
																"src": "12516:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12509:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12549:22:10",
																"nodeType": "YulBlock",
																"src": "12549:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12551:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "12551:16:10"
																			},
																			"nativeSrc": "12551:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "12551:18:10"
																		},
																		"nativeSrc": "12551:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "12551:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12541:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "12541:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12544:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12544:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12538:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "12538:2:10"
																},
																"nativeSrc": "12538:10:10",
																"nodeType": "YulFunctionCall",
																"src": "12538:10:10"
															},
															"nativeSrc": "12535:36:10",
															"nodeType": "YulIf",
															"src": "12535:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12387:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12418:1:10",
														"nodeType": "YulTypedName",
														"src": "12418:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12421:1:10",
														"nodeType": "YulTypedName",
														"src": "12421:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12427:3:10",
														"nodeType": "YulTypedName",
														"src": "12427:3:10",
														"type": ""
													}
												],
												"src": "12387:191:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not Trusted Minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07(memPtr) {\n\n        mstore(add(memPtr, 0), \"NEX: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"NEX: mint amount must be greater\")\n\n        mstore(add(memPtr, 32), \" than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43(memPtr) {\n\n        mstore(add(memPtr, 0), \"NEX: Allready trusted minter\")\n\n    }\n\n    function abi_encode_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d(memPtr) {\n\n        mstore(add(memPtr, 0), \"NEX: Authorised Engine cannot be\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610286578063b86ddfa9146102b6578063dd62ed3e146102d2578063f2fde38b14610302576100fe565b8063715018a61461022457806379cc67901461022e5780638da5cb5b1461024a57806395d89b4114610268576100fe565b8063313ce567116100d1578063313ce5671461019e57806340c10f19146101bc57806342966c68146101d857806370a08231146101f4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a61031e565b60405161011791906111ec565b60405180910390f35b61013a6004803603810190610135919061129d565b6103ae565b60405161014791906112f5565b60405180910390f35b6101586103d0565b604051610165919061131d565b60405180910390f35b61018860048036038101906101839190611336565b6103d9565b60405161019591906112f5565b60405180910390f35b6101a6610407565b6040516101b391906113a1565b60405180910390f35b6101d660048036038101906101d1919061129d565b61040f565b005b6101f260048036038101906101ed91906113ba565b610558565b005b61020e600480360381019061020991906113e5565b6105ec565b60405161021b919061131d565b60405180910390f35b61022c610631565b005b6102486004803603810190610243919061129d565b610644565b005b610252610664565b60405161025f919061141f565b60405180910390f35b61027061068c565b60405161027d91906111ec565b60405180910390f35b6102a0600480360381019061029b919061129d565b61071c565b6040516102ad91906112f5565b60405180910390f35b6102d060048036038101906102cb91906113e5565b61073e565b005b6102ec60048036038101906102e79190611438565b610896565b6040516102f9919061131d565b60405180910390f35b61031c600480360381019061031791906113e5565b610918565b005b60606003805461032d906114a3565b80601f0160208091040260200160405190810160405280929190818152602001828054610359906114a3565b80156103a45780601f1061037b576101008083540402835291602001916103a4565b820191905f5260205f20905b81548152906001019060200180831161038757829003601f168201915b5050505050905090565b5f5f6103b861099c565b90506103c58185856109a3565b600191505092915050565b5f600254905090565b5f5f6103e361099c565b90506103f08582856109b5565b6103fb858585610a48565b60019150509392505050565b5f6012905090565b3360065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610499576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104909061151d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610507576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fe90611585565b60405180910390fd5b5f8211610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054090611613565b60405180910390fd5b6105538383610b38565b505050565b610560610bb7565b5f61056a336105ec565b90505f82036105a5576040517f9e974a1900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808211156105df576040517fc266034e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e882610c3e565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610639610bb7565b6106425f610c52565b565b6106568261065061099c565b836109b5565b6106608282610d15565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461069b906114a3565b80601f01602080910402602001604051908101604052809291908181526020018280546106c7906114a3565b80156107125780601f106106e957610100808354040283529160200191610712565b820191905f5260205f20905b8154815290600101906020018083116106f557829003601f168201915b5050505050905090565b5f5f61072661099c565b9050610733818585610a48565b600191505092915050565b610746610bb7565b60065f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c79061167b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083590611709565b60405180910390fd5b600160065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610920610bb7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610990575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610987919061141f565b60405180910390fd5b61099981610c52565b50565b5f33905090565b6109b08383836001610d94565b505050565b5f6109c08484610896565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610a425781811015610a33578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a2a93929190611727565b60405180910390fd5b610a4184848484035f610d94565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ab8575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aaf919061141f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b28575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b1f919061141f565b60405180910390fd5b610b33838383610f63565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ba8575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b9f919061141f565b60405180910390fd5b610bb35f8383610f63565b5050565b610bbf61099c565b73ffffffffffffffffffffffffffffffffffffffff16610bdd610664565b73ffffffffffffffffffffffffffffffffffffffff1614610c3c57610c0061099c565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c33919061141f565b60405180910390fd5b565b610c4f610c4961099c565b82610d15565b50565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d85575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d7c919061141f565b60405180910390fd5b610d90825f83610f63565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e04575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dfb919061141f565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e74575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e6b919061141f565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f5d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f54919061131d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610fb3578060025f828254610fa79190611789565b92505081905550611081565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561103c578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161103393929190611727565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110c8578060025f8282540392505081905550611112565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161116f919061131d565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111be8261117c565b6111c88185611186565b93506111d8818560208601611196565b6111e1816111a4565b840191505092915050565b5f6020820190508181035f83015261120481846111b4565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61123982611210565b9050919050565b6112498161122f565b8114611253575f5ffd5b50565b5f8135905061126481611240565b92915050565b5f819050919050565b61127c8161126a565b8114611286575f5ffd5b50565b5f8135905061129781611273565b92915050565b5f5f604083850312156112b3576112b261120c565b5b5f6112c085828601611256565b92505060206112d185828601611289565b9150509250929050565b5f8115159050919050565b6112ef816112db565b82525050565b5f6020820190506113085f8301846112e6565b92915050565b6113178161126a565b82525050565b5f6020820190506113305f83018461130e565b92915050565b5f5f5f6060848603121561134d5761134c61120c565b5b5f61135a86828701611256565b935050602061136b86828701611256565b925050604061137c86828701611289565b9150509250925092565b5f60ff82169050919050565b61139b81611386565b82525050565b5f6020820190506113b45f830184611392565b92915050565b5f602082840312156113cf576113ce61120c565b5b5f6113dc84828501611289565b91505092915050565b5f602082840312156113fa576113f961120c565b5b5f61140784828501611256565b91505092915050565b6114198161122f565b82525050565b5f6020820190506114325f830184611410565b92915050565b5f5f6040838503121561144e5761144d61120c565b5b5f61145b85828601611256565b925050602061146c85828601611256565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114ba57607f821691505b6020821081036114cd576114cc611476565b5b50919050565b7f4e6f742054727573746564204d696e74657200000000000000000000000000005f82015250565b5f611507601283611186565b9150611512826114d3565b602082019050919050565b5f6020820190508181035f830152611534816114fb565b9050919050565b7f4e45583a206d696e7420746f20746865207a65726f20616464726573730000005f82015250565b5f61156f601d83611186565b915061157a8261153b565b602082019050919050565b5f6020820190508181035f83015261159c81611563565b9050919050565b7f4e45583a206d696e7420616d6f756e74206d75737420626520677265617465725f8201527f207468616e207a65726f00000000000000000000000000000000000000000000602082015250565b5f6115fd602a83611186565b9150611608826115a3565b604082019050919050565b5f6020820190508181035f83015261162a816115f1565b9050919050565b7f4e45583a20416c6c72656164792074727573746564206d696e746572000000005f82015250565b5f611665601c83611186565b915061167082611631565b602082019050919050565b5f6020820190508181035f83015261169281611659565b9050919050565b7f4e45583a20417574686f726973656420456e67696e652063616e6e6f742062655f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f6116f3602583611186565b91506116fe82611699565b604082019050919050565b5f6020820190508181035f830152611720816116e7565b9050919050565b5f60608201905061173a5f830186611410565b611747602083018561130e565b611754604083018461130e565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117938261126a565b915061179e8361126a565b92508282019050808211156117b6576117b561175c565b5b9291505056fea264697066735822122076f7fd6326997ca02702eb490972be598d6dd3f34246bd0f1d63c8b5c17a602e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xB86DDFA9 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x302 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x268 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x40F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x558 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22C PUSH2 0x631 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x252 PUSH2 0x664 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x11EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x129D JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x73E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1438 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x359 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x387 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3B8 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 DUP2 DUP6 DUP6 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E3 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x3F0 DUP6 DUP3 DUP6 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x3FB DUP6 DUP6 DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x499 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x490 SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x507 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FE SWAP1 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x549 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x553 DUP4 DUP4 PUSH2 0xB38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x560 PUSH2 0xBB7 JUMP JUMPDEST PUSH0 PUSH2 0x56A CALLER PUSH2 0x5EC JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 SUB PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9E974A1900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC266034E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP3 PUSH2 0xC3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x639 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x642 PUSH0 PUSH2 0xC52 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x656 DUP3 PUSH2 0x650 PUSH2 0x99C JUMP JUMPDEST DUP4 PUSH2 0x9B5 JUMP JUMPDEST PUSH2 0x660 DUP3 DUP3 PUSH2 0xD15 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x69B SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C7 SWAP1 PUSH2 0x14A3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x712 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x712 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x726 PUSH2 0x99C JUMP JUMPDEST SWAP1 POP PUSH2 0x733 DUP2 DUP6 DUP6 PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x746 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C7 SWAP1 PUSH2 0x167B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x920 PUSH2 0xBB7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x990 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x999 DUP2 PUSH2 0xC52 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9B0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9C0 DUP5 DUP5 PUSH2 0x896 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xA42 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA33 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA41 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD94 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAB8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB28 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB33 DUP4 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9F SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB3 PUSH0 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBF PUSH2 0x99C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBDD PUSH2 0x664 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC3C JUMPI PUSH2 0xC00 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC33 SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC4F PUSH2 0xC49 PUSH2 0x99C JUMP JUMPDEST DUP3 PUSH2 0xD15 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD85 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7C SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD90 DUP3 PUSH0 DUP4 PUSH2 0xF63 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE04 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFB SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE74 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6B SWAP2 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF5D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x1789 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1081 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x103C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1033 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1112 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11BE DUP3 PUSH2 0x117C JUMP JUMPDEST PUSH2 0x11C8 DUP2 DUP6 PUSH2 0x1186 JUMP JUMPDEST SWAP4 POP PUSH2 0x11D8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST PUSH2 0x11E1 DUP2 PUSH2 0x11A4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1204 DUP2 DUP5 PUSH2 0x11B4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1239 DUP3 PUSH2 0x1210 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1249 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP2 EQ PUSH2 0x1253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1264 DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127C DUP2 PUSH2 0x126A JUMP JUMPDEST DUP2 EQ PUSH2 0x1286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1297 DUP2 PUSH2 0x1273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12B2 PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C0 DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12EF DUP2 PUSH2 0x12DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1308 PUSH0 DUP4 ADD DUP5 PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1317 DUP2 PUSH2 0x126A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1330 PUSH0 DUP4 ADD DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134C PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x135A DUP7 DUP3 DUP8 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x136B DUP7 DUP3 DUP8 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x137C DUP7 DUP3 DUP8 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x139B DUP2 PUSH2 0x1386 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1392 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13CF JUMPI PUSH2 0x13CE PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13DC DUP5 DUP3 DUP6 ADD PUSH2 0x1289 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FA JUMPI PUSH2 0x13F9 PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1407 DUP5 DUP3 DUP6 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1432 PUSH0 DUP4 ADD DUP5 PUSH2 0x1410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x120C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x145B DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x146C DUP6 DUP3 DUP7 ADD PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14CD JUMPI PUSH2 0x14CC PUSH2 0x1476 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F742054727573746564204D696E7465720000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1507 PUSH1 0x12 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1512 DUP3 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1534 DUP2 PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A206D696E7420746F20746865207A65726F2061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156F PUSH1 0x1D DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x157A DUP3 PUSH2 0x153B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x159C DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A206D696E7420616D6F756E74206D7573742062652067726561746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x207468616E207A65726F00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FD PUSH1 0x2A DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1608 DUP3 PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x162A DUP2 PUSH2 0x15F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A20416C6C72656164792074727573746564206D696E74657200000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1665 PUSH1 0x1C DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x1670 DUP3 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1692 DUP2 PUSH2 0x1659 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E45583A20417574686F726973656420456E67696E652063616E6E6F74206265 PUSH0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16F3 PUSH1 0x25 DUP4 PUSH2 0x1186 JUMP JUMPDEST SWAP2 POP PUSH2 0x16FE DUP3 PUSH2 0x1699 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1720 DUP2 PUSH2 0x16E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x173A PUSH0 DUP4 ADD DUP7 PUSH2 0x1410 JUMP JUMPDEST PUSH2 0x1747 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x130E JUMP JUMPDEST PUSH2 0x1754 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x130E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1793 DUP3 PUSH2 0x126A JUMP JUMPDEST SWAP2 POP PUSH2 0x179E DUP4 PUSH2 0x126A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17B6 JUMPI PUSH2 0x17B5 PUSH2 0x175C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xF7FD6326997CA02702EB490972BE598D6DD3F34246BD0F SAR PUSH4 0xC8B5C17A PUSH1 0x2E PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "682:1350:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1511:254:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1192:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1021:158:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1771:259:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3532:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:3;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;1511:254:8:-;1576:10;1125:14;:21;1140:5;1125:21;;;;;;;;;;;;;;;;;;;;;;;;;1117:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1620:1:::1;1606:16;;:2;:16;;::::0;1598:58:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1683:1;1674:6;:10;1666:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1741:17;1747:2;1751:6;1741:5;:17::i;:::-;1511:254:::0;;;:::o;1192:313::-;1531:13:0;:11;:13::i;:::-;1258:15:8::1;1276:21;1286:10;1276:9;:21::i;:::-;1258:39;;1321:1;1311:6;:11:::0;1307:76:::1;;1345:27;;;;;;;;;;;;;;1307:76;1405:7;1396:6;:16;1392:79;;;1435:25;;;;;;;;;;;;;;1392:79;1480:18;1491:6;1480:10;:18::i;:::-;1248:257;1192:313:::0;:::o;2985:116:3:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:5:-;1096:45;1112:7;1121:12;:10;:12::i;:::-;1135:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;1771:259:8:-;1531:13:0;:11;:13::i;:::-;1852:14:8::1;:23;1867:7;1852:23;;;;;;;;;;;;;;;;;;;;;;;;;1851:24;1843:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1942:1;1923:21;;:7;:21;;::::0;1915:71:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2019:4;1993:14;:23;2008:7;1993:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1771:259:::0;:::o;3532:140:3:-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8707:128:3:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;7439:208::-;7528:1;7509:21;;:7;:21;;;7505:91;;7582:1;7553:32;;;;;;;;;;;:::i;:::-;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;618:87:5:-;672:26;678:12;:10;:12::i;:::-;692:5;672;:26::i;:::-;618:87;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7965:206:3:-;8054:1;8035:21;;:7;:21;;;8031:89;;8106:1;8079:30;;;;;;;;;;;:::i;:::-;;;;;;;;8031:89;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;:::-;7965:206;;:::o;9682:432::-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;5989:1107::-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:168::-;6900:20;6896:1;6888:6;6884:14;6877:44;6760:168;:::o;6934:366::-;7076:3;7097:67;7161:2;7156:3;7097:67;:::i;:::-;7090:74;;7173:93;7262:3;7173:93;:::i;:::-;7291:2;7286:3;7282:12;7275:19;;6934:366;;;:::o;7306:419::-;7472:4;7510:2;7499:9;7495:18;7487:26;;7559:9;7553:4;7549:20;7545:1;7534:9;7530:17;7523:47;7587:131;7713:4;7587:131;:::i;:::-;7579:139;;7306:419;;;:::o;7731:179::-;7871:31;7867:1;7859:6;7855:14;7848:55;7731:179;:::o;7916:366::-;8058:3;8079:67;8143:2;8138:3;8079:67;:::i;:::-;8072:74;;8155:93;8244:3;8155:93;:::i;:::-;8273:2;8268:3;8264:12;8257:19;;7916:366;;;:::o;8288:419::-;8454:4;8492:2;8481:9;8477:18;8469:26;;8541:9;8535:4;8531:20;8527:1;8516:9;8512:17;8505:47;8569:131;8695:4;8569:131;:::i;:::-;8561:139;;8288:419;;;:::o;8713:229::-;8853:34;8849:1;8841:6;8837:14;8830:58;8922:12;8917:2;8909:6;8905:15;8898:37;8713:229;:::o;8948:366::-;9090:3;9111:67;9175:2;9170:3;9111:67;:::i;:::-;9104:74;;9187:93;9276:3;9187:93;:::i;:::-;9305:2;9300:3;9296:12;9289:19;;8948:366;;;:::o;9320:419::-;9486:4;9524:2;9513:9;9509:18;9501:26;;9573:9;9567:4;9563:20;9559:1;9548:9;9544:17;9537:47;9601:131;9727:4;9601:131;:::i;:::-;9593:139;;9320:419;;;:::o;9745:178::-;9885:30;9881:1;9873:6;9869:14;9862:54;9745:178;:::o;9929:366::-;10071:3;10092:67;10156:2;10151:3;10092:67;:::i;:::-;10085:74;;10168:93;10257:3;10168:93;:::i;:::-;10286:2;10281:3;10277:12;10270:19;;9929:366;;;:::o;10301:419::-;10467:4;10505:2;10494:9;10490:18;10482:26;;10554:9;10548:4;10544:20;10540:1;10529:9;10525:17;10518:47;10582:131;10708:4;10582:131;:::i;:::-;10574:139;;10301:419;;;:::o;10726:224::-;10866:34;10862:1;10854:6;10850:14;10843:58;10935:7;10930:2;10922:6;10918:15;10911:32;10726:224;:::o;10956:366::-;11098:3;11119:67;11183:2;11178:3;11119:67;:::i;:::-;11112:74;;11195:93;11284:3;11195:93;:::i;:::-;11313:2;11308:3;11304:12;11297:19;;10956:366;;;:::o;11328:419::-;11494:4;11532:2;11521:9;11517:18;11509:26;;11581:9;11575:4;11571:20;11567:1;11556:9;11552:17;11545:47;11609:131;11735:4;11609:131;:::i;:::-;11601:139;;11328:419;;;:::o;11753:442::-;11902:4;11940:2;11929:9;11925:18;11917:26;;11953:71;12021:1;12010:9;12006:17;11997:6;11953:71;:::i;:::-;12034:72;12102:2;12091:9;12087:18;12078:6;12034:72;:::i;:::-;12116;12184:2;12173:9;12169:18;12160:6;12116:72;:::i;:::-;11753:442;;;;;;:::o;12201:180::-;12249:77;12246:1;12239:88;12346:4;12343:1;12336:15;12370:4;12367:1;12360:15;12387:191;12427:3;12446:20;12464:1;12446:20;:::i;:::-;12441:25;;12480:20;12498:1;12480:20;:::i;:::-;12475:25;;12523:1;12520;12516:9;12509:16;;12544:3;12541:1;12538:10;12535:36;;;12551:18;;:::i;:::-;12535:36;12387:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1226000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "361",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"setauthorisedEngine(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 728,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 728,
									"end": 898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 835,
									"end": 847,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 811,
									"end": 816,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 818,
									"end": 825,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 887,
									"end": 891,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 858,
									"end": 872,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 885,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 858,
									"end": 886,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 858,
									"end": 891,
									"modifierDepth": 2,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 728,
									"end": 898,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 10,
									"value": "89"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3205,
									"end": 3211,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3254,
									"end": 3256,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3242,
									"end": 3251,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3233,
									"end": 3240,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3229,
									"end": 3252,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3225,
									"end": 3257,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3260,
									"end": 3339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 3260,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 3222,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3401,
									"end": 3402,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3390,
									"end": 3399,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3386,
									"end": 3403,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3380,
									"end": 3404,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3431,
									"end": 3449,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3423,
									"end": 3429,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3420,
									"end": 3450,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3453,
									"end": 3532,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 3453,
									"end": 3532,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 3417,
									"end": 3534,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3624,
									"end": 3631,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3615,
									"end": 3621,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3604,
									"end": 3613,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3600,
									"end": 3622,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3558,
									"end": 3632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 3558,
									"end": 3632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3351,
									"end": 3642,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3702,
									"end": 3704,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3691,
									"end": 3700,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3687,
									"end": 3705,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3681,
									"end": 3706,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 3733,
									"end": 3751,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3725,
									"end": 3731,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3722,
									"end": 3752,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 3755,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 3755,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 3719,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3926,
									"end": 3933,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 3902,
									"end": 3924,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3860,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3850,
									"end": 3934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3652,
									"end": 3944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4065,
									"end": 4072,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4063,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 4009,
									"end": 4073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 4009,
									"end": 4073,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3999,
									"end": 4073,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3954,
									"end": 4083,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3081,
									"end": 4090,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4148,
									"end": 4154,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4182,
									"end": 4187,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4176,
									"end": 4188,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4166,
									"end": 4188,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4096,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4201,
									"end": 4381,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4326,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4246,
									"end": 4247,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4239,
									"end": 4327,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4346,
									"end": 4350,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 4343,
									"end": 4344,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 4336,
									"end": 4351,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4374,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 4367,
									"end": 4368,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4375,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4431,
									"end": 4437,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4468,
									"end": 4469,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4462,
									"end": 4466,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4458,
									"end": 4470,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4448,
									"end": 4470,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4515,
									"end": 4516,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4509,
									"end": 4513,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4517,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4592,
									"end": 4596,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 4584,
									"end": 4590,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4580,
									"end": 4597,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4570,
									"end": 4597,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 4526,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4654,
									"end": 4656,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4646,
									"end": 4652,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4643,
									"end": 4657,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4623,
									"end": 4641,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4620,
									"end": 4658,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4673,
									"end": 4691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 4673,
									"end": 4691,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 4617,
									"end": 4701,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4438,
									"end": 4707,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4387,
									"end": 4707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4762,
									"end": 4766,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4788,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4777,
									"end": 4788,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4805,
									"end": 4806,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4798,
									"end": 4812,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4842,
									"end": 4846,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4839,
									"end": 4840,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4829,
									"end": 4847,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4821,
									"end": 4847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4713,
									"end": 4854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4897,
									"end": 4903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4944,
									"end": 4946,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 4941,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4932,
									"end": 4937,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4928,
									"end": 4942,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4924,
									"end": 4947,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4914,
									"end": 4947,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4860,
									"end": 4953,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5003,
									"end": 5011,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5053,
									"end": 5058,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5047,
									"end": 5051,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5043,
									"end": 5059,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5022,
									"end": 5059,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4959,
									"end": 5066,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5141,
									"end": 5147,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5191,
									"end": 5192,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5175,
									"end": 5193,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5244,
									"end": 5310,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5233,
									"end": 5242,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 5214,
									"end": 5311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5214,
									"end": 5311,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5362,
									"end": 5370,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5351,
									"end": 5360,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 5332,
									"end": 5371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "tag",
									"source": 10,
									"value": "116"
								},
								{
									"begin": 5332,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 5320,
									"end": 5371,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5404,
									"end": 5408,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5400,
									"end": 5409,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5393,
									"end": 5398,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5380,
									"end": 5410,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5453,
									"end": 5457,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 5443,
									"end": 5451,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5439,
									"end": 5458,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5437,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5429,
									"end": 5459,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5419,
									"end": 5459,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5148,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5072,
									"end": 5465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5508,
									"end": 5515,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5542,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5526,
									"end": 5542,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5471,
									"end": 5548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5582,
									"end": 5585,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5603,
									"end": 5608,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5596,
									"end": 5608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5670,
									"end": 5679,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5748,
									"end": 5753,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5730,
									"end": 5754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 5730,
									"end": 5754,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5721,
									"end": 5755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 5721,
									"end": 5755,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5703,
									"end": 5756,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 5703,
									"end": 5756,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5690,
									"end": 5756,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5620,
									"end": 5762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5832,
									"end": 5837,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5825,
									"end": 5837,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5990,
									"end": 5997,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5959,
									"end": 5998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5959,
									"end": 5998,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 6093,
									"end": 6109,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 6069,
									"end": 6110,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 6069,
									"end": 6110,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6061,
									"end": 6067,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6054,
									"end": 6058,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6048,
									"end": 6059,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 6020,
									"end": 6111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 6020,
									"end": 6111,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6014,
									"end": 6018,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6007,
									"end": 6112,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5925,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5849,
									"end": 6118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6172,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6190,
									"end": 6191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6183,
									"end": 6191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6124,
									"end": 6197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 6280,
									"end": 6312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 6280,
									"end": 6312,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 6379,
									"end": 6385,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6371,
									"end": 6377,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 6321,
									"end": 6386,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 6321,
									"end": 6386,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6256,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6203,
									"end": 6392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6475,
									"end": 6478,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6468,
									"end": 6473,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6465,
									"end": 6479,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 6566,
									"end": 6567,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6559,
									"end": 6564,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 6529,
									"end": 6568,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 6529,
									"end": 6568,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6502,
									"end": 6503,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6495,
									"end": 6500,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6491,
									"end": 6504,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6504,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 6458,
									"end": 6578,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6398,
									"end": 6584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6691,
									"end": 6693,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6686,
									"end": 6689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6683,
									"end": 6694,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6757,
									"end": 6762,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6725,
									"end": 6763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 6725,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6827,
									"end": 6837,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6809,
									"end": 6838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "tag",
									"source": 10,
									"value": "140"
								},
								{
									"begin": 6809,
									"end": 6838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6807,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6795,
									"end": 6839,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6992,
									"end": 6994,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6980,
									"end": 6990,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6977,
									"end": 6995,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7013,
									"end": 7021,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6998,
									"end": 7021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 6974,
									"end": 7023,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 7110,
									"end": 7113,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 7092,
									"end": 7114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 7092,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7082,
									"end": 7090,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7115,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7065,
									"end": 7076,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 7036,
									"end": 7116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "tag",
									"source": 10,
									"value": "142"
								},
								{
									"begin": 7036,
									"end": 7116,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6695,
									"end": 7126,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "tag",
									"source": 10,
									"value": "138"
								},
								{
									"begin": 6680,
									"end": 7126,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6590,
									"end": 7133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7193,
									"end": 7201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7243,
									"end": 7248,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7237,
									"end": 7241,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7233,
									"end": 7249,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7212,
									"end": 7249,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7139,
									"end": 7256,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 7387,
									"end": 7388,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7383,
									"end": 7389,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7375,
									"end": 7380,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7372,
									"end": 7373,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 7368,
									"end": 7381,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 7339,
									"end": 7390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 7339,
									"end": 7390,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7335,
									"end": 7391,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 7420,
									"end": 7424,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 7414,
									"end": 7418,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7410,
									"end": 7425,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7400,
									"end": 7425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7313,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7262,
									"end": 7431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7512,
									"end": 7516,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 7683,
									"end": 7686,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7677,
									"end": 7681,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 7658,
									"end": 7687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 7658,
									"end": 7687,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7650,
									"end": 7687,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7720,
									"end": 7723,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7717,
									"end": 7718,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 7713,
									"end": 7724,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 7707,
									"end": 7711,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7704,
									"end": 7725,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7696,
									"end": 7725,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7436,
									"end": 7731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 7886,
									"end": 7889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 7853,
									"end": 7890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 7853,
									"end": 7890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7955,
									"end": 7973,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7947,
									"end": 7953,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7944,
									"end": 7974,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 7977,
									"end": 7995,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 7977,
									"end": 7995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 7941,
									"end": 7997,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 8053,
									"end": 8057,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8047,
									"end": 8058,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 8021,
									"end": 8059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 8021,
									"end": 8059,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 8166,
									"end": 8172,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8158,
									"end": 8164,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 8106,
									"end": 8173,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 8106,
									"end": 8173,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8200,
									"end": 8201,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8224,
									"end": 8228,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8211,
									"end": 8228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8256,
									"end": 8258,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8248,
									"end": 8254,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8245,
									"end": 8259,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 8273,
									"end": 8274,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8930,
									"end": 8931,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8947,
									"end": 8953,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8996,
									"end": 9005,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8991,
									"end": 8994,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 8987,
									"end": 9006,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8981,
									"end": 9007,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8972,
									"end": 9007,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 8944,
									"end": 9021,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9107,
									"end": 9113,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 9100,
									"end": 9105,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 9047,
									"end": 9114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9047,
									"end": 9114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9041,
									"end": 9045,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 9034,
									"end": 9115,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8903,
									"end": 9125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 8268,
									"end": 8886,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8320,
									"end": 8324,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8316,
									"end": 8325,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 8308,
									"end": 8314,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8304,
									"end": 8326,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 8386,
									"end": 8390,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 8354,
									"end": 8391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 8354,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8413,
									"end": 8414,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8441,
									"end": 8448,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8438,
									"end": 8439,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8435,
									"end": 8449,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8520,
									"end": 8529,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8515,
									"end": 8518,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8511,
									"end": 8530,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8505,
									"end": 8531,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8497,
									"end": 8503,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8490,
									"end": 8532,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8571,
									"end": 8572,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8563,
									"end": 8569,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8559,
									"end": 8573,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8549,
									"end": 8573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8618,
									"end": 8620,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8607,
									"end": 8616,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8603,
									"end": 8621,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 8590,
									"end": 8621,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8464,
									"end": 8468,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8461,
									"end": 8462,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8457,
									"end": 8469,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8452,
									"end": 8469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 8427,
									"end": 8635,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8663,
									"end": 8669,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8654,
									"end": 8661,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8651,
									"end": 8670,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 8721,
									"end": 8730,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8716,
									"end": 8719,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8712,
									"end": 8731,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8706,
									"end": 8732,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8806,
									"end": 8810,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 8798,
									"end": 8804,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 8794,
									"end": 8811,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 8783,
									"end": 8792,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 8764,
									"end": 8812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 8764,
									"end": 8812,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8756,
									"end": 8762,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 8749,
									"end": 8813,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8671,
									"end": 8827,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 8648,
									"end": 8827,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8873,
									"end": 8874,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 8869,
									"end": 8870,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 8861,
									"end": 8867,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8857,
									"end": 8871,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 8853,
									"end": 8875,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8847,
									"end": 8851,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 8840,
									"end": 8876,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8275,
									"end": 8886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8238,
									"end": 9125,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7828,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7736,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 9242,
									"end": 9247,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 9224,
									"end": 9248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9219,
									"end": 9222,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9212,
									"end": 9249,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9137,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9354,
									"end": 9358,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9392,
									"end": 9394,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9381,
									"end": 9390,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9377,
									"end": 9395,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9471,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9449,
									"end": 9455,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 9405,
									"end": 9476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "tag",
									"source": 10,
									"value": "168"
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9261,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 2032,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076f7fd6326997ca02702eb490972be598d6dd3f34246bd0f1d63c8b5c17a602e64736f6c634300081e0033",
									".code": [
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "B86DDFA9"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 2032,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1511,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1511,
											"end": 1765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1192,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1192,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1771,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1771,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1139,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1125,
											"end": 1146,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1117,
											"end": 1168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 1117,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1620,
											"end": 1621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1606,
											"end": 1622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1606,
											"end": 1622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1622,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1598,
											"end": 1656,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1598,
											"end": 1656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1680,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1684,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1666,
											"end": 1731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1666,
											"end": 1731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1747,
											"end": 1749,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1751,
											"end": 1757,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1746,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 1741,
											"end": 1758,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1741,
											"end": 1758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1741,
											"end": 1758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1286,
											"end": 1296,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1276,
											"end": 1297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1276,
											"end": 1297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1276,
											"end": 1297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1258,
											"end": 1297,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1321,
											"end": 1322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1311,
											"end": 1322,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1307,
											"end": 1383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "9E974A1900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1372,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1307,
											"end": 1383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1405,
											"end": 1412,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1396,
											"end": 1412,
											"modifierDepth": 1,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1471,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1392,
											"end": 1471,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "C266034E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1460,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1392,
											"end": 1471,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1392,
											"end": 1471,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1498,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1491,
											"end": 1497,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 1480,
											"end": 1498,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1498,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1480,
											"end": 1498,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1505,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1121,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1121,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 1121,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 3,
											"value": "141"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1852,
											"end": 1866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1874,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1875,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1843,
											"end": 1908,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1843,
											"end": 1908,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1942,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1923,
											"end": 1944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1923,
											"end": 1944,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 1915,
											"end": 1986,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1915,
											"end": 1986,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1993,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2015,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2023,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1771,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7529,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 7553,
											"end": 7585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 678,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 678,
											"end": 690,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 678,
											"end": 690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 8079,
											"end": 8109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6900,
											"end": 6920,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F742054727573746564204D696E7465720000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6877,
											"end": 6921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 7161,
											"end": 7163,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 7156,
											"end": 7159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 7097,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 7097,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 7262,
											"end": 7265,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 7173,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 7173,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7282,
											"end": 7294,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7275,
											"end": 7294,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7472,
											"end": 7476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7510,
											"end": 7512,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7499,
											"end": 7508,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7487,
											"end": 7513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7559,
											"end": 7568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7553,
											"end": 7557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7549,
											"end": 7569,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 7546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7534,
											"end": 7543,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7530,
											"end": 7547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7523,
											"end": 7570,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7713,
											"end": 7717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 7587,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7587,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7579,
											"end": 7718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7725,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7306,
											"end": 7725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7910,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 7731,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7871,
											"end": 7902,
											"name": "PUSH",
											"source": 10,
											"value": "4E45583A206D696E7420746F20746865207A65726F2061646472657373000000"
										},
										{
											"begin": 7867,
											"end": 7868,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7859,
											"end": 7865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7855,
											"end": 7869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7903,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7910,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 8282,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 7916,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8058,
											"end": 8061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8143,
											"end": 8145,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 8138,
											"end": 8141,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 8079,
											"end": 8146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8146,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 8079,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8244,
											"end": 8247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 8155,
											"end": 8248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8248,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8155,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8268,
											"end": 8271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8264,
											"end": 8276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8276,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8257,
											"end": 8276,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 8282,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 8282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 8282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7916,
											"end": 8282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8707,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 8288,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8494,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8469,
											"end": 8495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8541,
											"end": 8550,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8531,
											"end": 8551,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8527,
											"end": 8528,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8516,
											"end": 8525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8512,
											"end": 8529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8505,
											"end": 8552,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8569,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8569,
											"end": 8700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8569,
											"end": 8700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8569,
											"end": 8700,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8569,
											"end": 8700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8561,
											"end": 8700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8288,
											"end": 8707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8942,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 8713,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8853,
											"end": 8887,
											"name": "PUSH",
											"source": 10,
											"value": "4E45583A206D696E7420616D6F756E74206D7573742062652067726561746572"
										},
										{
											"begin": 8849,
											"end": 8850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8837,
											"end": 8851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8922,
											"end": 8934,
											"name": "PUSH",
											"source": 10,
											"value": "207468616E207A65726F00000000000000000000000000000000000000000000"
										},
										{
											"begin": 8917,
											"end": 8919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8909,
											"end": 8915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8905,
											"end": 8920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8898,
											"end": 8935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8713,
											"end": 8942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9314,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 8948,
											"end": 9314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9090,
											"end": 9093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 9175,
											"end": 9177,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 9170,
											"end": 9173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 9111,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9111,
											"end": 9178,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 9111,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9187,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9276,
											"end": 9279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9187,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 9187,
											"end": 9280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9187,
											"end": 9280,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 9187,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9305,
											"end": 9307,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9300,
											"end": 9303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9289,
											"end": 9308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 9314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9524,
											"end": 9526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9513,
											"end": 9522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9509,
											"end": 9527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9501,
											"end": 9527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9573,
											"end": 9582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9567,
											"end": 9571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9559,
											"end": 9560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 9727,
											"end": 9731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 9601,
											"end": 9732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 9601,
											"end": 9732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9593,
											"end": 9732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9923,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 9745,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9885,
											"end": 9915,
											"name": "PUSH",
											"source": 10,
											"value": "4E45583A20416C6C72656164792074727573746564206D696E74657200000000"
										},
										{
											"begin": 9881,
											"end": 9882,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9873,
											"end": 9879,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9869,
											"end": 9883,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9862,
											"end": 9916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9923,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9745,
											"end": 9923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10295,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 9929,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10071,
											"end": 10074,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 10156,
											"end": 10158,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 10151,
											"end": 10154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10092,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 10092,
											"end": 10159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10092,
											"end": 10159,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 10092,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10159,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10085,
											"end": 10159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 10257,
											"end": 10260,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10168,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10168,
											"end": 10261,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 10168,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10286,
											"end": 10288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10281,
											"end": 10284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10289,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10270,
											"end": 10289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10295,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10295,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9929,
											"end": 10295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10720,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 10301,
											"end": 10720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10467,
											"end": 10471,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10505,
											"end": 10507,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10494,
											"end": 10503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10490,
											"end": 10508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10482,
											"end": 10508,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10482,
											"end": 10508,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10554,
											"end": 10563,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10548,
											"end": 10552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10544,
											"end": 10564,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10529,
											"end": 10538,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10525,
											"end": 10542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10518,
											"end": 10565,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10708,
											"end": 10712,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 10582,
											"end": 10713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10582,
											"end": 10713,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10582,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10574,
											"end": 10713,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10574,
											"end": 10713,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10301,
											"end": 10720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10726,
											"end": 10950,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 10726,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10866,
											"end": 10900,
											"name": "PUSH",
											"source": 10,
											"value": "4E45583A20417574686F726973656420456E67696E652063616E6E6F74206265"
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10843,
											"end": 10901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10935,
											"end": 10942,
											"name": "PUSH",
											"source": 10,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10930,
											"end": 10932,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10922,
											"end": 10928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10918,
											"end": 10933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10911,
											"end": 10943,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10726,
											"end": 10950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10726,
											"end": 10950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11322,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 10956,
											"end": 11322,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11098,
											"end": 11101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 11119,
											"end": 11186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11119,
											"end": 11186,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 11119,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11112,
											"end": 11186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11112,
											"end": 11186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 11284,
											"end": 11287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 11195,
											"end": 11288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11195,
											"end": 11288,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 11195,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11313,
											"end": 11315,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11308,
											"end": 11311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11297,
											"end": 11316,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11322,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11322,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10956,
											"end": 11322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11328,
											"end": 11747,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 11328,
											"end": 11747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11494,
											"end": 11498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11532,
											"end": 11534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11521,
											"end": 11530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11517,
											"end": 11535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11590,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11575,
											"end": 11579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11571,
											"end": 11591,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11567,
											"end": 11568,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11565,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11545,
											"end": 11592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11609,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 11735,
											"end": 11739,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11609,
											"end": 11740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 11609,
											"end": 11740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11609,
											"end": 11740,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 11609,
											"end": 11740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11601,
											"end": 11740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11601,
											"end": 11740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11328,
											"end": 11747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11328,
											"end": 11747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11328,
											"end": 11747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11328,
											"end": 11747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11902,
											"end": 11906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11942,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11929,
											"end": 11938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 11943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11917,
											"end": 11943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 12021,
											"end": 12022,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12010,
											"end": 12019,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12006,
											"end": 12023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 11953,
											"end": 12024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11953,
											"end": 12024,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 11953,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 12102,
											"end": 12104,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12091,
											"end": 12100,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12078,
											"end": 12084,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12034,
											"end": 12106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 12034,
											"end": 12106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12184,
											"end": 12186,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12173,
											"end": 12182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12169,
											"end": 12187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12160,
											"end": 12166,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 12116,
											"end": 12188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12188,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 12116,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11753,
											"end": 12195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12201,
											"end": 12381,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 12201,
											"end": 12381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12249,
											"end": 12326,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12327,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12346,
											"end": 12350,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 12343,
											"end": 12344,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12336,
											"end": 12351,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12370,
											"end": 12374,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12367,
											"end": 12368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12375,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12427,
											"end": 12430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12446,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12464,
											"end": 12465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12446,
											"end": 12466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12446,
											"end": 12466,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12446,
											"end": 12466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12441,
											"end": 12466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12441,
											"end": 12466,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12498,
											"end": 12499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 12480,
											"end": 12500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 12480,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12475,
											"end": 12500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12475,
											"end": 12500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12520,
											"end": 12521,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12509,
											"end": 12525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12544,
											"end": 12547,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12541,
											"end": 12542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12538,
											"end": 12548,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 12535,
											"end": 12571,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12535,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 12535,
											"end": 12571,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 12551,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 12551,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12535,
											"end": 12571,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 12535,
											"end": 12571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/NEX.sol",
								"src/NEXEngine.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setauthorisedEngine(address)": "b86ddfa9",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEX_InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEX_MustBeGreaterThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_engine\",\"type\":\"address\"}],\"name\":\"setauthorisedEngine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NEX.sol\":\"NEX\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/NEX.sol\":{\"keccak256\":\"0x65e9cc84b0b9eff502e4a97d48536a07d2a8016240315774a70d744b19881161\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://71f5721a5151a28e1fa8d47497989dea8239da05e86ddef746d95b7abc80145b\",\"dweb:/ipfs/QmaCsmYPUg4iB1ZHXLRYTP3YDpPDVuyGym1XVC7GHiybXm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "src/NEX.sol:NEX",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "src/NEX.sol:NEX",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "src/NEX.sol:NEX",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "src/NEX.sol:NEX",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "src/NEX.sol:NEX",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "src/NEX.sol:NEX",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1088,
								"contract": "src/NEX.sol:NEX",
								"label": "trustedMinters",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/NEXEngine.sol": {
				"NEXEngine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_colletral",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_priceFeed",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_stableCoin",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NEXEngine_ColletralNotAllowed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEXEngine_DepositeFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEXEngine_NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEXEngine_RedeemFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NEXEngine_burnFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "colletral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositeColletral",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenCollateralAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountCollateral",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountNexToMint",
									"type": "uint256"
								}
							],
							"name": "depositeColletralMintNEX",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getHealthFactor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenCollateralAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountCollateral",
									"type": "uint256"
								}
							],
							"name": "redeemCollectral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenCollateralAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "collateralAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "nexAmount",
									"type": "uint256"
								}
							],
							"name": "redeemColletralForNex",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": ": 0xminer11 NEX is a decentralized stable coin that is pegged to the US Dollar. This contract will handle the minting and burning of the NEX token.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/NEXEngine.sol\":465:4491  contract NEXEngine is ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"src/NEXEngine.sol\":1825:1984  constructor(address _colletral, address _priceFeed, address _stableCoin) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/NEXEngine.sol\":1934:1944  _priceFeed */\n  dup2\n    /* \"src/NEXEngine.sol\":1908:1919  _priceFeeds */\n  0x01\n    /* \"src/NEXEngine.sol\":1908:1931  _priceFeeds[_colletral] */\n  0x00\n    /* \"src/NEXEngine.sol\":1920:1930  _colletral */\n  dup6\n    /* \"src/NEXEngine.sol\":1908:1931  _priceFeeds[_colletral] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"src/NEXEngine.sol\":1908:1944  _priceFeeds[_colletral] = _priceFeed */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"src/NEXEngine.sol\":1965:1976  _stableCoin */\n  dup1\n    /* \"src/NEXEngine.sol\":1954:1977  _nex = NEX(_stableCoin) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"src/NEXEngine.sol\":1825:1984  constructor(address _colletral, address _priceFeed, address _stableCoin) {... */\n  pop\n  pop\n  pop\n    /* \"src/NEXEngine.sol\":465:4491  contract NEXEngine is ReentrancyGuard {... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_22\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_14:\n    /* \"#utility.yul\":641:665   */\n  tag_24\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_25:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_15:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_27\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_14\n  jump\t// in\ntag_27:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  0x00\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":966:1085   */\ntag_29:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_31\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_32\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_15\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_33\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_15\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"src/NEXEngine.sol\":465:4491  contract NEXEngine is ReentrancyGuard {... */\ntag_8:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1d814fa3c8873fbda672528deddbda568ddac7b498936bbbf1a966e21ab8357e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/NEXEngine.sol\":465:4491  contract NEXEngine is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x28a07025\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x670a14ea\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9268297f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa5f352b7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb91d1c91\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"src/NEXEngine.sol\":4079:4111  function liquidate() external {} */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      stop\n        /* \"src/NEXEngine.sol\":2921:3206  function redeemCollectral(... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"src/NEXEngine.sol\":2128:2411  function depositeColletralMintNEX(... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      stop\n        /* \"src/NEXEngine.sol\":4117:4155  function getHealthFactor() external {} */\n    tag_6:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"src/NEXEngine.sol\":3212:3499  function redeemColletralForNex(... */\n    tag_7:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"src/NEXEngine.sol\":4079:4111  function liquidate() external {} */\n    tag_9:\n      jump\t// out\n        /* \"src/NEXEngine.sol\":2921:3206  function redeemCollectral(... */\n    tag_13:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_25\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_26\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_25:\n        /* \"src/NEXEngine.sol\":3084:3100  amountCollateral */\n      dup1\n        /* \"src/NEXEngine.sol\":1554:1555  0 */\n      0x00\n        /* \"src/NEXEngine.sol\":1544:1550  amount */\n      dup2\n        /* \"src/NEXEngine.sol\":1544:1555  amount == 0 */\n      sub\n        /* \"src/NEXEngine.sol\":1540:1618  if (amount == 0) {... */\n      tag_28\n      jumpi\n        /* \"src/NEXEngine.sol\":1578:1607  NEXEngine_NeedsMoreThanZero() */\n      mload(0x40)\n      0x77290a1d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEXEngine.sol\":1540:1618  if (amount == 0) {... */\n    tag_28:\n        /* \"src/NEXEngine.sol\":3124:3195  _redeemCollateral(tokenCollateralAddress, amountCollateral, msg.sender) */\n      tag_30\n        /* \"src/NEXEngine.sol\":3142:3164  tokenCollateralAddress */\n      dup4\n        /* \"src/NEXEngine.sol\":3166:3182  amountCollateral */\n      dup4\n        /* \"src/NEXEngine.sol\":3184:3194  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":3124:3141  _redeemCollateral */\n      tag_31\n        /* \"src/NEXEngine.sol\":3124:3195  _redeemCollateral(tokenCollateralAddress, amountCollateral, msg.sender) */\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_32\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_33\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_32:\n        /* \"src/NEXEngine.sol\":2921:3206  function redeemCollectral(... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/NEXEngine.sol\":2128:2411  function depositeColletralMintNEX(... */\n    tag_17:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_35\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_26\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_35:\n        /* \"src/NEXEngine.sol\":2306:2366  _depositeCollateral(tokenCollateralAddress,amountCollateral) */\n      tag_37\n        /* \"src/NEXEngine.sol\":2326:2348  tokenCollateralAddress */\n      dup4\n        /* \"src/NEXEngine.sol\":2349:2365  amountCollateral */\n      dup4\n        /* \"src/NEXEngine.sol\":2306:2325  _depositeCollateral */\n      tag_38\n        /* \"src/NEXEngine.sol\":2306:2366  _depositeCollateral(tokenCollateralAddress,amountCollateral) */\n      jump\t// in\n    tag_37:\n        /* \"src/NEXEngine.sol\":2380:2404  mintNEX(amountNexToMint) */\n      tag_39\n        /* \"src/NEXEngine.sol\":2388:2403  amountNexToMint */\n      dup2\n        /* \"src/NEXEngine.sol\":2380:2387  mintNEX */\n      tag_40\n        /* \"src/NEXEngine.sol\":2380:2404  mintNEX(amountNexToMint) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_41\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_33\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_41:\n        /* \"src/NEXEngine.sol\":2128:2411  function depositeColletralMintNEX(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/NEXEngine.sol\":4117:4155  function getHealthFactor() external {} */\n    tag_19:\n      jump\t// out\n        /* \"src/NEXEngine.sol\":3212:3499  function redeemColletralForNex(... */\n    tag_22:\n        /* \"src/NEXEngine.sol\":3372:3413  _burnNEX(nexAmount,msg.sender,msg.sender) */\n      tag_44\n        /* \"src/NEXEngine.sol\":3381:3390  nexAmount */\n      dup2\n        /* \"src/NEXEngine.sol\":3391:3401  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":3402:3412  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":3372:3380  _burnNEX */\n      tag_45\n        /* \"src/NEXEngine.sol\":3372:3413  _burnNEX(nexAmount,msg.sender,msg.sender) */\n      jump\t// in\n    tag_44:\n        /* \"src/NEXEngine.sol\":3423:3492  _redeemCollateral(tokenCollateralAddress,collateralAmount,msg.sender) */\n      tag_46\n        /* \"src/NEXEngine.sol\":3441:3463  tokenCollateralAddress */\n      dup4\n        /* \"src/NEXEngine.sol\":3464:3480  collateralAmount */\n      dup4\n        /* \"src/NEXEngine.sol\":3481:3491  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":3423:3440  _redeemCollateral */\n      tag_31\n        /* \"src/NEXEngine.sol\":3423:3492  _redeemCollateral(tokenCollateralAddress,collateralAmount,msg.sender) */\n      jump\t// in\n    tag_46:\n        /* \"src/NEXEngine.sol\":3212:3499  function redeemColletralForNex(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"src/NEXEngine.sol\":4161:4489  function _redeemCollateral(address collateralAddress,uint256 amountCollateral,address to) private {... */\n    tag_31:\n        /* \"src/NEXEngine.sol\":4305:4321  amountCollateral */\n      dup2\n        /* \"src/NEXEngine.sol\":4269:4289  _collateralDeposited */\n      0x02\n        /* \"src/NEXEngine.sol\":4269:4301  _collateralDeposited[msg.sender] */\n      0x00\n        /* \"src/NEXEngine.sol\":4290:4300  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":4269:4301  _collateralDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NEXEngine.sol\":4269:4321  _collateralDeposited[msg.sender] -= amountCollateral */\n      dup3\n      dup3\n      sload\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NEXEngine.sol\":4332:4344  bool success */\n      0x00\n        /* \"src/NEXEngine.sol\":4354:4371  collateralAddress */\n      dup4\n        /* \"src/NEXEngine.sol\":4347:4381  IERC20(collateralAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"src/NEXEngine.sol\":4382:4384  to */\n      dup4\n        /* \"src/NEXEngine.sol\":4386:4402  amountCollateral */\n      dup6\n        /* \"src/NEXEngine.sol\":4347:4403  IERC20(collateralAddress).transfer(to, amountCollateral) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"src/NEXEngine.sol\":4332:4403  bool success = IERC20(collateralAddress).transfer(to, amountCollateral) */\n      swap1\n      pop\n        /* \"src/NEXEngine.sol\":4419:4426  success */\n      dup1\n        /* \"src/NEXEngine.sol\":4414:4483  if (!success){... */\n      tag_60\n      jumpi\n        /* \"src/NEXEngine.sol\":4448:4472  NEXEngine_RedeemFailed() */\n      mload(0x40)\n      0x68171d3300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEXEngine.sol\":4414:4483  if (!success){... */\n    tag_60:\n        /* \"src/NEXEngine.sol\":4259:4489  {... */\n      pop\n        /* \"src/NEXEngine.sol\":4161:4489  function _redeemCollateral(address collateralAddress,uint256 amountCollateral,address to) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"src/NEXEngine.sol\":2417:2915  function _depositeCollateral(address _colletral, uint256 _amount) internal{... */\n    tag_38:\n        /* \"src/NEXEngine.sol\":2663:2670  _amount */\n      dup1\n        /* \"src/NEXEngine.sol\":2627:2647  _collateralDeposited */\n      0x02\n        /* \"src/NEXEngine.sol\":2627:2659  _collateralDeposited[msg.sender] */\n      0x00\n        /* \"src/NEXEngine.sol\":2648:2658  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":2627:2659  _collateralDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NEXEngine.sol\":2627:2670  _collateralDeposited[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NEXEngine.sol\":2680:2692  bool success */\n      0x00\n        /* \"src/NEXEngine.sol\":2701:2711  _colletral */\n      dup3\n        /* \"src/NEXEngine.sol\":2694:2725  IERC20(_colletral).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/NEXEngine.sol\":2726:2736  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":2746:2750  this */\n      address\n        /* \"src/NEXEngine.sol\":2753:2760  _amount */\n      dup6\n        /* \"src/NEXEngine.sol\":2694:2761  IERC20(_colletral).transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_68:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_69:\n        /* \"src/NEXEngine.sol\":2680:2761  bool success =IERC20(_colletral).transferFrom(msg.sender, address(this), _amount) */\n      swap1\n      pop\n        /* \"src/NEXEngine.sol\":2776:2783  success */\n      dup1\n        /* \"src/NEXEngine.sol\":2771:2843  if (!success) {... */\n      tag_70\n      jumpi\n        /* \"src/NEXEngine.sol\":2806:2832  NEXEngine_DepositeFailed() */\n      mload(0x40)\n      0x27e85e4c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEXEngine.sol\":2771:2843  if (!success) {... */\n    tag_70:\n        /* \"src/NEXEngine.sol\":2887:2897  _colletral */\n      dup3\n        /* \"src/NEXEngine.sol\":2857:2907  DepositeColletral(msg.sender, _colletral, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/NEXEngine.sol\":2875:2885  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":2857:2907  DepositeColletral(msg.sender, _colletral, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5285b574be509117ddacaa5a2d92a4b3e23f805547f65b5b77de327acd17506e\n        /* \"src/NEXEngine.sol\":2899:2906  _amount */\n      dup5\n        /* \"src/NEXEngine.sol\":2857:2907  DepositeColletral(msg.sender, _colletral, _amount) */\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/NEXEngine.sol\":2491:2915  {... */\n      pop\n        /* \"src/NEXEngine.sol\":2417:2915  function _depositeCollateral(address _colletral, uint256 _amount) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/NEXEngine.sol\":3816:4073  function mintNEX(uint256 _amountNexToMint) internal {... */\n    tag_40:\n        /* \"src/NEXEngine.sol\":3905:3921  _amountNexToMint */\n      dup1\n        /* \"src/NEXEngine.sol\":3878:3889  s_NexMinted */\n      0x03\n        /* \"src/NEXEngine.sol\":3878:3901  s_NexMinted[msg.sender] */\n      0x00\n        /* \"src/NEXEngine.sol\":3890:3900  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":3878:3901  s_NexMinted[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NEXEngine.sol\":3878:3921  s_NexMinted[msg.sender] += _amountNexToMint */\n      dup3\n      dup3\n      sload\n      tag_74\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_74:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NEXEngine.sol\":4026:4030  _nex */\n      immutable(\"0x1d814fa3c8873fbda672528deddbda568ddac7b498936bbbf1a966e21ab8357e\")\n        /* \"src/NEXEngine.sol\":4026:4035  _nex.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"src/NEXEngine.sol\":4036:4046  msg.sender */\n      caller\n        /* \"src/NEXEngine.sol\":4048:4064  _amountNexToMint */\n      dup4\n        /* \"src/NEXEngine.sol\":4026:4065  _nex.mint(msg.sender, _amountNexToMint) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_75:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      revert(0x00, 0x00)\n    tag_76:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/NEXEngine.sol\":3816:4073  function mintNEX(uint256 _amountNexToMint) internal {... */\n      pop\n      jump\t// out\n        /* \"src/NEXEngine.sol\":3508:3810  function _burnNEX(uint256 amountNexToburn, address onbehalf,address fromnex) internal {... */\n    tag_45:\n        /* \"src/NEXEngine.sol\":3629:3644  amountNexToburn */\n      dup3\n        /* \"src/NEXEngine.sol\":3604:3615  s_NexMinted */\n      0x03\n        /* \"src/NEXEngine.sol\":3604:3625  s_NexMinted[onbehalf] */\n      0x00\n        /* \"src/NEXEngine.sol\":3616:3624  onbehalf */\n      dup5\n        /* \"src/NEXEngine.sol\":3604:3625  s_NexMinted[onbehalf] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/NEXEngine.sol\":3604:3644  s_NexMinted[onbehalf] -= amountNexToburn */\n      dup3\n      dup3\n      sload\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/NEXEngine.sol\":3655:3667  bool success */\n      0x00\n        /* \"src/NEXEngine.sol\":3670:3674  _nex */\n      immutable(\"0x1d814fa3c8873fbda672528deddbda568ddac7b498936bbbf1a966e21ab8357e\")\n        /* \"src/NEXEngine.sol\":3670:3687  _nex.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"src/NEXEngine.sol\":3688:3695  fromnex */\n      dup4\n        /* \"src/NEXEngine.sol\":3704:3708  this */\n      address\n        /* \"src/NEXEngine.sol\":3711:3726  amountNexToburn */\n      dup8\n        /* \"src/NEXEngine.sol\":3670:3727  _nex.transferFrom(fromnex,address(this), amountNexToburn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_81:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_83\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_83:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_84:\n        /* \"src/NEXEngine.sol\":3655:3727  bool success = _nex.transferFrom(fromnex,address(this), amountNexToburn) */\n      swap1\n      pop\n        /* \"src/NEXEngine.sol\":3742:3749  success */\n      dup1\n        /* \"src/NEXEngine.sol\":3738:3804  if(!success){... */\n      tag_85\n      jumpi\n        /* \"src/NEXEngine.sol\":3771:3793  NEXEngine_burnFailed() */\n      mload(0x40)\n      0x778c23f200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/NEXEngine.sol\":3738:3804  if(!success){... */\n    tag_85:\n        /* \"src/NEXEngine.sol\":3594:3810  {... */\n      pop\n        /* \"src/NEXEngine.sol\":3508:3810  function _burnNEX(uint256 amountNexToburn, address onbehalf,address fromnex) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_87:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_89:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_90:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_111\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_89\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_91:\n        /* \"#utility.yul\":641:665   */\n      tag_113\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_90\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_114:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_92:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_116\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_91\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_93:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_94:\n        /* \"#utility.yul\":997:1021   */\n      tag_119\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_93\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_120\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_120:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_95:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_122\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_94\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_12:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_125\n      tag_87\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1290:1409   */\n    tag_124:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_126\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_92\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_127\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_95\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:2296   */\n    tag_16:\n        /* \"#utility.yul\":1754:1760   */\n      0x00\n        /* \"#utility.yul\":1762:1768   */\n      0x00\n        /* \"#utility.yul\":1770:1776   */\n      0x00\n        /* \"#utility.yul\":1819:1821   */\n      0x60\n        /* \"#utility.yul\":1807:1816   */\n      dup5\n        /* \"#utility.yul\":1798:1805   */\n      dup7\n        /* \"#utility.yul\":1794:1817   */\n      sub\n        /* \"#utility.yul\":1790:1822   */\n      slt\n        /* \"#utility.yul\":1787:1906   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":1825:1904   */\n      tag_130\n      tag_87\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":1787:1906   */\n    tag_129:\n        /* \"#utility.yul\":1945:1946   */\n      0x00\n        /* \"#utility.yul\":1970:2023   */\n      tag_131\n        /* \"#utility.yul\":2015:2022   */\n      dup7\n        /* \"#utility.yul\":2006:2012   */\n      dup3\n        /* \"#utility.yul\":1995:2004   */\n      dup8\n        /* \"#utility.yul\":1991:2013   */\n      add\n        /* \"#utility.yul\":1970:2023   */\n      tag_92\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":1960:2023   */\n      swap4\n      pop\n        /* \"#utility.yul\":1916:2033   */\n      pop\n        /* \"#utility.yul\":2072:2074   */\n      0x20\n        /* \"#utility.yul\":2098:2151   */\n      tag_132\n        /* \"#utility.yul\":2143:2150   */\n      dup7\n        /* \"#utility.yul\":2134:2140   */\n      dup3\n        /* \"#utility.yul\":2123:2132   */\n      dup8\n        /* \"#utility.yul\":2119:2141   */\n      add\n        /* \"#utility.yul\":2098:2151   */\n      tag_95\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2088:2151   */\n      swap3\n      pop\n        /* \"#utility.yul\":2043:2161   */\n      pop\n        /* \"#utility.yul\":2200:2202   */\n      0x40\n        /* \"#utility.yul\":2226:2279   */\n      tag_133\n        /* \"#utility.yul\":2271:2278   */\n      dup7\n        /* \"#utility.yul\":2262:2268   */\n      dup3\n        /* \"#utility.yul\":2251:2260   */\n      dup8\n        /* \"#utility.yul\":2247:2269   */\n      add\n        /* \"#utility.yul\":2226:2279   */\n      tag_95\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2216:2279   */\n      swap2\n      pop\n        /* \"#utility.yul\":2171:2289   */\n      pop\n        /* \"#utility.yul\":1677:2296   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2302:2471   */\n    tag_96:\n        /* \"#utility.yul\":2386:2397   */\n      0x00\n        /* \"#utility.yul\":2420:2426   */\n      dup3\n        /* \"#utility.yul\":2415:2418   */\n      dup3\n        /* \"#utility.yul\":2408:2427   */\n      mstore\n        /* \"#utility.yul\":2460:2464   */\n      0x20\n        /* \"#utility.yul\":2455:2458   */\n      dup3\n        /* \"#utility.yul\":2451:2465   */\n      add\n        /* \"#utility.yul\":2436:2465   */\n      swap1\n      pop\n        /* \"#utility.yul\":2302:2471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2477:2658   */\n    tag_97:\n        /* \"#utility.yul\":2617:2650   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":2613:2614   */\n      0x00\n        /* \"#utility.yul\":2605:2611   */\n      dup3\n        /* \"#utility.yul\":2601:2615   */\n      add\n        /* \"#utility.yul\":2594:2651   */\n      mstore\n        /* \"#utility.yul\":2477:2658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:3030   */\n    tag_98:\n        /* \"#utility.yul\":2806:2809   */\n      0x00\n        /* \"#utility.yul\":2827:2894   */\n      tag_137\n        /* \"#utility.yul\":2891:2893   */\n      0x1f\n        /* \"#utility.yul\":2886:2889   */\n      dup4\n        /* \"#utility.yul\":2827:2894   */\n      tag_96\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2820:2894   */\n      swap2\n      pop\n        /* \"#utility.yul\":2903:2996   */\n      tag_138\n        /* \"#utility.yul\":2992:2995   */\n      dup3\n        /* \"#utility.yul\":2903:2996   */\n      tag_97\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3016:3019   */\n      dup3\n        /* \"#utility.yul\":3012:3024   */\n      add\n        /* \"#utility.yul\":3005:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2664:3030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3455   */\n    tag_50:\n        /* \"#utility.yul\":3202:3206   */\n      0x00\n        /* \"#utility.yul\":3240:3242   */\n      0x20\n        /* \"#utility.yul\":3229:3238   */\n      dup3\n        /* \"#utility.yul\":3225:3243   */\n      add\n        /* \"#utility.yul\":3217:3243   */\n      swap1\n      pop\n        /* \"#utility.yul\":3289:3298   */\n      dup2\n        /* \"#utility.yul\":3283:3287   */\n      dup2\n        /* \"#utility.yul\":3279:3299   */\n      sub\n        /* \"#utility.yul\":3275:3276   */\n      0x00\n        /* \"#utility.yul\":3264:3273   */\n      dup4\n        /* \"#utility.yul\":3260:3277   */\n      add\n        /* \"#utility.yul\":3253:3300   */\n      mstore\n        /* \"#utility.yul\":3317:3448   */\n      tag_140\n        /* \"#utility.yul\":3443:3447   */\n      dup2\n        /* \"#utility.yul\":3317:3448   */\n      tag_98\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3309:3448   */\n      swap1\n      pop\n        /* \"#utility.yul\":3036:3455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3461:3641   */\n    tag_99:\n        /* \"#utility.yul\":3509:3586   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3506:3507   */\n      0x00\n        /* \"#utility.yul\":3499:3587   */\n      mstore\n        /* \"#utility.yul\":3606:3610   */\n      0x11\n        /* \"#utility.yul\":3603:3604   */\n      0x04\n        /* \"#utility.yul\":3596:3611   */\n      mstore\n        /* \"#utility.yul\":3630:3634   */\n      0x24\n        /* \"#utility.yul\":3627:3628   */\n      0x00\n        /* \"#utility.yul\":3620:3635   */\n      revert\n        /* \"#utility.yul\":3647:3841   */\n    tag_53:\n        /* \"#utility.yul\":3687:3691   */\n      0x00\n        /* \"#utility.yul\":3707:3727   */\n      tag_143\n        /* \"#utility.yul\":3725:3726   */\n      dup3\n        /* \"#utility.yul\":3707:3727   */\n      tag_93\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3702:3727   */\n      swap2\n      pop\n        /* \"#utility.yul\":3741:3761   */\n      tag_144\n        /* \"#utility.yul\":3759:3760   */\n      dup4\n        /* \"#utility.yul\":3741:3761   */\n      tag_93\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3736:3761   */\n      swap3\n      pop\n        /* \"#utility.yul\":3785:3786   */\n      dup3\n        /* \"#utility.yul\":3782:3783   */\n      dup3\n        /* \"#utility.yul\":3778:3787   */\n      sub\n        /* \"#utility.yul\":3770:3787   */\n      swap1\n      pop\n        /* \"#utility.yul\":3809:3810   */\n      dup2\n        /* \"#utility.yul\":3803:3807   */\n      dup2\n        /* \"#utility.yul\":3800:3811   */\n      gt\n        /* \"#utility.yul\":3797:3834   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3814:3832   */\n      tag_146\n      tag_99\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3797:3834   */\n    tag_145:\n        /* \"#utility.yul\":3647:3841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:3965   */\n    tag_100:\n        /* \"#utility.yul\":3934:3958   */\n      tag_148\n        /* \"#utility.yul\":3952:3957   */\n      dup2\n        /* \"#utility.yul\":3934:3958   */\n      tag_90\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3929:3932   */\n      dup3\n        /* \"#utility.yul\":3922:3959   */\n      mstore\n        /* \"#utility.yul\":3847:3965   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3971:4089   */\n    tag_101:\n        /* \"#utility.yul\":4058:4082   */\n      tag_150\n        /* \"#utility.yul\":4076:4081   */\n      dup2\n        /* \"#utility.yul\":4058:4082   */\n      tag_93\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4053:4056   */\n      dup3\n        /* \"#utility.yul\":4046:4083   */\n      mstore\n        /* \"#utility.yul\":3971:4089   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4095:4427   */\n    tag_55:\n        /* \"#utility.yul\":4216:4220   */\n      0x00\n        /* \"#utility.yul\":4254:4256   */\n      0x40\n        /* \"#utility.yul\":4243:4252   */\n      dup3\n        /* \"#utility.yul\":4239:4257   */\n      add\n        /* \"#utility.yul\":4231:4257   */\n      swap1\n      pop\n        /* \"#utility.yul\":4267:4338   */\n      tag_152\n        /* \"#utility.yul\":4335:4336   */\n      0x00\n        /* \"#utility.yul\":4324:4333   */\n      dup4\n        /* \"#utility.yul\":4320:4337   */\n      add\n        /* \"#utility.yul\":4311:4317   */\n      dup6\n        /* \"#utility.yul\":4267:4338   */\n      tag_100\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4348:4420   */\n      tag_153\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4405:4414   */\n      dup4\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"#utility.yul\":4392:4398   */\n      dup5\n        /* \"#utility.yul\":4348:4420   */\n      tag_101\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4095:4427   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4433:4523   */\n    tag_102:\n        /* \"#utility.yul\":4467:4474   */\n      0x00\n        /* \"#utility.yul\":4510:4515   */\n      dup2\n        /* \"#utility.yul\":4503:4516   */\n      iszero\n        /* \"#utility.yul\":4496:4517   */\n      iszero\n        /* \"#utility.yul\":4485:4517   */\n      swap1\n      pop\n        /* \"#utility.yul\":4433:4523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4529:4645   */\n    tag_103:\n        /* \"#utility.yul\":4599:4620   */\n      tag_156\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4599:4620   */\n      tag_102\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":4592:4597   */\n      dup2\n        /* \"#utility.yul\":4589:4621   */\n      eq\n        /* \"#utility.yul\":4579:4639   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":4635:4636   */\n      0x00\n        /* \"#utility.yul\":4632:4633   */\n      0x00\n        /* \"#utility.yul\":4625:4637   */\n      revert\n        /* \"#utility.yul\":4579:4639   */\n    tag_157:\n        /* \"#utility.yul\":4529:4645   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4651:4788   */\n    tag_104:\n        /* \"#utility.yul\":4705:4710   */\n      0x00\n        /* \"#utility.yul\":4736:4742   */\n      dup2\n        /* \"#utility.yul\":4730:4743   */\n      mload\n        /* \"#utility.yul\":4721:4743   */\n      swap1\n      pop\n        /* \"#utility.yul\":4752:4782   */\n      tag_159\n        /* \"#utility.yul\":4776:4781   */\n      dup2\n        /* \"#utility.yul\":4752:4782   */\n      tag_103\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":4651:4788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4794:5139   */\n    tag_59:\n        /* \"#utility.yul\":4861:4867   */\n      0x00\n        /* \"#utility.yul\":4910:4912   */\n      0x20\n        /* \"#utility.yul\":4898:4907   */\n      dup3\n        /* \"#utility.yul\":4889:4896   */\n      dup5\n        /* \"#utility.yul\":4885:4908   */\n      sub\n        /* \"#utility.yul\":4881:4913   */\n      slt\n        /* \"#utility.yul\":4878:4997   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":4916:4995   */\n      tag_162\n      tag_87\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4878:4997   */\n    tag_161:\n        /* \"#utility.yul\":5036:5037   */\n      0x00\n        /* \"#utility.yul\":5061:5122   */\n      tag_163\n        /* \"#utility.yul\":5114:5121   */\n      dup5\n        /* \"#utility.yul\":5105:5111   */\n      dup3\n        /* \"#utility.yul\":5094:5103   */\n      dup6\n        /* \"#utility.yul\":5090:5112   */\n      add\n        /* \"#utility.yul\":5061:5122   */\n      tag_104\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":5051:5122   */\n      swap2\n      pop\n        /* \"#utility.yul\":5007:5132   */\n      pop\n        /* \"#utility.yul\":4794:5139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5145:5336   */\n    tag_64:\n        /* \"#utility.yul\":5185:5188   */\n      0x00\n        /* \"#utility.yul\":5204:5224   */\n      tag_165\n        /* \"#utility.yul\":5222:5223   */\n      dup3\n        /* \"#utility.yul\":5204:5224   */\n      tag_93\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5199:5224   */\n      swap2\n      pop\n        /* \"#utility.yul\":5238:5258   */\n      tag_166\n        /* \"#utility.yul\":5256:5257   */\n      dup4\n        /* \"#utility.yul\":5238:5258   */\n      tag_93\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5233:5258   */\n      swap3\n      pop\n        /* \"#utility.yul\":5281:5282   */\n      dup3\n        /* \"#utility.yul\":5278:5279   */\n      dup3\n        /* \"#utility.yul\":5274:5283   */\n      add\n        /* \"#utility.yul\":5267:5283   */\n      swap1\n      pop\n        /* \"#utility.yul\":5302:5305   */\n      dup1\n        /* \"#utility.yul\":5299:5300   */\n      dup3\n        /* \"#utility.yul\":5296:5306   */\n      gt\n        /* \"#utility.yul\":5293:5329   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":5309:5327   */\n      tag_168\n      tag_99\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5293:5329   */\n    tag_167:\n        /* \"#utility.yul\":5145:5336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5342:5784   */\n    tag_66:\n        /* \"#utility.yul\":5491:5495   */\n      0x00\n        /* \"#utility.yul\":5529:5531   */\n      0x60\n        /* \"#utility.yul\":5518:5527   */\n      dup3\n        /* \"#utility.yul\":5514:5532   */\n      add\n        /* \"#utility.yul\":5506:5532   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5613   */\n      tag_170\n        /* \"#utility.yul\":5610:5611   */\n      0x00\n        /* \"#utility.yul\":5599:5608   */\n      dup4\n        /* \"#utility.yul\":5595:5612   */\n      add\n        /* \"#utility.yul\":5586:5592   */\n      dup7\n        /* \"#utility.yul\":5542:5613   */\n      tag_100\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5623:5695   */\n      tag_171\n        /* \"#utility.yul\":5691:5693   */\n      0x20\n        /* \"#utility.yul\":5680:5689   */\n      dup4\n        /* \"#utility.yul\":5676:5694   */\n      add\n        /* \"#utility.yul\":5667:5673   */\n      dup6\n        /* \"#utility.yul\":5623:5695   */\n      tag_100\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5705:5777   */\n      tag_172\n        /* \"#utility.yul\":5773:5775   */\n      0x40\n        /* \"#utility.yul\":5762:5771   */\n      dup4\n        /* \"#utility.yul\":5758:5776   */\n      add\n        /* \"#utility.yul\":5749:5755   */\n      dup5\n        /* \"#utility.yul\":5705:5777   */\n      tag_101\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5342:5784   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5790:6012   */\n    tag_72:\n        /* \"#utility.yul\":5883:5887   */\n      0x00\n        /* \"#utility.yul\":5921:5923   */\n      0x20\n        /* \"#utility.yul\":5910:5919   */\n      dup3\n        /* \"#utility.yul\":5906:5924   */\n      add\n        /* \"#utility.yul\":5898:5924   */\n      swap1\n      pop\n        /* \"#utility.yul\":5934:6005   */\n      tag_174\n        /* \"#utility.yul\":6002:6003   */\n      0x00\n        /* \"#utility.yul\":5991:6000   */\n      dup4\n        /* \"#utility.yul\":5987:6004   */\n      add\n        /* \"#utility.yul\":5978:5984   */\n      dup5\n        /* \"#utility.yul\":5934:6005   */\n      tag_101\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5790:6012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dbf9c05cb32a7a51af398938fe40f47d394dbb2216b8eece2fd6c180b6401e0464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1305": {
									"entryPoint": null,
									"id": 1305,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1511:10",
										"nodeType": "YulBlock",
										"src": "0:1511:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "956:552:10",
													"nodeType": "YulBlock",
													"src": "956:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:10",
																"nodeType": "YulBlock",
																"src": "1002:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:10"
																			},
																			"nativeSrc": "1004:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:10"
																		},
																		"nativeSrc": "1004:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:10"
																		},
																		"nativeSrc": "973:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nativeSrc": "969:32:10",
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"nativeSrc": "966:119:10",
															"nodeType": "YulIf",
															"src": "966:119:10"
														},
														{
															"nativeSrc": "1095:128:10",
															"nodeType": "YulBlock",
															"src": "1095:128:10",
															"statements": [
																{
																	"nativeSrc": "1110:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:10"
																				},
																				"nativeSrc": "1181:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:10"
																		},
																		"nativeSrc": "1149:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:10",
															"nodeType": "YulBlock",
															"src": "1233:129:10",
															"statements": [
																{
																	"nativeSrc": "1248:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				"nativeSrc": "1320:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:10"
																		},
																		"nativeSrc": "1288:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:10",
															"nodeType": "YulBlock",
															"src": "1372:129:10",
															"statements": [
																{
																	"nativeSrc": "1387:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:10"
																				},
																				"nativeSrc": "1459:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:10"
																		},
																		"nativeSrc": "1427:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:10",
														"nodeType": "YulTypedName",
														"src": "910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:10",
														"nodeType": "YulTypedName",
														"src": "921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:10",
														"nodeType": "YulTypedName",
														"src": "933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:10",
														"nodeType": "YulTypedName",
														"src": "941:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:10",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"src": "845:663:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051610b57380380610b578339818101604052810190610031919061014d565b60015f819055508160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050505061019d565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61011c826100f3565b9050919050565b61012c81610112565b8114610136575f5ffd5b50565b5f8151905061014781610123565b92915050565b5f5f5f60608486031215610164576101636100ef565b5b5f61017186828701610139565b935050602061018286828701610139565b925050604061019386828701610139565b9150509250925092565b60805161099b6101bc5f395f818161048f015261056e015261099b5ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c806328a0702514610059578063670a14ea146100635780639268297f1461007f578063a5f352b71461009b578063b91d1c91146100a5575b5f5ffd5b6100616100c1565b005b61007d600480360381019061007891906106d9565b6100c3565b005b61009960048036038101906100949190610717565b61011d565b005b6100a3610145565b005b6100bf60048036038101906100ba9190610717565b610147565b005b565b6100cb610162565b805f8103610105576040517f77290a1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101108383336101af565b506101196102bd565b5050565b610125610162565b61012f83836102c6565b6101388161043a565b6101406102bd565b505050565b565b610152813333610518565b61015d8383336101af565b505050565b60025f54036101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d906107c1565b60405180910390fd5b60025f81905550565b8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101fb919061080c565b925050819055505f8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b815260040161023e92919061085d565b6020604051808303815f875af115801561025a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027e91906108b9565b9050806102b7576040517f68171d3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60015f81905550565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461031291906108e4565b925050819055505f8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161035793929190610917565b6020604051808303815f875af1158015610373573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061039791906108b9565b9050806103d0576040517f27e85e4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5285b574be509117ddacaa5a2d92a4b3e23f805547f65b5b77de327acd17506e8460405161042d919061094c565b60405180910390a3505050565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461048691906108e4565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016104e892919061085d565b5f604051808303815f87803b1580156104ff575f5ffd5b505af1158015610511573d5f5f3e3d5ffd5b5050505050565b8260035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610564919061080c565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8330876040518463ffffffff1660e01b81526004016105c993929190610917565b6020604051808303815f875af11580156105e5573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061060991906108b9565b905080610642576040517f778c23f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106758261064c565b9050919050565b6106858161066b565b811461068f575f5ffd5b50565b5f813590506106a08161067c565b92915050565b5f819050919050565b6106b8816106a6565b81146106c2575f5ffd5b50565b5f813590506106d3816106af565b92915050565b5f5f604083850312156106ef576106ee610648565b5b5f6106fc85828601610692565b925050602061070d858286016106c5565b9150509250929050565b5f5f5f6060848603121561072e5761072d610648565b5b5f61073b86828701610692565b935050602061074c868287016106c5565b925050604061075d868287016106c5565b9150509250925092565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6107ab601f83610767565b91506107b682610777565b602082019050919050565b5f6020820190508181035f8301526107d88161079f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610816826106a6565b9150610821836106a6565b9250828203905081811115610839576108386107df565b5b92915050565b6108488161066b565b82525050565b610857816106a6565b82525050565b5f6040820190506108705f83018561083f565b61087d602083018461084e565b9392505050565b5f8115159050919050565b61089881610884565b81146108a2575f5ffd5b50565b5f815190506108b38161088f565b92915050565b5f602082840312156108ce576108cd610648565b5b5f6108db848285016108a5565b91505092915050565b5f6108ee826106a6565b91506108f9836106a6565b9250828201905080821115610911576109106107df565b5b92915050565b5f60608201905061092a5f83018661083f565b610937602083018561083f565b610944604083018461084e565b949350505050565b5f60208201905061095f5f83018461084e565b9291505056fea2646970667358221220dbf9c05cb32a7a51af398938fe40f47d394dbb2216b8eece2fd6c180b6401e0464736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB57 CODESIZE SUB DUP1 PUSH2 0xB57 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x14D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH2 0x19D JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11C DUP3 PUSH2 0xF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C DUP2 PUSH2 0x112 JUMP JUMPDEST DUP2 EQ PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x147 DUP2 PUSH2 0x123 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x164 JUMPI PUSH2 0x163 PUSH2 0xEF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x171 DUP7 DUP3 DUP8 ADD PUSH2 0x139 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x182 DUP7 DUP3 DUP8 ADD PUSH2 0x139 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x193 DUP7 DUP3 DUP8 ADD PUSH2 0x139 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x99B PUSH2 0x1BC PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x48F ADD MSTORE PUSH2 0x56E ADD MSTORE PUSH2 0x99B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x28A07025 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x670A14EA EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x9268297F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xA5F352B7 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xB91D1C91 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0xCB PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x77290A1D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110 DUP4 DUP4 CALLER PUSH2 0x1AF JUMP JUMPDEST POP PUSH2 0x119 PUSH2 0x2BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x125 PUSH2 0x162 JUMP JUMPDEST PUSH2 0x12F DUP4 DUP4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x43A JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x152 DUP2 CALLER CALLER PUSH2 0x518 JUMP JUMPDEST PUSH2 0x15D DUP4 DUP4 CALLER PUSH2 0x1AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP3 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x68171D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x373 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27E85E4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5285B574BE509117DDACAA5A2D92A4B3E23F805547F65B5B77DE327ACD17506E DUP5 PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x511 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x778C23F200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x675 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 DUP2 PUSH2 0x66B JUMP JUMPDEST DUP2 EQ PUSH2 0x68F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A0 DUP2 PUSH2 0x67C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B8 DUP2 PUSH2 0x6A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D3 DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EE PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6FC DUP6 DUP3 DUP7 ADD PUSH2 0x692 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x70D DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72E JUMPI PUSH2 0x72D PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73B DUP7 DUP3 DUP8 ADD PUSH2 0x692 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x74C DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x75D DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7AB PUSH1 0x1F DUP4 PUSH2 0x767 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B6 DUP3 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7D8 DUP2 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x816 DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x821 DUP4 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0x66B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x857 DUP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x870 PUSH0 DUP4 ADD DUP6 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x87D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x884 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8B3 DUP2 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP5 DUP3 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F9 DUP4 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH0 DUP4 ADD DUP7 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95F PUSH0 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTDELEGATECALL 0xC0 TLOAD 0xB3 0x2A PUSH27 0x51AF398938FE40F47D394DBB2216B8EECE2FD6C180B6401E046473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "465:4026:9:-:0;;;1825:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;;;;1934:10:9;1908:11;:23;1920:10;1908:23;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1965:11;1954:23;;;;;;;;;;1825:159;;;465:4026;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;465:4026:9:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_burnNEX_1450": {
									"entryPoint": 1304,
									"id": 1450,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_depositeCollateral_1370": {
									"entryPoint": 710,
									"id": 1370,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 701,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 354,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_redeemCollateral_1513": {
									"entryPoint": 431,
									"id": 1513,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@depositeColletralMintNEX_1326": {
									"entryPoint": 285,
									"id": 1326,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getHealthFactor_1479": {
									"entryPoint": 325,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@liquidate_1475": {
									"entryPoint": 193,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintNEX_1471": {
									"entryPoint": 1082,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@redeemCollectral_1390": {
									"entryPoint": 195,
									"id": 1390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@redeemColletralForNex_1415": {
									"entryPoint": 327,
									"id": 1415,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2141,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6015:10",
										"nodeType": "YulBlock",
										"src": "0:6015:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "886:32:10",
													"nodeType": "YulBlock",
													"src": "886:32:10",
													"statements": [
														{
															"nativeSrc": "896:16:10",
															"nodeType": "YulAssignment",
															"src": "896:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:10",
																"nodeType": "YulIdentifier",
																"src": "907:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:10",
														"nodeType": "YulTypedName",
														"src": "868:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:10",
														"nodeType": "YulTypedName",
														"src": "878:7:10",
														"type": ""
													}
												],
												"src": "841:77:10"
											},
											{
												"body": {
													"nativeSrc": "967:79:10",
													"nodeType": "YulBlock",
													"src": "967:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:10",
																"nodeType": "YulBlock",
																"src": "1024:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:10"
																			},
																			"nativeSrc": "1026:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:10"
																		},
																		"nativeSrc": "1026:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:10"
																				},
																				"nativeSrc": "997:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:10"
																		},
																		"nativeSrc": "987:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:10"
																},
																"nativeSrc": "980:43:10",
																"nodeType": "YulFunctionCall",
																"src": "980:43:10"
															},
															"nativeSrc": "977:63:10",
															"nodeType": "YulIf",
															"src": "977:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:10",
														"nodeType": "YulTypedName",
														"src": "960:5:10",
														"type": ""
													}
												],
												"src": "924:122:10"
											},
											{
												"body": {
													"nativeSrc": "1104:87:10",
													"nodeType": "YulBlock",
													"src": "1104:87:10",
													"statements": [
														{
															"nativeSrc": "1114:29:10",
															"nodeType": "YulAssignment",
															"src": "1114:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:10"
																},
																"nativeSrc": "1123:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:10"
																},
																"nativeSrc": "1152:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:10"
															},
															"nativeSrc": "1152:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:10",
														"nodeType": "YulTypedName",
														"src": "1082:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:10",
														"nodeType": "YulTypedName",
														"src": "1090:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:10",
														"nodeType": "YulTypedName",
														"src": "1098:5:10",
														"type": ""
													}
												],
												"src": "1052:139:10"
											},
											{
												"body": {
													"nativeSrc": "1280:391:10",
													"nodeType": "YulBlock",
													"src": "1280:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:10",
																"nodeType": "YulBlock",
																"src": "1326:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:10"
																			},
																			"nativeSrc": "1328:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:10"
																		},
																		"nativeSrc": "1328:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:10"
																		},
																		"nativeSrc": "1297:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:10"
																},
																"nativeSrc": "1293:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:10"
															},
															"nativeSrc": "1290:119:10",
															"nodeType": "YulIf",
															"src": "1290:119:10"
														},
														{
															"nativeSrc": "1419:117:10",
															"nodeType": "YulBlock",
															"src": "1419:117:10",
															"statements": [
																{
																	"nativeSrc": "1434:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:10"
																				},
																				"nativeSrc": "1494:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:10"
																		},
																		"nativeSrc": "1473:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:10",
															"nodeType": "YulBlock",
															"src": "1546:118:10",
															"statements": [
																{
																	"nativeSrc": "1561:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:10"
																				},
																				"nativeSrc": "1622:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:10"
																		},
																		"nativeSrc": "1601:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:10",
														"nodeType": "YulTypedName",
														"src": "1242:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:10",
														"nodeType": "YulTypedName",
														"src": "1253:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:10",
														"nodeType": "YulTypedName",
														"src": "1265:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:10",
														"nodeType": "YulTypedName",
														"src": "1273:6:10",
														"type": ""
													}
												],
												"src": "1197:474:10"
											},
											{
												"body": {
													"nativeSrc": "1777:519:10",
													"nodeType": "YulBlock",
													"src": "1777:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1823:83:10",
																"nodeType": "YulBlock",
																"src": "1823:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1825:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1825:77:10"
																			},
																			"nativeSrc": "1825:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1825:79:10"
																		},
																		"nativeSrc": "1825:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1825:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1798:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1798:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1807:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1807:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1794:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1794:3:10"
																		},
																		"nativeSrc": "1794:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1794:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1819:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1819:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1790:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1790:3:10"
																},
																"nativeSrc": "1790:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1790:32:10"
															},
															"nativeSrc": "1787:119:10",
															"nodeType": "YulIf",
															"src": "1787:119:10"
														},
														{
															"nativeSrc": "1916:117:10",
															"nodeType": "YulBlock",
															"src": "1916:117:10",
															"statements": [
																{
																	"nativeSrc": "1931:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1931:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1945:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1935:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1935:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1960:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1960:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1995:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1995:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2006:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2006:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1991:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1991:3:10"
																				},
																				"nativeSrc": "1991:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1991:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2015:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2015:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1970:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1970:20:10"
																		},
																		"nativeSrc": "1970:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1970:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1960:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1960:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2043:118:10",
															"nodeType": "YulBlock",
															"src": "2043:118:10",
															"statements": [
																{
																	"nativeSrc": "2058:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2058:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2072:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2072:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2062:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2062:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2088:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2088:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2123:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2123:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2134:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2134:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2119:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2119:3:10"
																				},
																				"nativeSrc": "2119:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2119:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2143:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2143:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2098:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2098:20:10"
																		},
																		"nativeSrc": "2098:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2098:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2088:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2088:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2171:118:10",
															"nodeType": "YulBlock",
															"src": "2171:118:10",
															"statements": [
																{
																	"nativeSrc": "2186:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2186:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2200:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2200:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2190:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2190:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2216:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2216:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2251:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2251:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2262:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2262:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2247:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2247:3:10"
																				},
																				"nativeSrc": "2247:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2247:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2271:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2271:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2226:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2226:20:10"
																		},
																		"nativeSrc": "2226:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2226:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2216:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2216:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1677:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1731:9:10",
														"nodeType": "YulTypedName",
														"src": "1731:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1742:7:10",
														"nodeType": "YulTypedName",
														"src": "1742:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1754:6:10",
														"nodeType": "YulTypedName",
														"src": "1754:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1762:6:10",
														"nodeType": "YulTypedName",
														"src": "1762:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1770:6:10",
														"nodeType": "YulTypedName",
														"src": "1770:6:10",
														"type": ""
													}
												],
												"src": "1677:619:10"
											},
											{
												"body": {
													"nativeSrc": "2398:73:10",
													"nodeType": "YulBlock",
													"src": "2398:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2415:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2415:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2420:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2420:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2408:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:10"
																},
																"nativeSrc": "2408:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2408:19:10"
															},
															"nativeSrc": "2408:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2408:19:10"
														},
														{
															"nativeSrc": "2436:29:10",
															"nodeType": "YulAssignment",
															"src": "2436:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2455:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2455:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2460:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2460:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2451:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:10"
																},
																"nativeSrc": "2451:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2451:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2436:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2436:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2302:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2370:3:10",
														"nodeType": "YulTypedName",
														"src": "2370:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2375:6:10",
														"nodeType": "YulTypedName",
														"src": "2375:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2386:11:10",
														"nodeType": "YulTypedName",
														"src": "2386:11:10",
														"type": ""
													}
												],
												"src": "2302:169:10"
											},
											{
												"body": {
													"nativeSrc": "2583:75:10",
													"nodeType": "YulBlock",
													"src": "2583:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2605:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2605:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2613:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2613:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:10"
																		},
																		"nativeSrc": "2601:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "2617:33:10",
																		"nodeType": "YulLiteral",
																		"src": "2617:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2594:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2594:6:10"
																},
																"nativeSrc": "2594:57:10",
																"nodeType": "YulFunctionCall",
																"src": "2594:57:10"
															},
															"nativeSrc": "2594:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "2594:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "2477:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2575:6:10",
														"nodeType": "YulTypedName",
														"src": "2575:6:10",
														"type": ""
													}
												],
												"src": "2477:181:10"
											},
											{
												"body": {
													"nativeSrc": "2810:220:10",
													"nodeType": "YulBlock",
													"src": "2810:220:10",
													"statements": [
														{
															"nativeSrc": "2820:74:10",
															"nodeType": "YulAssignment",
															"src": "2820:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2886:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2891:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2891:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2827:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2827:58:10"
																},
																"nativeSrc": "2827:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2827:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2820:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2992:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2992:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "2903:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2903:88:10"
																},
																"nativeSrc": "2903:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2903:93:10"
															},
															"nativeSrc": "2903:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2903:93:10"
														},
														{
															"nativeSrc": "3005:19:10",
															"nodeType": "YulAssignment",
															"src": "3005:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3016:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3016:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3012:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:10"
																},
																"nativeSrc": "3012:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3012:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3005:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2664:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2798:3:10",
														"nodeType": "YulTypedName",
														"src": "2798:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2806:3:10",
														"nodeType": "YulTypedName",
														"src": "2806:3:10",
														"type": ""
													}
												],
												"src": "2664:366:10"
											},
											{
												"body": {
													"nativeSrc": "3207:248:10",
													"nodeType": "YulBlock",
													"src": "3207:248:10",
													"statements": [
														{
															"nativeSrc": "3217:26:10",
															"nodeType": "YulAssignment",
															"src": "3217:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3229:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3229:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3240:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3240:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3225:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:10"
																},
																"nativeSrc": "3225:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3225:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3217:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3217:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3264:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3264:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3275:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3275:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3260:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:10"
																		},
																		"nativeSrc": "3260:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3283:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3283:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3279:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3279:3:10"
																		},
																		"nativeSrc": "3279:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3279:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3253:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3253:6:10"
																},
																"nativeSrc": "3253:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3253:47:10"
															},
															"nativeSrc": "3253:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3253:47:10"
														},
														{
															"nativeSrc": "3309:139:10",
															"nodeType": "YulAssignment",
															"src": "3309:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3443:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3443:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3317:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3317:124:10"
																},
																"nativeSrc": "3317:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3317:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3309:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3036:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:10",
														"nodeType": "YulTypedName",
														"src": "3187:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3202:4:10",
														"nodeType": "YulTypedName",
														"src": "3202:4:10",
														"type": ""
													}
												],
												"src": "3036:419:10"
											},
											{
												"body": {
													"nativeSrc": "3489:152:10",
													"nodeType": "YulBlock",
													"src": "3489:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3506:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3509:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3509:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3499:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:10"
																},
																"nativeSrc": "3499:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3499:88:10"
															},
															"nativeSrc": "3499:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3499:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3603:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3603:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3606:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3596:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3596:6:10"
																},
																"nativeSrc": "3596:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3596:15:10"
															},
															"nativeSrc": "3596:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3596:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3627:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3627:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3630:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3630:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3620:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3620:6:10"
																},
																"nativeSrc": "3620:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3620:15:10"
															},
															"nativeSrc": "3620:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3620:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3461:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3461:180:10"
											},
											{
												"body": {
													"nativeSrc": "3692:149:10",
													"nodeType": "YulBlock",
													"src": "3692:149:10",
													"statements": [
														{
															"nativeSrc": "3702:25:10",
															"nodeType": "YulAssignment",
															"src": "3702:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3725:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3725:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3707:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3707:17:10"
																},
																"nativeSrc": "3707:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3707:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "3702:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3702:1:10"
																}
															]
														},
														{
															"nativeSrc": "3736:25:10",
															"nodeType": "YulAssignment",
															"src": "3736:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3759:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3759:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3741:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3741:17:10"
																},
																"nativeSrc": "3741:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3741:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "3736:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "3736:1:10"
																}
															]
														},
														{
															"nativeSrc": "3770:17:10",
															"nodeType": "YulAssignment",
															"src": "3770:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3782:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3782:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3785:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3785:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3778:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3778:3:10"
																},
																"nativeSrc": "3778:9:10",
																"nodeType": "YulFunctionCall",
																"src": "3778:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3770:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3770:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3812:22:10",
																"nodeType": "YulBlock",
																"src": "3812:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3814:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3814:16:10"
																			},
																			"nativeSrc": "3814:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3814:18:10"
																		},
																		"nativeSrc": "3814:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3814:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3803:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3803:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3809:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "3809:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3800:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3800:2:10"
																},
																"nativeSrc": "3800:11:10",
																"nodeType": "YulFunctionCall",
																"src": "3800:11:10"
															},
															"nativeSrc": "3797:37:10",
															"nodeType": "YulIf",
															"src": "3797:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3647:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3678:1:10",
														"nodeType": "YulTypedName",
														"src": "3678:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3681:1:10",
														"nodeType": "YulTypedName",
														"src": "3681:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3687:4:10",
														"nodeType": "YulTypedName",
														"src": "3687:4:10",
														"type": ""
													}
												],
												"src": "3647:194:10"
											},
											{
												"body": {
													"nativeSrc": "3912:53:10",
													"nodeType": "YulBlock",
													"src": "3912:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3929:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3929:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3952:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3952:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3934:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3934:17:10"
																		},
																		"nativeSrc": "3934:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3934:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3922:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:10"
																},
																"nativeSrc": "3922:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3922:37:10"
															},
															"nativeSrc": "3922:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3922:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3847:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3900:5:10",
														"nodeType": "YulTypedName",
														"src": "3900:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3907:3:10",
														"nodeType": "YulTypedName",
														"src": "3907:3:10",
														"type": ""
													}
												],
												"src": "3847:118:10"
											},
											{
												"body": {
													"nativeSrc": "4036:53:10",
													"nodeType": "YulBlock",
													"src": "4036:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4053:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4076:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4076:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4058:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4058:17:10"
																		},
																		"nativeSrc": "4058:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4058:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:10"
																},
																"nativeSrc": "4046:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4046:37:10"
															},
															"nativeSrc": "4046:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4046:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3971:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4024:5:10",
														"nodeType": "YulTypedName",
														"src": "4024:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4031:3:10",
														"nodeType": "YulTypedName",
														"src": "4031:3:10",
														"type": ""
													}
												],
												"src": "3971:118:10"
											},
											{
												"body": {
													"nativeSrc": "4221:206:10",
													"nodeType": "YulBlock",
													"src": "4221:206:10",
													"statements": [
														{
															"nativeSrc": "4231:26:10",
															"nodeType": "YulAssignment",
															"src": "4231:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4243:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4243:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4254:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4254:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4239:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4239:3:10"
																},
																"nativeSrc": "4239:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4239:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4231:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4231:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4311:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4311:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4324:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4324:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4335:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4335:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4320:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:10"
																		},
																		"nativeSrc": "4320:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4267:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4267:43:10"
																},
																"nativeSrc": "4267:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4267:71:10"
															},
															"nativeSrc": "4267:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4267:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4392:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4405:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4405:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4416:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4416:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4401:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:10"
																		},
																		"nativeSrc": "4401:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4401:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4348:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4348:43:10"
																},
																"nativeSrc": "4348:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4348:72:10"
															},
															"nativeSrc": "4348:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4348:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4095:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4185:9:10",
														"nodeType": "YulTypedName",
														"src": "4185:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4197:6:10",
														"nodeType": "YulTypedName",
														"src": "4197:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4205:6:10",
														"nodeType": "YulTypedName",
														"src": "4205:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4216:4:10",
														"nodeType": "YulTypedName",
														"src": "4216:4:10",
														"type": ""
													}
												],
												"src": "4095:332:10"
											},
											{
												"body": {
													"nativeSrc": "4475:48:10",
													"nodeType": "YulBlock",
													"src": "4475:48:10",
													"statements": [
														{
															"nativeSrc": "4485:32:10",
															"nodeType": "YulAssignment",
															"src": "4485:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4510:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4510:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4503:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4503:6:10"
																		},
																		"nativeSrc": "4503:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4496:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4496:6:10"
																},
																"nativeSrc": "4496:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4496:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4485:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4485:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4433:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:10",
														"nodeType": "YulTypedName",
														"src": "4457:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4467:7:10",
														"nodeType": "YulTypedName",
														"src": "4467:7:10",
														"type": ""
													}
												],
												"src": "4433:90:10"
											},
											{
												"body": {
													"nativeSrc": "4569:76:10",
													"nodeType": "YulBlock",
													"src": "4569:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4623:16:10",
																"nodeType": "YulBlock",
																"src": "4623:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4632:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4632:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4635:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4635:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4625:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4625:6:10"
																			},
																			"nativeSrc": "4625:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4625:12:10"
																		},
																		"nativeSrc": "4625:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4625:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4592:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4592:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4614:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4614:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4599:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "4599:14:10"
																				},
																				"nativeSrc": "4599:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4599:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4589:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4589:2:10"
																		},
																		"nativeSrc": "4589:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4589:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4582:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4582:6:10"
																},
																"nativeSrc": "4582:40:10",
																"nodeType": "YulFunctionCall",
																"src": "4582:40:10"
															},
															"nativeSrc": "4579:60:10",
															"nodeType": "YulIf",
															"src": "4579:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4529:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4562:5:10",
														"nodeType": "YulTypedName",
														"src": "4562:5:10",
														"type": ""
													}
												],
												"src": "4529:116:10"
											},
											{
												"body": {
													"nativeSrc": "4711:77:10",
													"nodeType": "YulBlock",
													"src": "4711:77:10",
													"statements": [
														{
															"nativeSrc": "4721:22:10",
															"nodeType": "YulAssignment",
															"src": "4721:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4736:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4736:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4730:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4730:5:10"
																},
																"nativeSrc": "4730:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4730:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4721:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4721:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4776:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4776:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4752:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "4752:23:10"
																},
																"nativeSrc": "4752:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4752:30:10"
															},
															"nativeSrc": "4752:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4752:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "4651:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4689:6:10",
														"nodeType": "YulTypedName",
														"src": "4689:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4697:3:10",
														"nodeType": "YulTypedName",
														"src": "4697:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4705:5:10",
														"nodeType": "YulTypedName",
														"src": "4705:5:10",
														"type": ""
													}
												],
												"src": "4651:137:10"
											},
											{
												"body": {
													"nativeSrc": "4868:271:10",
													"nodeType": "YulBlock",
													"src": "4868:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4914:83:10",
																"nodeType": "YulBlock",
																"src": "4914:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4916:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4916:77:10"
																			},
																			"nativeSrc": "4916:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4916:79:10"
																		},
																		"nativeSrc": "4916:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4889:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4889:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4898:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4898:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4885:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4885:3:10"
																		},
																		"nativeSrc": "4885:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4885:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4910:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4910:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4881:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4881:3:10"
																},
																"nativeSrc": "4881:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4881:32:10"
															},
															"nativeSrc": "4878:119:10",
															"nodeType": "YulIf",
															"src": "4878:119:10"
														},
														{
															"nativeSrc": "5007:125:10",
															"nodeType": "YulBlock",
															"src": "5007:125:10",
															"statements": [
																{
																	"nativeSrc": "5022:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5022:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5036:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5036:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5026:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5026:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5051:71:10",
																	"nodeType": "YulAssignment",
																	"src": "5051:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5094:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5094:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5105:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5105:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5090:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5090:3:10"
																				},
																				"nativeSrc": "5090:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5090:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5114:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5114:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "5061:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "5061:28:10"
																		},
																		"nativeSrc": "5061:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5061:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5051:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5051:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4794:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4838:9:10",
														"nodeType": "YulTypedName",
														"src": "4838:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4849:7:10",
														"nodeType": "YulTypedName",
														"src": "4849:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4861:6:10",
														"nodeType": "YulTypedName",
														"src": "4861:6:10",
														"type": ""
													}
												],
												"src": "4794:345:10"
											},
											{
												"body": {
													"nativeSrc": "5189:147:10",
													"nodeType": "YulBlock",
													"src": "5189:147:10",
													"statements": [
														{
															"nativeSrc": "5199:25:10",
															"nodeType": "YulAssignment",
															"src": "5199:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5222:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5222:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5204:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5204:17:10"
																},
																"nativeSrc": "5204:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5204:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5199:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5199:1:10"
																}
															]
														},
														{
															"nativeSrc": "5233:25:10",
															"nodeType": "YulAssignment",
															"src": "5233:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5256:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5256:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5238:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5238:17:10"
																},
																"nativeSrc": "5238:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5238:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5233:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5233:1:10"
																}
															]
														},
														{
															"nativeSrc": "5267:16:10",
															"nodeType": "YulAssignment",
															"src": "5267:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5278:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5278:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5281:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5281:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5274:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:10"
																},
																"nativeSrc": "5274:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5274:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5267:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5307:22:10",
																"nodeType": "YulBlock",
																"src": "5307:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5309:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5309:16:10"
																			},
																			"nativeSrc": "5309:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5309:18:10"
																		},
																		"nativeSrc": "5309:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5309:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5299:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5299:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5302:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5302:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5296:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5296:2:10"
																},
																"nativeSrc": "5296:10:10",
																"nodeType": "YulFunctionCall",
																"src": "5296:10:10"
															},
															"nativeSrc": "5293:36:10",
															"nodeType": "YulIf",
															"src": "5293:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5145:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5176:1:10",
														"nodeType": "YulTypedName",
														"src": "5176:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5179:1:10",
														"nodeType": "YulTypedName",
														"src": "5179:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5185:3:10",
														"nodeType": "YulTypedName",
														"src": "5185:3:10",
														"type": ""
													}
												],
												"src": "5145:191:10"
											},
											{
												"body": {
													"nativeSrc": "5496:288:10",
													"nodeType": "YulBlock",
													"src": "5496:288:10",
													"statements": [
														{
															"nativeSrc": "5506:26:10",
															"nodeType": "YulAssignment",
															"src": "5506:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5518:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5518:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5529:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5529:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5514:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5514:3:10"
																},
																"nativeSrc": "5514:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5514:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5506:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5506:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5586:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5586:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5599:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5610:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5610:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5595:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:10"
																		},
																		"nativeSrc": "5595:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5595:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5542:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5542:43:10"
																},
																"nativeSrc": "5542:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5542:71:10"
															},
															"nativeSrc": "5542:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5542:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5667:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5667:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5680:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5680:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5691:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5691:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5676:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5676:3:10"
																		},
																		"nativeSrc": "5676:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5676:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5623:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5623:43:10"
																},
																"nativeSrc": "5623:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5623:72:10"
															},
															"nativeSrc": "5623:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5623:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5749:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5749:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5762:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5762:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5773:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5773:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5758:3:10"
																		},
																		"nativeSrc": "5758:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5758:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5705:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5705:43:10"
																},
																"nativeSrc": "5705:72:10",
																"nodeType": "YulFunctionCall",
																"src": "5705:72:10"
															},
															"nativeSrc": "5705:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "5705:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5342:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5452:9:10",
														"nodeType": "YulTypedName",
														"src": "5452:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5464:6:10",
														"nodeType": "YulTypedName",
														"src": "5464:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5472:6:10",
														"nodeType": "YulTypedName",
														"src": "5472:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5480:6:10",
														"nodeType": "YulTypedName",
														"src": "5480:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5491:4:10",
														"nodeType": "YulTypedName",
														"src": "5491:4:10",
														"type": ""
													}
												],
												"src": "5342:442:10"
											},
											{
												"body": {
													"nativeSrc": "5888:124:10",
													"nodeType": "YulBlock",
													"src": "5888:124:10",
													"statements": [
														{
															"nativeSrc": "5898:26:10",
															"nodeType": "YulAssignment",
															"src": "5898:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5910:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5910:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5921:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5921:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:10"
																},
																"nativeSrc": "5906:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5906:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5898:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5898:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5978:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5978:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5991:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5991:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6002:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6002:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5987:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5987:3:10"
																		},
																		"nativeSrc": "5987:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5987:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5934:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5934:43:10"
																},
																"nativeSrc": "5934:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5934:71:10"
															},
															"nativeSrc": "5934:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5934:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5790:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5860:9:10",
														"nodeType": "YulTypedName",
														"src": "5860:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5872:6:10",
														"nodeType": "YulTypedName",
														"src": "5872:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5883:4:10",
														"nodeType": "YulTypedName",
														"src": "5883:4:10",
														"type": ""
													}
												],
												"src": "5790:222:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1230": [
									{
										"length": 32,
										"start": 1167
									},
									{
										"length": 32,
										"start": 1390
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c806328a0702514610059578063670a14ea146100635780639268297f1461007f578063a5f352b71461009b578063b91d1c91146100a5575b5f5ffd5b6100616100c1565b005b61007d600480360381019061007891906106d9565b6100c3565b005b61009960048036038101906100949190610717565b61011d565b005b6100a3610145565b005b6100bf60048036038101906100ba9190610717565b610147565b005b565b6100cb610162565b805f8103610105576040517f77290a1d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101108383336101af565b506101196102bd565b5050565b610125610162565b61012f83836102c6565b6101388161043a565b6101406102bd565b505050565b565b610152813333610518565b61015d8383336101af565b505050565b60025f54036101a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019d906107c1565b60405180910390fd5b60025f81905550565b8160025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546101fb919061080c565b925050819055505f8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83856040518363ffffffff1660e01b815260040161023e92919061085d565b6020604051808303815f875af115801561025a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027e91906108b9565b9050806102b7576040517f68171d3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60015f81905550565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461031291906108e4565b925050819055505f8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161035793929190610917565b6020604051808303815f875af1158015610373573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061039791906108b9565b9050806103d0576040517f27e85e4c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f5285b574be509117ddacaa5a2d92a4b3e23f805547f65b5b77de327acd17506e8460405161042d919061094c565b60405180910390a3505050565b8060035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461048691906108e4565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016104e892919061085d565b5f604051808303815f87803b1580156104ff575f5ffd5b505af1158015610511573d5f5f3e3d5ffd5b5050505050565b8260035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610564919061080c565b925050819055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd8330876040518463ffffffff1660e01b81526004016105c993929190610917565b6020604051808303815f875af11580156105e5573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061060991906108b9565b905080610642576040517f778c23f200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106758261064c565b9050919050565b6106858161066b565b811461068f575f5ffd5b50565b5f813590506106a08161067c565b92915050565b5f819050919050565b6106b8816106a6565b81146106c2575f5ffd5b50565b5f813590506106d3816106af565b92915050565b5f5f604083850312156106ef576106ee610648565b5b5f6106fc85828601610692565b925050602061070d858286016106c5565b9150509250929050565b5f5f5f6060848603121561072e5761072d610648565b5b5f61073b86828701610692565b935050602061074c868287016106c5565b925050604061075d868287016106c5565b9150509250925092565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6107ab601f83610767565b91506107b682610777565b602082019050919050565b5f6020820190508181035f8301526107d88161079f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610816826106a6565b9150610821836106a6565b9250828203905081811115610839576108386107df565b5b92915050565b6108488161066b565b82525050565b610857816106a6565b82525050565b5f6040820190506108705f83018561083f565b61087d602083018461084e565b9392505050565b5f8115159050919050565b61089881610884565b81146108a2575f5ffd5b50565b5f815190506108b38161088f565b92915050565b5f602082840312156108ce576108cd610648565b5b5f6108db848285016108a5565b91505092915050565b5f6108ee826106a6565b91506108f9836106a6565b9250828201905080821115610911576109106107df565b5b92915050565b5f60608201905061092a5f83018661083f565b610937602083018561083f565b610944604083018461084e565b949350505050565b5f60208201905061095f5f83018461084e565b9291505056fea2646970667358221220dbf9c05cb32a7a51af398938fe40f47d394dbb2216b8eece2fd6c180b6401e0464736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x28A07025 EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x670A14EA EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x9268297F EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xA5F352B7 EQ PUSH2 0x9B JUMPI DUP1 PUSH4 0xB91D1C91 EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x61 PUSH2 0xC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x11D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA3 PUSH2 0x145 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBA SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH2 0x147 JUMP JUMPDEST STOP JUMPDEST JUMP JUMPDEST PUSH2 0xCB PUSH2 0x162 JUMP JUMPDEST DUP1 PUSH0 DUP2 SUB PUSH2 0x105 JUMPI PUSH1 0x40 MLOAD PUSH32 0x77290A1D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x110 DUP4 DUP4 CALLER PUSH2 0x1AF JUMP JUMPDEST POP PUSH2 0x119 PUSH2 0x2BD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x125 PUSH2 0x162 JUMP JUMPDEST PUSH2 0x12F DUP4 DUP4 PUSH2 0x2C6 JUMP JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x43A JUMP JUMPDEST PUSH2 0x140 PUSH2 0x2BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x152 DUP2 CALLER CALLER PUSH2 0x518 JUMP JUMPDEST PUSH2 0x15D DUP4 DUP4 CALLER PUSH2 0x1AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP2 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP3 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x68171D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x373 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x27E85E4C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5285B574BE509117DDACAA5A2D92A4B3E23F805547F65B5B77DE327ACD17506E DUP5 PUSH1 0x40 MLOAD PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x94C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP3 SWAP2 SWAP1 PUSH2 0x85D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x511 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x80C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP4 ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x917 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5E5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x609 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x642 JUMPI PUSH1 0x40 MLOAD PUSH32 0x778C23F200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x675 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x685 DUP2 PUSH2 0x66B JUMP JUMPDEST DUP2 EQ PUSH2 0x68F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A0 DUP2 PUSH2 0x67C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B8 DUP2 PUSH2 0x6A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x6C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6D3 DUP2 PUSH2 0x6AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EE PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6FC DUP6 DUP3 DUP7 ADD PUSH2 0x692 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x70D DUP6 DUP3 DUP7 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72E JUMPI PUSH2 0x72D PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x73B DUP7 DUP3 DUP8 ADD PUSH2 0x692 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x74C DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x75D DUP7 DUP3 DUP8 ADD PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x7AB PUSH1 0x1F DUP4 PUSH2 0x767 JUMP JUMPDEST SWAP2 POP PUSH2 0x7B6 DUP3 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7D8 DUP2 PUSH2 0x79F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x816 DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x821 DUP4 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x839 JUMPI PUSH2 0x838 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x848 DUP2 PUSH2 0x66B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x857 DUP2 PUSH2 0x6A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x870 PUSH0 DUP4 ADD DUP6 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x87D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x898 DUP2 PUSH2 0x884 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x8B3 DUP2 PUSH2 0x88F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CD PUSH2 0x648 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DB DUP5 DUP3 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8EE DUP3 PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F9 DUP4 PUSH2 0x6A6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x911 JUMPI PUSH2 0x910 PUSH2 0x7DF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH0 DUP4 ADD DUP7 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x83F JUMP JUMPDEST PUSH2 0x944 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95F PUSH0 DUP4 ADD DUP5 PUSH2 0x84E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB EXTDELEGATECALL 0xC0 TLOAD 0xB3 0x2A PUSH27 0x51AF398938FE40F47D394DBB2216B8EECE2FD6C180B6401E046473 PUSH16 0x6C634300081E00330000000000000000 ",
							"sourceMap": "465:4026:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4079:32;;;:::i;:::-;;2921:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2128:283;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4117:38;;;:::i;:::-;;3212:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4079:32;:::o;2921:285::-;2261:21:2;:19;:21::i;:::-;3084:16:9::1;1554:1;1544:6;:11:::0;1540:78:::1;;1578:29;;;;;;;;;;;;;;1540:78;3124:71:::2;3142:22;3166:16;3184:10;3124:17;:71::i;:::-;2292:1:2::1;2303:20:::0;:18;:20::i;:::-;2921:285:9;;:::o;2128:283::-;2261:21:2;:19;:21::i;:::-;2306:60:9::1;2326:22;2349:16;2306:19;:60::i;:::-;2380:24;2388:15;2380:7;:24::i;:::-;2303:20:2::0;:18;:20::i;:::-;2128:283:9;;;:::o;4117:38::-;:::o;3212:287::-;3372:41;3381:9;3391:10;3402;3372:8;:41::i;:::-;3423:69;3441:22;3464:16;3481:10;3423:17;:69::i;:::-;3212:287;;;:::o;2336::2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;4161:328:9:-;4305:16;4269:20;:32;4290:10;4269:32;;;;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;;;;;;;;4332:12;4354:17;4347:34;;;4382:2;4386:16;4347:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4332:71;;4419:7;4414:69;;4448:24;;;;;;;;;;;;;;4414:69;4259:230;4161:328;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2417:498:9:-;2663:7;2627:20;:32;2648:10;2627:32;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;2680:12;2701:10;2694:31;;;2726:10;2746:4;2753:7;2694:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2680:81;;2776:7;2771:72;;2806:26;;;;;;;;;;;;;;2771:72;2887:10;2857:50;;2875:10;2857:50;;;2899:7;2857:50;;;;;;:::i;:::-;;;;;;;;2491:424;2417:498;;:::o;3816:257::-;3905:16;3878:11;:23;3890:10;3878:23;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;4026:4;:9;;;4036:10;4048:16;4026:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3816:257;:::o;3508:302::-;3629:15;3604:11;:21;3616:8;3604:21;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;3655:12;3670:4;:17;;;3688:7;3704:4;3711:15;3670:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3655:72;;3742:7;3738:66;;3771:22;;;;;;;;;;;;;;3738:66;3594:216;3508:302;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:619::-;1754:6;1762;1770;1819:2;1807:9;1798:7;1794:23;1790:32;1787:119;;;1825:79;;:::i;:::-;1787:119;1945:1;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1916:117;2072:2;2098:53;2143:7;2134:6;2123:9;2119:22;2098:53;:::i;:::-;2088:63;;2043:118;2200:2;2226:53;2271:7;2262:6;2251:9;2247:22;2226:53;:::i;:::-;2216:63;;2171:118;1677:619;;;;;:::o;2302:169::-;2386:11;2420:6;2415:3;2408:19;2460:4;2455:3;2451:14;2436:29;;2302:169;;;;:::o;2477:181::-;2617:33;2613:1;2605:6;2601:14;2594:57;2477:181;:::o;2664:366::-;2806:3;2827:67;2891:2;2886:3;2827:67;:::i;:::-;2820:74;;2903:93;2992:3;2903:93;:::i;:::-;3021:2;3016:3;3012:12;3005:19;;2664:366;;;:::o;3036:419::-;3202:4;3240:2;3229:9;3225:18;3217:26;;3289:9;3283:4;3279:20;3275:1;3264:9;3260:17;3253:47;3317:131;3443:4;3317:131;:::i;:::-;3309:139;;3036:419;;;:::o;3461:180::-;3509:77;3506:1;3499:88;3606:4;3603:1;3596:15;3630:4;3627:1;3620:15;3647:194;3687:4;3707:20;3725:1;3707:20;:::i;:::-;3702:25;;3741:20;3759:1;3741:20;:::i;:::-;3736:25;;3785:1;3782;3778:9;3770:17;;3809:1;3803:4;3800:11;3797:37;;;3814:18;;:::i;:::-;3797:37;3647:194;;;;:::o;3847:118::-;3934:24;3952:5;3934:24;:::i;:::-;3929:3;3922:37;3847:118;;:::o;3971:::-;4058:24;4076:5;4058:24;:::i;:::-;4053:3;4046:37;3971:118;;:::o;4095:332::-;4216:4;4254:2;4243:9;4239:18;4231:26;;4267:71;4335:1;4324:9;4320:17;4311:6;4267:71;:::i;:::-;4348:72;4416:2;4405:9;4401:18;4392:6;4348:72;:::i;:::-;4095:332;;;;;:::o;4433:90::-;4467:7;4510:5;4503:13;4496:21;4485:32;;4433:90;;;:::o;4529:116::-;4599:21;4614:5;4599:21;:::i;:::-;4592:5;4589:32;4579:60;;4635:1;4632;4625:12;4579:60;4529:116;:::o;4651:137::-;4705:5;4736:6;4730:13;4721:22;;4752:30;4776:5;4752:30;:::i;:::-;4651:137;;;;:::o;4794:345::-;4861:6;4910:2;4898:9;4889:7;4885:23;4881:32;4878:119;;;4916:79;;:::i;:::-;4878:119;5036:1;5061:61;5114:7;5105:6;5094:9;5090:22;5061:61;:::i;:::-;5051:71;;5007:125;4794:345;;;;:::o;5145:191::-;5185:3;5204:20;5222:1;5204:20;:::i;:::-;5199:25;;5238:20;5256:1;5238:20;:::i;:::-;5233:25;;5281:1;5278;5274:9;5267:16;;5302:3;5299:1;5296:10;5293:36;;;5309:18;;:::i;:::-;5293:36;5145:191;;;;:::o;5342:442::-;5491:4;5529:2;5518:9;5514:18;5506:26;;5542:71;5610:1;5599:9;5595:17;5586:6;5542:71;:::i;:::-;5623:72;5691:2;5680:9;5676:18;5667:6;5623:72;:::i;:::-;5705;5773:2;5762:9;5758:18;5749:6;5705:72;:::i;:::-;5342:442;;;;;;:::o;5790:222::-;5883:4;5921:2;5910:9;5906:18;5898:26;;5934:71;6002:1;5991:9;5987:17;5978:6;5934:71;:::i;:::-;5790:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "491800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"depositeColletralMintNEX(address,uint256,uint256)": "infinite",
								"getHealthFactor()": "187",
								"liquidate()": "121",
								"redeemCollectral(address,uint256)": "infinite",
								"redeemColletralForNex(address,uint256,uint256)": "infinite"
							},
							"internal": {
								"_burnNEX(uint256,address,address)": "infinite",
								"_depositeCollateral(address,uint256)": "infinite",
								"_redeemCollateral(address,uint256,address)": "infinite",
								"mintNEX(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1825,
									"end": 1984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1934,
									"end": 1944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1919,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1920,
									"end": 1930,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1931,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1908,
									"end": 1944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1976,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1954,
									"end": 1977,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1825,
									"end": 1984,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "1230"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 465,
									"end": 4491,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbf9c05cb32a7a51af398938fe40f47d394dbb2216b8eece2fd6c180b6401e0464736f6c634300081e0033",
									".code": [
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "28A07025"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "670A14EA"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "9268297F"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "A5F352B7"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "B91D1C91"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 4491,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4079,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2921,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2921,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2128,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2128,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4117,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3212,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3212,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4079,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4079,
											"end": 4111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3084,
											"end": 3100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1555,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1540,
											"end": 1618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "77290A1D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1578,
											"end": 1607,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 1540,
											"end": 1618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3195,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3142,
											"end": 3164,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3182,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3184,
											"end": 3194,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3141,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3124,
											"end": 3195,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3124,
											"end": 3195,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3124,
											"end": 3195,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2921,
											"end": 3206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2306,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2326,
											"end": 2348,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2349,
											"end": 2365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2306,
											"end": 2366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2306,
											"end": 2366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2306,
											"end": 2366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2388,
											"end": 2403,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2380,
											"end": 2404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2128,
											"end": 2411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 4117,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3381,
											"end": 3390,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3391,
											"end": 3401,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3402,
											"end": 3412,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3372,
											"end": 3413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3413,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3372,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3441,
											"end": 3463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3480,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3491,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3423,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3423,
											"end": 3492,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 3423,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4489,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 4161,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4305,
											"end": 4321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4289,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4300,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 4269,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4269,
											"end": 4321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4344,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4381,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4381,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 4382,
											"end": 4384,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4402,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4347,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4347,
											"end": 4403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4347,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4403,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4332,
											"end": 4403,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4419,
											"end": 4426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4414,
											"end": 4483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH",
											"source": 9,
											"value": "68171D3300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4483,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4414,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4489,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4161,
											"end": 4489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2915,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2417,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2663,
											"end": 2670,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2647,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2658,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2627,
											"end": 2670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2627,
											"end": 2670,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2725,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2725,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2725,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 2726,
											"end": 2736,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 2694,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2694,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2694,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2761,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2771,
											"end": 2843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "27E85E4C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2832,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2771,
											"end": 2843,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2771,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2875,
											"end": 2885,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "5285B574BE509117DDACAA5A2D92A4B3E23F805547F65B5B77DE327ACD17506E"
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 2857,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2907,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 2491,
											"end": 2915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2417,
											"end": 2915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 4073,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3905,
											"end": 3921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3889,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3900,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3901,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3878,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 3921,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4030,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1230"
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4035,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 4036,
											"end": 4046,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4026,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4026,
											"end": 4065,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 4073,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3810,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 3508,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3629,
											"end": 3644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3615,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3624,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3625,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3604,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3604,
											"end": 3644,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1230"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3687,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 3688,
											"end": 3695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3704,
											"end": 3708,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3726,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 3670,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 3670,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3670,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3655,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3738,
											"end": 3804,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "778C23F200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3738,
											"end": 3804,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3738,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3594,
											"end": 3810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3810,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1821,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1807,
											"end": 1816,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 1805,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1790,
											"end": 1822,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1906,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1787,
											"end": 1906,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1825,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1825,
											"end": 1904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1825,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1787,
											"end": 1906,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1787,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2015,
											"end": 2022,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1995,
											"end": 2004,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1991,
											"end": 2013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1970,
											"end": 2023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1970,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2023,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 2033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2143,
											"end": 2150,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2098,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2098,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2043,
											"end": 2161,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2226,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2271,
											"end": 2278,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2260,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2226,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2226,
											"end": 2279,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2226,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2171,
											"end": 2289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 2296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2397,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2415,
											"end": 2418,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2427,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2436,
											"end": 2465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2302,
											"end": 2471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2658,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2477,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2617,
											"end": 2650,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2651,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2477,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2809,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2827,
											"end": 2894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2992,
											"end": 2995,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2903,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3012,
											"end": 3024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3455,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3036,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3242,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3217,
											"end": 3243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3283,
											"end": 3287,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3299,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3275,
											"end": 3276,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3260,
											"end": 3277,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3253,
											"end": 3300,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3443,
											"end": 3447,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3317,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3448,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3317,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3309,
											"end": 3448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3455,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3455,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3036,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3641,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3461,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3586,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3506,
											"end": 3507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3587,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3606,
											"end": 3610,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3603,
											"end": 3604,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3596,
											"end": 3611,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3634,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3627,
											"end": 3628,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3635,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 3707,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3707,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3702,
											"end": 3727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 3741,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3761,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3741,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3736,
											"end": 3761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3778,
											"end": 3787,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3770,
											"end": 3787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3811,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3814,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3814,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3797,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3965,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3847,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3952,
											"end": 3957,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3934,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3934,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3929,
											"end": 3932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3959,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3847,
											"end": 3965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4089,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3971,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4076,
											"end": 4081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4058,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3971,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4239,
											"end": 4257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4231,
											"end": 4257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4335,
											"end": 4336,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4324,
											"end": 4333,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4267,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 4267,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 4348,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4420,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4348,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4095,
											"end": 4427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4523,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4433,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4467,
											"end": 4474,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4517,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4485,
											"end": 4517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4433,
											"end": 4523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4645,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4529,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4599,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4620,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 4599,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4592,
											"end": 4597,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4621,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4633,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4637,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 4579,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4529,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4730,
											"end": 4743,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4721,
											"end": 4743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4776,
											"end": 4781,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 4752,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 4752,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4912,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4898,
											"end": 4907,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4885,
											"end": 4908,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4881,
											"end": 4913,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4997,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4878,
											"end": 4997,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4916,
											"end": 4995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 4916,
											"end": 4995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4878,
											"end": 4997,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 4878,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5036,
											"end": 5037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5114,
											"end": 5121,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5105,
											"end": 5111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5094,
											"end": 5103,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 5061,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5061,
											"end": 5122,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 5061,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4794,
											"end": 5139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5224,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5204,
											"end": 5224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5224,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 5204,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5256,
											"end": 5257,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 5238,
											"end": 5258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5238,
											"end": 5258,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 5238,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5258,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5258,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5274,
											"end": 5283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5267,
											"end": 5283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5305,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5296,
											"end": 5306,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5329,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5293,
											"end": 5329,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 5309,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 5309,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5293,
											"end": 5329,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 5293,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5145,
											"end": 5336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5518,
											"end": 5527,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5514,
											"end": 5532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5595,
											"end": 5612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5586,
											"end": 5592,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5542,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5542,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5691,
											"end": 5693,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5680,
											"end": 5689,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5676,
											"end": 5694,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5667,
											"end": 5673,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5623,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5623,
											"end": 5695,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 5623,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5773,
											"end": 5775,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5762,
											"end": 5771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5758,
											"end": 5776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5749,
											"end": 5755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5705,
											"end": 5777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5777,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 5705,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5342,
											"end": 5784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5887,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5919,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5906,
											"end": 5924,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 6002,
											"end": 6003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5991,
											"end": 6000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5987,
											"end": 6004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5978,
											"end": 5984,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5934,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5934,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5790,
											"end": 6012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"src/NEX.sol",
								"src/NEXEngine.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"depositeColletralMintNEX(address,uint256,uint256)": "9268297f",
							"getHealthFactor()": "a5f352b7",
							"liquidate()": "28a07025",
							"redeemCollectral(address,uint256)": "670a14ea",
							"redeemColletralForNex(address,uint256,uint256)": "b91d1c91"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_colletral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stableCoin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NEXEngine_ColletralNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEXEngine_DepositeFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEXEngine_NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEXEngine_RedeemFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NEXEngine_burnFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"colletral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositeColletral\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenCollateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountNexToMint\",\"type\":\"uint256\"}],\"name\":\"depositeColletralMintNEX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHealthFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenCollateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountCollateral\",\"type\":\"uint256\"}],\"name\":\"redeemCollectral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenCollateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nexAmount\",\"type\":\"uint256\"}],\"name\":\"redeemColletralForNex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\": 0xminer11 NEX is a decentralized stable coin that is pegged to the US Dollar. This contract will handle the minting and burning of the NEX token.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"NEX : Decentralized Stable Coin\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/NEXEngine.sol\":\"NEXEngine\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/NEX.sol\":{\"keccak256\":\"0x65e9cc84b0b9eff502e4a97d48536a07d2a8016240315774a70d744b19881161\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://71f5721a5151a28e1fa8d47497989dea8239da05e86ddef746d95b7abc80145b\",\"dweb:/ipfs/QmaCsmYPUg4iB1ZHXLRYTP3YDpPDVuyGym1XVC7GHiybXm\"]},\"src/NEXEngine.sol\":{\"keccak256\":\"0xc52936487cf0e074c0345af1e56016f69b01e7c19451e837d1d1f1394bd5147a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5306ff9b92ffdc54616d52a8e0414b3491f91c4a5533f336226ed7977c88e8f3\",\"dweb:/ipfs/QmYnDtMGc3Pin7epALXYs4MkDBdAgRWX4fFN7MgEeEf2kL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "src/NEXEngine.sol:NEXEngine",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1234,
								"contract": "src/NEXEngine.sol:NEXEngine",
								"label": "_priceFeeds",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 1238,
								"contract": "src/NEXEngine.sol:NEXEngine",
								"label": "_collateralDeposited",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1242,
								"contract": "src/NEXEngine.sol:NEXEngine",
								"label": "s_NexMinted",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "NEX : Decentralized Stable Coin",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1045,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1044
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1015,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1014,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 1045,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 864,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1001
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 864,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 864,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1013
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 864,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 864,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 864,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 864,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 864,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 864,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 864,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 864,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 864,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 864,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 864,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 864,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 864,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 864,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9768:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1044
						],
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						]
					},
					"id": 989,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 865,
							"src": "150:35:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 864,
										"src": "158:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 948,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 989,
							"sourceUnit": 1045,
							"src": "186:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 947,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "194:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 950,
										"name": "Context",
										"nameLocations": [
											"483:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1044,
										"src": "483:7:5"
									},
									"id": 951,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:5"
								},
								{
									"baseName": {
										"id": 952,
										"name": "ERC20",
										"nameLocations": [
											"492:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "492:5:5"
									},
									"id": 953,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:5"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 949,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:5",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 988,
							"linearizedBaseContracts": [
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "662:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 960,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "678:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "672:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "672:26:5"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:5",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "632:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:5"
									},
									"scope": 988,
									"src": "618:87:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 986,
										"nodeType": "Block",
										"src": "1086:93:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 975,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1112:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 976,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1135:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1096:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "1157:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 983,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "1166:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 981,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1151:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:5"
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1039:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 987,
												"src": "1056:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:5"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:5"
									},
									"scope": 988,
									"src": "1021:158:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 989,
							"src": "448:733:5",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "124:1058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 990,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 992,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 943,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 991,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 994,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:6"
									},
									"id": 995,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 993,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1014,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1004,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1014,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1013,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1014,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1044
						]
					},
					"id": 1045,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1044,
							"linearizedBaseContracts": [
								1044
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1022,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1021,
												"id": 1024,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1044,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1031,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1033,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1028,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1044,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1039,
												"id": 1041,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1044,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1045,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"src/NEX.sol": {
				"ast": {
					"absolutePath": "src/NEX.sol",
					"exportedSymbols": {
						"ERC20": [
							864
						],
						"ERC20Burnable": [
							988
						],
						"NEX": [
							1206
						],
						"Ownable": [
							147
						]
					},
					"id": 1207,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1046,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1049,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1207,
							"sourceUnit": 989,
							"src": "66:102:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1047,
										"name": "ERC20Burnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 988,
										"src": "74:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1048,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 864,
										"src": "89:5:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1207,
							"sourceUnit": 148,
							"src": "169:67:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1050,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "177:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1052,
										"name": "ERC20Burnable",
										"nameLocations": [
											"698:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 988,
										"src": "698:13:8"
									},
									"id": 1053,
									"nodeType": "InheritanceSpecifier",
									"src": "698:13:8"
								},
								{
									"baseName": {
										"id": 1054,
										"name": "Ownable",
										"nameLocations": [
											"713:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "713:7:8"
									},
									"id": 1055,
									"nodeType": "InheritanceSpecifier",
									"src": "713:7:8"
								}
							],
							"canonicalName": "NEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1206,
							"linearizedBaseContracts": [
								1206,
								147,
								988,
								864,
								189,
								1014,
								942,
								1044
							],
							"name": "NEX",
							"nameLocation": "691:3:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "848:50:8",
										"statements": [
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1071,
															"name": "trustedMinters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "858:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1073,
														"indexExpression": {
															"id": 1072,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "873:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "858:28:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "887:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "858:33:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "858:33:8"
											}
										]
									},
									"id": 1078,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1064,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1057,
													"src": "811:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1065,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1059,
													"src": "818:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1066,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1063,
												"name": "ERC20",
												"nameLocations": [
													"805:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "805:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "805:21:8"
										},
										{
											"arguments": [
												{
													"id": 1068,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1061,
													"src": "835:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1069,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1067,
												"name": "Ownable",
												"nameLocations": [
													"827:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "827:7:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "827:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "754:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "740:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1056,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "740:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "775:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "761:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "761:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "791:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "783:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:65:8"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "848:0:8"
									},
									"scope": 1206,
									"src": "728:170:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"errorSelector": "9e974a19",
									"id": 1080,
									"name": "NEX_MustBeGreaterThanZero",
									"nameLocation": "909:25:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:2:8"
									},
									"src": "903:34:8"
								},
								{
									"errorSelector": "c266034e",
									"id": 1082,
									"name": "NEX_InsufficientBalance",
									"nameLocation": "948:23:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:2:8"
									},
									"src": "942:32:8"
								},
								{
									"errorSelector": "66385fa3",
									"id": 1084,
									"name": "NotZeroAddress",
									"nameLocation": "985:14:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:2:8"
									},
									"src": "979:23:8"
								},
								{
									"constant": false,
									"id": 1088,
									"mutability": "mutable",
									"name": "trustedMinters",
									"nameLocation": "1046:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1206,
									"src": "1008:52:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1087,
										"keyName": "user",
										"keyNameLocation": "1024:4:8",
										"keyType": {
											"id": 1085,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1016:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1008:29:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1086,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1031:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1107:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1093,
																"name": "trustedMinters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "1125:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1095,
															"indexExpression": {
																"id": 1094,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "1140:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1125:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742054727573746564204d696e746572",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1147:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72",
																"typeString": "literal_string \"Not Trusted Minter\""
															},
															"value": "Not Trusted Minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5ea54f9c3974148e5b9b3e7eeba9beb46f378766515002bd07f1e7e77fd2b72",
																"typeString": "literal_string \"Not Trusted Minter\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1117:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1117:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "1117:51:8"
											},
											{
												"id": 1099,
												"nodeType": "PlaceholderStatement",
												"src": "1178:1:8"
											}
										]
									},
									"id": 1101,
									"name": "isTrustedMinter",
									"nameLocation": "1076:15:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "1100:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1092:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:15:8"
									},
									"src": "1067:119:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "1248:257:8",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1266:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1138,
														"src": "1258:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1258:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1112,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1286:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1290:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1286:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1111,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1276:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1276:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1258:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1116,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "1311:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1321:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1311:11:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "1307:76:8",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "1324:59:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1119,
																	"name": "NEX_MustBeGreaterThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "1345:25:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1345:27:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1121,
															"nodeType": "RevertStatement",
															"src": "1338:34:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1103,
														"src": "1396:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1125,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "1405:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1396:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "1392:79:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "1414:57:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1127,
																	"name": "NEX_InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "1435:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1435:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "1428:32:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1135,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1491:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1132,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1480:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_NEX_$1206_$",
																"typeString": "type(contract super NEX)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1486:4:8",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "1480:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "1480:18:8"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1106,
												"name": "onlyOwner",
												"nameLocations": [
													"1238:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1238:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1238:9:8"
										}
									],
									"name": "burn",
									"nameLocation": "1201:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1229:8:8"
									},
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1214:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "1206:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:16:8"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1248:0:8"
									},
									"scope": 1206,
									"src": "1192:313:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "1588:177:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1151,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1141,
																"src": "1606:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1620:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1612:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1152,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1612:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1612:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1606:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e45583a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1624:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07",
																"typeString": "literal_string \"NEX: mint to the zero address\""
															},
															"value": "NEX: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_caab095dd5f88f67f0c2778c164d98cc27e48a9832d74abedbf2ee17250d2e07",
																"typeString": "literal_string \"NEX: mint to the zero address\""
															}
														],
														"id": 1150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1598:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:58:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "1598:58:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "1674:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1683:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1674:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e45583a206d696e7420616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1686:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6",
																"typeString": "literal_string \"NEX: mint amount must be greater than zero\""
															},
															"value": "NEX: mint amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f89370a0fbd67334670f84083a6e08461e9216caf0d04bce4bf0ffb99b7940b6",
																"typeString": "literal_string \"NEX: mint amount must be greater than zero\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1666:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1666:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1166,
												"nodeType": "ExpressionStatement",
												"src": "1666:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1168,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "1747:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "1751:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1167,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1741:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1741:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1146,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1576:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1580:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1576:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1145,
												"name": "isTrustedMinter",
												"nameLocations": [
													"1560:15:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1101,
												"src": "1560:15:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1560:27:8"
										}
									],
									"name": "mint",
									"nameLocation": "1520:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1533:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1525:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1545:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "1537:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1524:28:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1588:0:8"
									},
									"scope": 1206,
									"src": "1511:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "1836:194:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1851:24:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1181,
																	"name": "trustedMinters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "1852:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1183,
																"indexExpression": {
																	"id": 1182,
																	"name": "_engine",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "1867:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1852:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e45583a20416c6c72656164792074727573746564206d696e746572",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43",
																"typeString": "literal_string \"NEX: Allready trusted minter\""
															},
															"value": "NEX: Allready trusted minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6615bbea2512cf0a19dc53bd821deb4d28fb623f6e8fe32b00531396f461ae43",
																"typeString": "literal_string \"NEX: Allready trusted minter\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1843:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "_engine",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "1923:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1942:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1934:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1190,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1934:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1934:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1923:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e45583a20417574686f726973656420456e67696e652063616e6e6f74206265207a65726f",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d",
																"typeString": "literal_string \"NEX: Authorised Engine cannot be zero\""
															},
															"value": "NEX: Authorised Engine cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3dd9db51a18183ad5571ab24163d9ac8abbfb7260911b4b00545dfbb7fa1738d",
																"typeString": "literal_string \"NEX: Authorised Engine cannot be zero\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1915:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "1915:71:8"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1198,
															"name": "trustedMinters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "1993:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1200,
														"indexExpression": {
															"id": 1199,
															"name": "_engine",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "2008:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1993:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2019:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1993:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1993:30:8"
											}
										]
									},
									"functionSelector": "b86ddfa9",
									"id": 1205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1177,
												"name": "onlyOwner",
												"nameLocations": [
													"1826:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1826:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1826:9:8"
										}
									],
									"name": "setauthorisedEngine",
									"nameLocation": "1780:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "_engine",
												"nameLocation": "1808:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "1800:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:17:8"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:0:8"
									},
									"scope": 1206,
									"src": "1771:259:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1207,
							"src": "682:1350:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1080,
								1082,
								1084
							],
							"usedEvents": [
								24,
								876,
								885
							]
						}
					],
					"src": "40:1993:8"
				},
				"id": 8
			},
			"src/NEXEngine.sol": {
				"ast": {
					"absolutePath": "src/NEXEngine.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"NEX": [
							1206
						],
						"NEXEngine": [
							1514
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1515,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "src/NEX.sol",
							"file": "./NEX.sol",
							"id": 1209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1515,
							"sourceUnit": 1207,
							"src": "39:30:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1208,
										"name": "NEX",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1206,
										"src": "47:3:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1515,
							"sourceUnit": 350,
							"src": "70:85:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1210,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 349,
										"src": "78:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1515,
							"sourceUnit": 943,
							"src": "156:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1212,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "164:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"id": 1214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "228:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1216,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"487:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "487:15:9"
									},
									"id": 1217,
									"nodeType": "InheritanceSpecifier",
									"src": "487:15:9"
								}
							],
							"canonicalName": "NEXEngine",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1215,
								"nodeType": "StructuredDocumentation",
								"src": "254:210:9",
								"text": " NEX : Decentralized Stable Coin\n @author : 0xminer11\n NEX is a decentralized stable coin that is pegged to the US Dollar.\n This contract will handle the minting and burning of the NEX token."
							},
							"fullyImplemented": true,
							"id": 1514,
							"linearizedBaseContracts": [
								1514,
								349
							],
							"name": "NEXEngine",
							"nameLocation": "474:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "77290a1d",
									"id": 1219,
									"name": "NEXEngine_NeedsMoreThanZero",
									"nameLocation": "629:27:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:2:9"
									},
									"src": "623:36:9"
								},
								{
									"errorSelector": "3fce17f7",
									"id": 1221,
									"name": "NEXEngine_ColletralNotAllowed",
									"nameLocation": "670:29:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:9"
									},
									"src": "664:38:9"
								},
								{
									"errorSelector": "27e85e4c",
									"id": 1223,
									"name": "NEXEngine_DepositeFailed",
									"nameLocation": "713:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:2:9"
									},
									"src": "707:33:9"
								},
								{
									"errorSelector": "68171d33",
									"id": 1225,
									"name": "NEXEngine_RedeemFailed",
									"nameLocation": "751:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:9"
									},
									"src": "745:31:9"
								},
								{
									"errorSelector": "778c23f2",
									"id": 1227,
									"name": "NEXEngine_burnFailed",
									"nameLocation": "787:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:9"
									},
									"src": "781:29:9"
								},
								{
									"constant": false,
									"id": 1230,
									"mutability": "immutable",
									"name": "_nex",
									"nameLocation": "977:4:9",
									"nodeType": "VariableDeclaration",
									"scope": 1514,
									"src": "955:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_NEX_$1206",
										"typeString": "contract NEX"
									},
									"typeName": {
										"id": 1229,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1228,
											"name": "NEX",
											"nameLocations": [
												"955:3:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1206,
											"src": "955:3:9"
										},
										"referencedDeclaration": 1206,
										"src": "955:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_NEX_$1206",
											"typeString": "contract NEX"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1234,
									"mutability": "mutable",
									"name": "_priceFeeds",
									"nameLocation": "1040:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1514,
									"src": "988:63:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 1233,
										"keyName": "token",
										"keyNameLocation": "1004:5:9",
										"keyType": {
											"id": 1231,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "996:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "988:43:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "priceFeed",
										"valueNameLocation": "1021:9:9",
										"valueType": {
											"id": 1232,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1013:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1238,
									"mutability": "mutable",
									"name": "_collateralDeposited",
									"nameLocation": "1099:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1514,
									"src": "1057:62:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1237,
										"keyName": "token",
										"keyNameLocation": "1073:5:9",
										"keyType": {
											"id": 1235,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1065:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1057:33:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1236,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1242,
									"mutability": "mutable",
									"name": "s_NexMinted",
									"nameLocation": "1173:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1514,
									"src": "1125:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1241,
										"keyName": "user",
										"keyNameLocation": "1141:4:9",
										"keyType": {
											"id": 1239,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1133:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1125:39:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "amount",
										"valueNameLocation": "1157:6:9",
										"valueType": {
											"id": 1240,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1149:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "5285b574be509117ddacaa5a2d92a4b3e23f805547f65b5b77de327acd17506e",
									"id": 1250,
									"name": "DepositeColletral",
									"nameLocation": "1291:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1325:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1309:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"indexed": true,
												"mutability": "mutable",
												"name": "colletral",
												"nameLocation": "1347:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1331:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1331:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "1358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:65:9"
									},
									"src": "1285:89:9"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "1530:105:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1254,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "1544:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1554:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1544:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1261,
												"nodeType": "IfStatement",
												"src": "1540:78:9",
												"trueBody": {
													"id": 1260,
													"nodeType": "Block",
													"src": "1557:61:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1257,
																	"name": "NEXEngine_NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "1578:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1578:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1259,
															"nodeType": "RevertStatement",
															"src": "1571:36:9"
														}
													]
												}
											},
											{
												"id": 1262,
												"nodeType": "PlaceholderStatement",
												"src": "1627:1:9"
											}
										]
									},
									"id": 1264,
									"name": "moreThanZero",
									"nameLocation": "1501:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1522:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1514:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1514:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1513:16:9"
									},
									"src": "1492:143:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "1681:138:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1268,
															"name": "_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "1695:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1270,
														"indexExpression": {
															"id": 1269,
															"name": "_collateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "1707:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1695:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1731:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1723:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1723:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1723:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1695:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "1691:122:9",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "1735:78:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1276,
																	"name": "NEXEngine_ColletralNotAllowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1221,
																	"src": "1756:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1756:31:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1278,
															"nodeType": "RevertStatement",
															"src": "1749:38:9"
														},
														{
															"id": 1279,
															"nodeType": "PlaceholderStatement",
															"src": "1801:1:9"
														}
													]
												}
											}
										]
									},
									"id": 1283,
									"name": "isAllowed",
									"nameLocation": "1650:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "_collateral",
												"nameLocation": "1668:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "1660:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1660:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1659:21:9"
									},
									"src": "1641:178:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "1898:86:9",
										"statements": [
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1292,
															"name": "_priceFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "1908:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 1294,
														"indexExpression": {
															"id": 1293,
															"name": "_colletral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "1920:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1908:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "_priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "1934:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1908:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "1908:36:9"
											},
											{
												"expression": {
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "_nex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1230,
														"src": "1954:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NEX_$1206",
															"typeString": "contract NEX"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1300,
																"name": "_stableCoin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "1965:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1299,
															"name": "NEX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "1961:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_NEX_$1206_$",
																"typeString": "type(contract NEX)"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1961:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_NEX_$1206",
															"typeString": "contract NEX"
														}
													},
													"src": "1954:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_NEX_$1206",
														"typeString": "contract NEX"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "1954:23:9"
											}
										]
									},
									"id": 1305,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_colletral",
												"nameLocation": "1845:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1837:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "1865:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1857:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1857:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "_stableCoin",
												"nameLocation": "1885:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1877:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:61:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1898:0:9"
									},
									"scope": 1514,
									"src": "1825:159:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "2292:119:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1317,
															"name": "tokenCollateralAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "2326:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "amountCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "2349:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1316,
														"name": "_depositeCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "2306:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:60:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "2306:60:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1322,
															"name": "amountNexToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "2388:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "mintNEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2380:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "2380:24:9"
											}
										]
									},
									"functionSelector": "9268297f",
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1313,
												"name": "nonReentrant",
												"nameLocations": [
													"2279:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2279:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2279:12:9"
										}
									],
									"name": "depositeColletralMintNEX",
									"nameLocation": "2137:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "tokenCollateralAddress",
												"nameLocation": "2179:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2171:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amountCollateral",
												"nameLocation": "2219:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2211:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "amountNexToMint",
												"nameLocation": "2253:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "2245:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2161:108:9"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2292:0:9"
									},
									"scope": 1514,
									"src": "2128:283:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "2491:424:9",
										"statements": [
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1333,
															"name": "_collateralDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2627:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1336,
														"indexExpression": {
															"expression": {
																"id": 1334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2648:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2652:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2648:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2627:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1337,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "2663:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2627:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "2627:43:9"
											},
											{
												"assignments": [
													1341
												],
												"declarations": [
													{
														"constant": false,
														"id": 1341,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2685:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "2680:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1340,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2680:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2726:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2726:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1350,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2746:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NEXEngine_$1514",
																		"typeString": "contract NEXEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NEXEngine_$1514",
																		"typeString": "contract NEXEngine"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2738:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2738:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2738:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1352,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "2753:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1343,
																	"name": "_colletral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "2701:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1342,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "2694:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2694:18:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2713:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 941,
														"src": "2694:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2694:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2680:81:9"
											},
											{
												"condition": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2775:8:9",
													"subExpression": {
														"id": 1355,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2776:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "2771:72:9",
												"trueBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "2785:58:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1357,
																	"name": "NEXEngine_DepositeFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "2806:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2806:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1359,
															"nodeType": "RevertStatement",
															"src": "2799:33:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1363,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2875:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2879:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2875:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1365,
															"name": "_colletral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "2887:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "2899:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1362,
														"name": "DepositeColletral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "2857:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2857:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "EmitStatement",
												"src": "2852:55:9"
											}
										]
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_depositeCollateral",
									"nameLocation": "2426:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "_colletral",
												"nameLocation": "2454:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2446:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2474:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2466:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2466:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2445:37:9"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:9"
									},
									"scope": 1514,
									"src": "2417:498:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1389,
										"nodeType": "Block",
										"src": "3110:96:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1383,
															"name": "tokenCollateralAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3142:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "amountCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "3166:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1385,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3184:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3188:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3184:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1382,
														"name": "_redeemCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "3124:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3124:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "3124:71:9"
											}
										]
									},
									"functionSelector": "670a14ea",
									"id": 1390,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1376,
												"name": "nonReentrant",
												"nameLocations": [
													"3050:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3050:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3050:12:9"
										},
										{
											"arguments": [
												{
													"id": 1379,
													"name": "amountCollateral",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1374,
													"src": "3084:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1380,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1378,
												"name": "moreThanZero",
												"nameLocations": [
													"3071:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1264,
												"src": "3071:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3071:30:9"
										}
									],
									"name": "redeemCollectral",
									"nameLocation": "2930:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "tokenCollateralAddress",
												"nameLocation": "2964:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2956:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2956:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amountCollateral",
												"nameLocation": "3004:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "2996:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:76:9"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:0:9"
									},
									"scope": 1514,
									"src": "2921:285:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "3362:137:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1400,
															"name": "nexAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "3381:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1401,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3391:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3395:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3391:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3402:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3406:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3402:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1399,
														"name": "_burnNEX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "3372:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (uint256,address,address)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3372:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "3372:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "tokenCollateralAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "3441:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "collateralAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "3464:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1410,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3481:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3485:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3481:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1407,
														"name": "_redeemCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "3423:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3423:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "3423:69:9"
											}
										]
									},
									"functionSelector": "b91d1c91",
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemColletralForNex",
									"nameLocation": "3221:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "tokenCollateralAddress",
												"nameLocation": "3260:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "3252:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "collateralAmount",
												"nameLocation": "3300:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "3292:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "nexAmount",
												"nameLocation": "3334:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "3326:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:102:9"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3362:0:9"
									},
									"scope": 1514,
									"src": "3212:287:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "3594:216:9",
										"statements": [
											{
												"expression": {
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1424,
															"name": "s_NexMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "3604:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1426,
														"indexExpression": {
															"id": 1425,
															"name": "onbehalf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "3616:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3604:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1427,
														"name": "amountNexToburn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "3629:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3604:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "3604:40:9"
											},
											{
												"assignments": [
													1431
												],
												"declarations": [
													{
														"constant": false,
														"id": 1431,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3660:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1449,
														"src": "3655:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1430,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3655:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"initialValue": {
													"arguments": [
														{
															"id": 1434,
															"name": "fromnex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "3688:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1437,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3704:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NEXEngine_$1514",
																		"typeString": "contract NEXEngine"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NEXEngine_$1514",
																		"typeString": "contract NEXEngine"
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3696:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1435,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3696:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3696:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1439,
															"name": "amountNexToburn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "3711:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1432,
															"name": "_nex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "3670:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NEX_$1206",
																"typeString": "contract NEX"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3675:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 547,
														"src": "3670:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3670:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3655:72:9"
											},
											{
												"condition": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3741:8:9",
													"subExpression": {
														"id": 1442,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "3742:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "3738:66:9",
												"trueBody": {
													"id": 1447,
													"nodeType": "Block",
													"src": "3750:54:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1444,
																	"name": "NEXEngine_burnFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1227,
																	"src": "3771:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3771:22:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1446,
															"nodeType": "RevertStatement",
															"src": "3764:29:9"
														}
													]
												}
											}
										]
									},
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnNEX",
									"nameLocation": "3517:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "amountNexToburn",
												"nameLocation": "3534:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3526:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "onbehalf",
												"nameLocation": "3559:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3551:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "fromnex",
												"nameLocation": "3576:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "3568:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:59:9"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3594:0:9"
									},
									"scope": 1514,
									"src": "3508:302:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "3868:205:9",
										"statements": [
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1455,
															"name": "s_NexMinted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "3878:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1458,
														"indexExpression": {
															"expression": {
																"id": 1456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3890:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3894:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3890:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3878:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1459,
														"name": "_amountNexToMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "3905:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3878:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "3878:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4036:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4040:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4036:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "_amountNexToMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4048:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1462,
															"name": "_nex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "4026:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_NEX_$1206",
																"typeString": "contract NEX"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4031:4:9",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1173,
														"src": "4026:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4026:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "4026:39:9"
											}
										]
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintNEX",
									"nameLocation": "3825:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_amountNexToMint",
												"nameLocation": "3841:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "3833:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:26:9"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3868:0:9"
									},
									"scope": 1514,
									"src": "3816:257:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "4109:2:9",
										"statements": []
									},
									"functionSelector": "28a07025",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "liquidate",
									"nameLocation": "4088:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4097:2:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4109:0:9"
									},
									"scope": 1514,
									"src": "4079:32:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "4153:2:9",
										"statements": []
									},
									"functionSelector": "a5f352b7",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getHealthFactor",
									"nameLocation": "4126:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4141:2:9"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:0:9"
									},
									"scope": 1514,
									"src": "4117:38:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "4259:230:9",
										"statements": [
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1488,
															"name": "_collateralDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "4269:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1491,
														"indexExpression": {
															"expression": {
																"id": 1489,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4290:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4294:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4290:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4269:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1492,
														"name": "amountCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "4305:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4269:52:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "4269:52:9"
											},
											{
												"assignments": [
													1496
												],
												"declarations": [
													{
														"constant": false,
														"id": 1496,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4337:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "4332:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1495,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4332:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1504,
												"initialValue": {
													"arguments": [
														{
															"id": 1501,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "4382:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "amountCollateral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "4386:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1498,
																	"name": "collateralAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4354:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1497,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "4347:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$942_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4347:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$942",
																"typeString": "contract IERC20"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4373:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "4347:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4347:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4332:71:9"
											},
											{
												"condition": {
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4418:8:9",
													"subExpression": {
														"id": 1505,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "4419:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "4414:69:9",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "4427:56:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1507,
																	"name": "NEXEngine_RedeemFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "4448:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4448:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1509,
															"nodeType": "RevertStatement",
															"src": "4441:31:9"
														}
													]
												}
											}
										]
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_redeemCollateral",
									"nameLocation": "4170:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "collateralAddress",
												"nameLocation": "4196:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4188:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amountCollateral",
												"nameLocation": "4222:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4214:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4214:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4247:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "4239:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:63:9"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4259:0:9"
									},
									"scope": 1514,
									"src": "4161:328:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1515,
							"src": "465:4026:9",
							"usedErrors": [
								1219,
								1221,
								1223,
								1225,
								1227
							],
							"usedEvents": [
								1250
							]
						}
					],
					"src": "39:4453:9"
				},
				"id": 9
			}
		}
	}
}